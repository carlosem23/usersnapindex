
title: "Integrations"
slug: "3rd-party-integrations-customer-feedback-projects"
excerpt: "Here you will find the 3rd-party integrations available for Usersnap platform projects."
hidden: false
createdAt: "2019-11-21T11:16:06.536Z"
updatedAt: "2023-01-20T11:12:33.609Z"

[block:api-header]
{
  "title": "Usersnap offers native integrations for the following services:"
}
[/block]
- Asana
- Azure Devops
- Email
- GitHub
- GitLab
- Jira Cloud
- Jira Server
- Microsoft Teams
- Slack Integration
- Teamwork
- Trello
- Webhook
- Zendesk
- Zapier
Here's a short video to show you how to connect tools:
[block:html]
{
  "html": "\n  \n\n"
}
[/block]
[block:api-header]
{
  "title": "You can also connect to the following services via Zapier"
}
[/block]
- ActiveCollab
- Aha!
- Axosoft
- Basecamp
- Clickup
- Evernote
- Fogbugz
- Gitlab
- Intercom
- Jira Service Desk
- Kanbanize
- Monday.com
- Pivotal Tracker
- Productboard
- Redbooth
- Redmine
- Servicenow
- Teamwork
- Zendesk
Read more about the integration via Zapier in this guide.
[block:api-header]
{
  "title": "Connect Usersnap to your existing Enterprise software solutions"
}
[/block]
Using integrations, you can connect Usersnap projects to your existing project management or customer support systems! You can connect them directly with native integration, via Webhooks or via Zapier. 
With Zapier, you have access to 2,000 third-party solutions. 
With the Webhook integration, you can connect most of the software solutions, including home-made software solutions.
If there are integrations connected to the project already, you can still "add integrations".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4892d21-Add_integration.png",
        "Add integration.png",
        2144,
        227,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/65e8bdc-integrations.png",
        "integrations.png",
        1524,
        888,
        "#f5f7f8"
      ]
    }
  ]
}
[/block]

title: "4. Mobile app form (Updated...)"
slug: "4-mobile-app-form-updated"
excerpt: "Native mobile app customer feedback"
hidden: true
createdAt: "2023-01-19T10:02:49.559Z"
updatedAt: "2023-01-19T10:02:59.203Z"

With the Usersnap’s mobile software development kit (SDK), you can easily ask your mobile app users for feedback and streamline the insights all in one place.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/15e69e1-collection_type_4.png",
        "collection type 4.png",
        787,
        716,
        "#f5faf6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Please note that our Mobile SDK is only available for Scale and Ultimate plan users."
}
[/block]
[block:api-header]
{
  "title": "Which feedback forms can you use?"
}
[/block]
You can add or send the rating surveys (NPS, CSAT, like/dislike), multi-choice survey, feature request form and interview invitation on your mobile applications. 
The screen capturing features and annotation toolbar are not supported at the moment. That's the reason why some projects types are not yet supported (see below).
Other feedback fields (such as email, attachment, short/long answers, checkbox, label, assignee, paragraph) are available to customize. 
Project types not supported are: 
- Beta testing
- User feedback
- Bug tracking
- Quick issue reporting
- Feedback menu
[block:api-header]
{
  "title": "Does Usersnap capture mobile app metadata with each feedback?"
}
[/block]
Yes, when users submit a feedback item, the below details are automatically attached for you to see in Usersnap’s dashboard.
- Date and time
- View of application
- Version of app
- Device
- Operating system 
[block:api-header]
{
  "title": "How to call the feedback widgets?"
}
[/block]
Unlike for web applications where you can choose between a feedback button or auto-popup and set display paths and frequency, with the mobile app you need to define the open calls for each of your feedback projects. 
You can use any native button and element to call the feedback form. Or you can implement other triggers based on user actions as the call to open Usersnap’s feedback forms.
[block:api-header]
{
  "title": "How to install Usersnap on your mobile application?"
}
[/block]
In your project, you can download the SDK for both iOS and Android systems. Add the SDK as an external framework to your application and initialize the SDK by your project API-Key.
This is the Apple iOS SDK (Beta) for your use: For full technical documentation, please download zip file.
This is the Android SDK (Beta) for your use: Full technical documentation, please download zip file
[block:api-header]
{
  "title": "Superior bug reporting on native mobile platforms"
}
[/block]
If you are looking for bug reporting and mobile app performance for native mobile platforms, we recommend our partner solution Instabug.
[block:api-header]
{
  "title": "Can I preview the feedback form on a mobile environment?"
}
[/block]
The configuration preview is currently showing the web browser version, however the mobile app version will look very similar. Here are some examples:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1b944f1-Ashleys_Visuals__Ideas_Blog_videos_LPs_and_miscellaneous_4.png",
        "Ashley's Visuals & Ideas (Blog, videos, LPs and miscellaneous) (4).png",
        960,
        540,
        "#dddde6"
      ],
      "caption": ""
    }
  ]
}
[/block]
The demo page preview mode (when you click “Test” to try out the widget before you set it live) only exhibits the web browser environment.
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Attention:"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Currently our mobile sdk doesn't support react native directly. \nHowever, there are ways to use native SDKs in react-native:\n\nHow to use platform native modules in React Native is documented here:\nAndroid: https://reactnative.dev/docs/native-modules-android\nIOS: https://reactnative.dev/docs/native-modules-ios",
  "title": "Something to learn about the mobile sdk:"
}
[/block]

title: "API examples"
slug: "api-examples"
hidden: true
createdAt: "2021-02-03T13:24:39.881Z"
updatedAt: "2022-05-16T06:34:06.352Z"

 Examples of how to use the API 


Set a language via the API


Triggering a Usersnap event


Click a link to open the feedback widget


Set variables when the widget is opened - button clicked


Open a widget after 5 seconds


Open a feedback widget after a flow/process is finished


Show the feedback widget after a user leaves the browser window - exit-intent


How to set a project to show as a feedback button and auto-popup on different pages? 


How to pop widgets to different audiences? 


How to have feedback items pre-tagged according to certain criteria? 
[block:api-header]
{
  "title": "Set a language via the API"
}
[/block]
Set the language when you initiate the Usersnap code snippet (locale: 'de'). 


Here are the official codes for each language (ISO-639-1-Codes).
(except for traditional (zh-TW) vs simplified (zh-CN) Chinese:
[block:html]
{
  "html": "[ \n  'cs',\n\t'de',\n  'en',\n  'es',\n  'fr',\n  'hr',\n  'hu',\n  'it',\n  'ja',\n  'ko',\n  'lt',\n  'nl',\n  'pl',\n  'ro',\n  'ru',\n  'sk',\n  'sv',\n  'tr',\n  'pt',\n  'zh-CN',\n  'zh-TW'\n]"
}
[/block]
Place the correct language code into the "locale" variable:
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "javascript"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Triggering a Usersnap event - example"
}
[/block]
You can trigger widgets to be opened if a certain Usersnap event is fired. This example shows you how to trigger a Usersnap event. 
Setup a widget to trigger when a specific Usersnap event is logged:
Go to your project's "Configuration" page -> "Targeting" tab.
Look for "Trigger & frequency" section of "Targeting" tab. For "Select how you would like to activate this widget" choose "API event". 
In "Event" field enter your desired event name e.g. my-awesome-event (do not use quotes) and make sure to hit the "Save" button on the bottom of the page. 
Your project needs to be set live (top right corner of page).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/8efa762-api_event.png",
        "api event.png",
        806,
        222,
        "#f5f5f8"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
To trigger the widget when the event is logged, use following code example:
[block:code]
{
  "codes": [
    {
      "code": "// step 1: initialize the global snippet and make Usersnap API available\nwindow.onUsersnapCXLoad = function(api) {\n  api.init();\n  // step 2: trigger the widget using a logged event\n  api.logEvent(\"my-awesome-event\");\n}\nvar script = document.createElement('script');\nscript.defer = 1;\nscript.src = 'https://widget.usersnap.com/global/load/YOUR-GLOBAL-APIKEY?onload=onUsersnapCXLoad';\ndocument.getElementsByTagName('head')[0].appendChild(script);",
      "language": "javascript"
    }
  ]
}
[/block]
More related info here.
[block:api-header]
{
  "title": "Set variables when the widget is opened (button clicked)"
}
[/block]
You have to install the Usersnap snippet code before. And don't forget to pass on the API to the global variable window.Usersnap for this example.
If you want to pass certain information to  all  your projects, once the widget is opened, you can add the code like this.
[block:code]
{
  "codes": [
    {
      "code": "widgetApi.on('open', (event) => {\n  console.log('setting value now!');\n  event.api.setValue('visitor', 'set-on-open@usersnap.com');\n  event.api.setValue('custom', { userId: '123', environment: 'staging' });\n  event.api.setValue('labels', 'bug');\n  event.api.setValue('assignee', 'user@usersnap.com');\n  alert('now, values are set');\n});",
      "language": "javascript"
    }
  ]
}
[/block]
If you want to pass certain information only to a certain project, once the widget is opened, you can add the code like this.
[block:code]
{
  "codes": [
    {
      "code": "window.Usersnap.on('open', (event) => {\n  if (event.apiKey === '[Project-API-key]') {\n    console.log('setting value now!')\n    event.api.setValue('visitor', 'set-on-open@usersnap.com')\n    event.api.setValue('custom', { userId: '123', environment: 'staging' })\n    alert('now, values are set')\n  }\n})",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Open a feedback widget after a flow/process is finished"
}
[/block]
Let's assume you have a new flow in your application. After the process or flow is finished, your development team should just fire an Usersnap event and you can display a widget for it.
In the "Targeting" tab under the section of "Trigger & frequency" of your project (in the dashboard), set the activation to "API event". Add the name of the event. Here it's "new_payment_is_finished". 
Eh voila, the feedback widget pops up after the process is finished.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Using the full page collector for sending feedback requests via email"
}
[/block]
The easiest way to do that is our newly-released feature, we call it tenderly full page collector.
[block:api-header]
{
  "title": "Using the Usersnap API to open a widget via a link in an email"
}
[/block]
However, if you feel a bit techier today, you can send a link to a page on your website and initiate a widget via Auto-Popup e.g. https://www.demowebsite.com/?emailtrigger=true ... One of our co-founders thinks he's a developer and build this example for you. 😀
The variable "emailtrigger=true" is only to avoid that the widget popups up on your start page, you only want to show it when your users are clicking on the link in your email. You define in the "Configuration" section in the "Display" tab that this widget should only be shown if the URL contains "?emailtrigger=true".
[block:api-header]
{
  "title": "How to set a project to show as a feedback button and auto-popup on different pages?"
}
[/block]
Please first select the project's "Activation" to "Button" with "Audience" set to "Nobody".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c4ad10b-api_1.png",
        "api 1.png",
        990,
        460,
        "#f4f4f6"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
And then please use the following snippet:
[block:code]
{
  "codes": [
    {
      "code": "window.onUsersnapCXLoad = function (api) {\n    api.init();\n    window.Usersnap = api\n\n    // to show the button for the widget\n    window.Usersnap.show('[Project-Api-Key]')\n\n    // to show the widget\n    window.Usersnap\n        .show('[Project-Api-Key]', { button: null })\n        .then(widgetApi => widgetApi.open())\n}\nvar script = document.createElement('script');\nscript.defer = 1;\nscript.src = 'https://widget.usersnap.com/global/load/[Global-Api-Key]?onload=onUsersnapCXLoad';\ndocument.getElementsByTagName('head')[0].appendChild(script);",
      "language": "javascript",
      "name": null
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "How to pop widgets to different audiences?"
}
[/block]
If you have 2 groups of users who should see different widgets, please kindly take the following steps.

Create 2 projects, one for each group of users (for example, one for internal users, whilst the other one for external users)
Set "Audience" of both projects to "Nobody".
Use our global snippet with the following code:
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "javascript"
    }
  ]
}
[/block]
More information about API for this particular case can be found here.

Please note that the above snippet is using "showWidgetForInternalUsers" function which identifies whether the widget should be shown to internal users. You can use your own function as well but in any case it should be defined before the code snippet, somewhere on the page done on your end.

title: "Usersnap API"
slug: "api-for-usersnap-project"
hidden: true
createdAt: "2019-07-12T08:59:06.510Z"
updatedAt: "2022-06-02T10:02:59.326Z"

[block:callout]
{
  "type": "info",
  "body": "Please, be aware that this API needs the standard Usersnap snippet code (the global snippet). This snippet is a code you or your developer have to install once and then, you can decide which feedback widget should be displayed on what pages. The following API examples are ONLY for the standard Usersnap snippet installations.",
  "title": "Usersnap snippet code (global snippet) REQUIRED"
}
[/block]
[block:api-header]
{
  "title": "Using API methods"
}
[/block]
If you have further questions on the installation and how to use the global API-key, go here. If you are using a well-known framework for your web application, read this section
[block:api-header]
{
  "title": "Initializing the API"
}
[/block]
The init() function initializes the API. It must be called before calling any other API method.
init() can be used to set default values that will be submitted to Usersnap, as follows:
[block:api-header]
{
  "title": "Setting default values when initializing the widget"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  custom: {\n    applicationLanguage : \"de\",\n  },\n  user: {\n    userId: \"123\",\n    email: \"test@usersnap.com\",\n  },\n});",
      "language": "javascript",
      "name": "Set default values"
    }
  ]
}
[/block]
  - "custom":  Any custom data that should be passed along with the feedback
  - "user": User data from known users (can include email or userId)
     - user.email: the email of the user. Is used to determine whether to show a widget or not.
     - user.userId: the id of the user. Is used to determine whether to show a widget or not.
The custom data will show up on your Usersnap dashboard as follows:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a65e5fe-2-custom-data.png",
        "2-custom-data.png",
        1290,
        1470,
        "#c7c7ca"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Passing custom data with Embed widget",
  "body": "It is possible to pass custom data via Embed the rating widget into an email .\n\nPlease use custom URL parameter with an encoded JSON valid value. \nFor example, https://collector.usersnap.com/[PROJECT-API-KEY]?custom={%22someUserAttribute%22:12345}"
}
[/block]
"label" and "assignee":  The labels and assignees can be set dynamically behind the scene when the widget is initiated.
Basically, this API grants you the option to have the values set even when the fields are hidden.
[block:api-header]
{
  "title": "These events are available via the API"
}
[/block]
Events are special behavior in the code that is calling the widgets to open, close, etc. From now on the API events are available for both: project-specific widgets and global snippet widgets. Additionally, it also works for widgets that open other widgets and you can differentiate between those.


load – The widget was loaded (initialized)


destroy – The widget was destroyed


open – The widget was opened


closing - Before the widget is closed


close – The widget was closed (after closed)


submit – The widget’s form was submitted
[block:callout]
{
  "type": "info",
  "body": "These events should not be mixed up with the Usersnap event that can be fired in case you want to pop up a widget after a user's action (AutoPopup)."
}
[/block]


[block:api-header]
{
  "title": "How to use events in your Usersnap snippet code"
}
[/block]
Some examples of how you can use the Usersnap API events.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "javascript"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Show a feedback button"
}
[/block]
Shows the feedback button. Calling this method disables the display rules for this widget.

PROJECT_API_KEY: the API key of the project (not the global API-key of the account)
[block:code]
{
  "codes": [
    {
      "code": "api.show('[PROJECT_API_KEY]')",
      "language": "javascript",
      "name": "Show feedback button"
    }
  ]
}
[/block]

[block:api-header]
{
  "title": "Hide a feedback button"
}
[/block]
Hides the feedback button. Calling this method disables the display rules for this widget.

PROJECT_API_KEY: the API key of the project (not the global API-key of the account)
[block:code]
{
  "codes": [
    {
      "code": "api.hide('[PROJECT_API_KEY]')",
      "language": "javascript",
      "name": "Hide feedback button"
    }
  ]
}
[/block]
The feedback button of a certain project can be hidden/displayed independently via the API.
Just call those methods and pass the APIKEY of the according project.
[block:api-header]
{
  "title": "Open a feedback widget"
}
[/block]
PROJECT_API_KEY: the API key of the project (not the global API-key of the account)

Displays a widget via the API.
[block:code]
{
  "codes": [
    {
      "code": "api.show('[PROJECT_API_KEY]'').then((widgetApi) => widgetApi.open())",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Hide a feedback widget"
}
[/block]
Hides a widget via the API.
[block:code]
{
  "codes": [
    {
      "code": "api.hide('[PROJECT_API_KEY]'').then((widgetApi) => widgetApi.open())",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Destroy the API"
}
[/block]
Destroys the global API. You need to call init again before calling any other method.
[block:code]
{
  "codes": [
    {
      "code": "api.destroy()",
      "language": "javascript",
      "name": "JavaScript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Passing user information via the API"
}
[/block]
You can pass user information to Usersnap to increase the options to target specific user groups and provide targeted experiences.
[block:code]
{
  "codes": [
    {
      "code": "// assuming a global widget config looking something like this\nwindow.onUsersnapCXLoad = function(api) {\n    api.init({\n    user: {\n      email: \"customer@example.com\", // email address is pre-set\n      userId: \"USER_ID\", // UserID defines that a user is \"logged\" for Usersnap\n    }\n  });\n}",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Trigger a Usersnap event"
}
[/block]
Triggers a Usersnap event that can be used to display the widget. It evaluates the display rules taking the last event into account.

eventName: the event name (string)

Triggering an Usersnap event - example
More related info here.
[block:api-header]
{
  "title": "How to show the button only on desktop or mobile screens?"
}
[/block]
Here's a little custom coding to show your feedback button only on desktop screens. Or you can use a similar if-clause to only show the feedback button on mobile devices. If you have any questions, please contact our lovely customer success team.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Installation"
}
[/block]
Please, go to the Installation section.
[block:api-header]
{
  "title": "Remove tracking of the location"
}
[/block]
If you don't want Usersnap to track the location (country, city) of the users, you can deactivate this by initiating the snippet code with this parameter. 

collectGeoLocation: 'none'
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
For any further questions, please contact our lovely customer success team.
[block:api-header]
{
  "title": "Deactivate using localStorage (Cookies)"
}
[/block]
The Usersnap feedback widgets do not use cookies, but we use the localStorage to store a few parameters. From a data privacy standpoint (GDPR), the localStorage is seen similar to cookies. If you want to deactivate the localStorage for your website or web application, you can do this with the following parameters.

Please, be aware that this has a few disadvantages for your users. For example, the email is not remembered for the next time, they give feedback. Also, the assignees are not stored.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Deactivate GoogleFonts in the feedback widgets"
}
[/block]
The Usersnap feedback widgets use GoogleFonts to make the widgets look nicer. If you don't want to use GoogleFonts, you can deactivate them with the following attribute.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Examples for installation on well-known frameworks"
}
[/block]
Check out sample code for installing widgets in different popular frameworks in the repository below.
[block:embed]
{
  "html": false,
  "url": "https://github.com/usersnap/public",
  "title": "usersnap/public",
  "favicon": "https://github.com/favicon.ico",
  "image": "https://avatars0.githubusercontent.com/u/3296843?s=400&v=4"
}
[/block]

title: "API reference"
slug: "api-reference-1"
hidden: false
createdAt: "2022-07-29T11:11:45.608Z"
updatedAt: "2022-07-29T11:11:45.608Z"

Please go to our API reference

title: "Asana"
slug: "asana"
hidden: false
createdAt: "2020-06-29T12:34:01.903Z"
updatedAt: "2021-04-23T07:03:10.534Z"

[block:api-header]
{
  "title": "Connect Usersnap with Asana"
}
[/block]
Usersnap and Asana can be easily connected.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Asana from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/679a670-asana_1.png",
        "asana 1.png",
        1191,
        550,
        "#f4f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign into your Asana account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1d60709-asana_2.png",
        "asana 2.png",
        718,
        831,
        "#fcd3d4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/019440b-Asana.png",
        "Asana.png",
        703,
        786,
        "#f7f7f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
A test feedback item can be sent right in the configuration's page.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3b27cfa-asana_4.png",
        "asana 4.png",
        1204,
        824,
        "#8f9090"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can manage the items pushed to Asana directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5b759bc-asana_5.png",
        "asana 5.png",
        679,
        828,
        "#f7f8f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Authenticate users who submit feedback"
slug: "authenticate-users-who-submit-feedback"
hidden: false
createdAt: "2021-02-04T10:35:19.160Z"
updatedAt: "2023-01-10T09:53:50.831Z"

[block:api-header]
{
  "title": "Logged-in users giving feedback"
}
[/block]
If you want that the users of your web application are already authenticated (logged-in) and recognized by their email, you can do the following. 
[block:api-header]
{
  "title": "Connect Usersnap with OKTA (or other SSO solutions)?"
}
[/block]
Currently, the Usersnap dashboard can not only be connected via login and password but also SSO solutions. 
More information on Single-Sign-On (SSO) 
And you can authenticate your users submitting feedback items via Usersnap in the Usersnap widget.
[block:api-header]
{
  "title": "Authenticate users with their email in the Usersnap widget"
}
[/block]
When you initiate the Usersnap widget, set up a script to get the email and/or UserID of the users who are logged into your web application.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
Now, you can use the logged-in audience in the Configuration section and you can hide the email field in the widgets. The email will be automatically added to each feedback item.
[block:callout]
{
  "type": "warning",
  "title": "Usersnap space (global) code snippet required",
  "body": "Please, be aware that this code example works only if you are using the space (global) snippet."
}
[/block]

title: "Azure DevOps (To be reviewed)"
slug: "azure-devops-to-be-reviewed"
hidden: true
createdAt: "2023-01-09T12:01:03.048Z"
updatedAt: "2023-01-11T23:42:55.671Z"

[block:api-header]
{
  "title": "Connect Usersnap with Azure Devops"
}
[/block]
Usersnap and Microsoft Azure DevOps, two powerful platforms, can be integrated to provide several benefits to your development process. The #1 customer feedback software, Usersnap, enables quick and easy submission of customer feedback and bug reports. When connected to Azure DevOps, a platform that streamlines the software development process, your team can efficiently address customer concerns and improve collaboration. Together, they offer streamlined feedback management, faster issue resolution, and improved communication with customers, resulting in a better overall experience.
With the integration of Usersnap and Azure DevOps, your team can:
* Seamlessly transfer customer feedback into Azure DevOps issues
* Effectively track progress on customer feedback and bugs
* Improve visibility for identifying trends and patterns
* Simplify feedback management by keeping all customer feedback in one place
 Here's how it works: 
To integrate your Usersnap project with Azure DevOps, go to the Integration tab in your Usersnap project and select Azure DevOps from the grid. Then, sign in to your Azure DevOps account
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/346ce37-Azure_Devops_1.png",
        "Azure Devops 1.png",
        1482,
        713,
        "#f3f5f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62bc0d6-Azure_Devops_2.png",
        "Azure Devops 2.png",
        496,
        703,
        "#f6f6f8"
      ]
    }
  ]
}
[/block]
You can send a test feedback item directly from the configuration page by clicking on the "Send Test Feedback" button.
After that, you can check the test feedback item sent to your Azure DevOps dashboard:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2ff288c-Azure_Devops_3.png",
        "Azure Devops 3.png",
        815,
        559,
        "#d3cfeb"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "If the account you are using to connect is only a guest account in the Active Directory, you will need to use an account that is a \"member\" of the Active Directory in order to successfully connect to Azure DevOps\n\nAdditionally, users should also check if you have the Third-Party OAuth Access option enabled in your Azure DevOps Organization Settings as followed: \n\nOrganization Settings -> Security -> Policies -> Third-party application access via OAuth\n\nUsersnap is using the OAuth2 flow.  More related info can be found in Authorize access to REST APIs with OAuth 2.0 and Get started with permissions, access, and security groups.",
  "title": "ActiveDirectory in conjunction with Azure Devops"
}
[/block]

title: "Azure Devops"
slug: "azure-devops"
hidden: false
createdAt: "2020-11-19T12:40:20.865Z"
updatedAt: "2022-11-25T08:48:44.641Z"

[block:api-header]
{
  "title": "Connect Usersnap with Azure Devops"
}
[/block]
Usersnap and Azure Devops can be easily connected.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Azure DevOps from the grid.
Simply sign in to your Azure Devlops account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/346ce37-Azure_Devops_1.png",
        "Azure Devops 1.png",
        1482,
        713,
        "#f3f5f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62bc0d6-Azure_Devops_2.png",
        "Azure Devops 2.png",
        496,
        703,
        "#f6f6f8"
      ]
    }
  ]
}
[/block]
A test feedback item can be sent right in the configuration's page.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2ff288c-Azure_Devops_3.png",
        "Azure Devops 3.png",
        815,
        559,
        "#d3cfeb"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "When the connecting account is only a guest account in the ActiveDirectory, please use an account that is a \"member\" in the ActiveDirectory in order to connect to Azure Devops.\"\n\nAdditionally, users should also check if you have the Third-Party OAuth Access option enabled in your Azure DevOps Organization Settings as followed: \n\nOrganization Settings -> Security -> Policies -> Third-party application access via OAuth\n\nUsersnap is using the OAuth2 flow.  More related info can be found in Authorize access to REST APIs with OAuth 2.0 and Get started with permissions, access, and security groups.",
  "title": "ActiveDirectory in conjunction with Azure Devops"
}
[/block]

title: "Basecamp"
slug: "basecamp"
hidden: false
createdAt: "2022-02-10T13:24:09.741Z"
updatedAt: "2022-06-10T09:26:27.204Z"

[block:api-header]
{
  "title": "Connect Usersnap with Basecamp"
}
[/block]
Usersnap can be easily connected with Basecamp and here is how.
Go to your Usersnap project’s Integration tab and select Basecamp from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2581762-basecamp.png",
        "basecamp.png",
        1169,
        746,
        "#f3f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your Basecamp account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/79bdb76-Basecamp_2.png",
        "Basecamp 2.png",
        700,
        812,
        "#eff0ed"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "When connecting to your Basecamp account, please make sure to have a Todo list in your first project following the alphabetical order.",
  "title": "Tip:"
}
[/block]
Fill out the form accordingly and a test feedback item can be sent right from here.
Don't forget to save the settings when finished.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6f820d9-Basecamp_3.png",
        "Basecamp 3.png",
        959,
        853,
        "#f5f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can manage the items pushed to Basecamp directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1d2d9fb-Basecamp_4.png",
        "Basecamp 4.png",
        999,
        811,
        "#dad6f3"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Only Basecamp 3 accounts are supported."
}
[/block]

title: "Branding and Customizing"
slug: "branding-and-customizing"
hidden: false
createdAt: "2021-02-03T21:28:07.475Z"
updatedAt: "2022-06-07T11:42:02.931Z"

[block:api-header]
{
  "title": "Add your branding and company logo to the feedback widget"
}
[/block]
If you want to add your company's logo you can do that in the Configuration section.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/356eee0-branding_1.png",
        "branding 1.png",
        905,
        216,
        "#f3f8f5"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "This feature is currently available for our Company plan customers."
}
[/block]
[block:api-header]
{
  "title": "Removing the Usersnap branding"
}
[/block]
This is listed under the "Style" tab.
More detailed information can be found in Usersnap Pricing.

title: "Open multiple widgets in a flow"
slug: "chain-widgets"
excerpt: "How to chain multiple widgets in a flow?"
hidden: false
createdAt: "2021-02-18T21:45:46.886Z"
updatedAt: "2022-06-07T11:42:59.769Z"

[block:api-header]
{
  "title": "Open multiple widgets in a flow"
}
[/block]
When we are talking about chaining widgets, you want to add a feedback widget after submitting another feedback widget. You can create micro-surveys with different widgets. 
Or you can invite users for interviews after they rated their experience during their user journey.
 How can you do that? 
Just change the submit action of the first feedback widget. You can either

open another widget (and chain multiple widgets)
or send the submitting user to a website
or you can execute JavaScript after the submission
or simply submit the feedback
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ad8996d-chain_multiple_projects.png",
        "chain multiple projects.png",
        903,
        298,
        "#f4f7f7"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]


title: "ClickUp"
slug: "clickup"
hidden: false
createdAt: "2022-02-28T12:16:36.582Z"
updatedAt: "2022-05-25T09:32:16.781Z"

[block:api-header]
{
  "title": "Connect Usersnap with ClickUp"
}
[/block]
Here's how it works:
Go to your Usersnap project’s Integration tab and select ClickUp from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1ea2ce9-clickup.png",
        "clickup.png",
        1109,
        683,
        "#f3f4f3"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your ClickUp account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9d396b6-clickup_2.png",
        "clickup 2.png",
        737,
        825,
        "#e8f0ef"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/41a6cfe-clickup_3.png",
        "clickup 3.png",
        629,
        791,
        "#f4f5f6"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
A test feedback item can be sent right on the configuration page.
Now you can manage the items pushed to ClickUp directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0636d45-clickup_4.png",
        "clickup 4.png",
        1682,
        817,
        "#cbc5f0"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "4. Mobile app form"
slug: "collecting-customer-feedback-on-mobile-apps-beta"
excerpt: "Native mobile app customer feedback"
hidden: false
createdAt: "2021-10-07T09:00:49.457Z"
updatedAt: "2023-01-20T11:09:46.481Z"

With the Usersnap’s mobile software development kit (SDK), you can easily ask your mobile app users for feedback and streamline the insights all in one place.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/15e69e1-collection_type_4.png",
        "collection type 4.png",
        787,
        716,
        "#f5faf6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Which feedback forms can you use?"
}
[/block]
You can add or send the rating surveys (NPS, CSAT, like/dislike), multi-choice survey, feature request form and interview invitation on your mobile applications. 
The screen capturing features and annotation toolbar are not supported at the moment. That's the reason why some projects types are not yet supported (see below).
Other feedback fields (such as email, attachment, short/long answers, checkbox, label, assignee, paragraph) are available to customize. 
Project types not supported are: 
- Beta testing
- User feedback
- Bug tracking
- Quick issue reporting
- Feedback menu
[block:api-header]
{
  "title": "Does Usersnap capture mobile app metadata with each feedback?"
}
[/block]
Yes, when users submit a feedback item, the below details are automatically attached for you to see in Usersnap’s dashboard.
- Date and time
- View of application
- Version of app
- Device
- Operating system 
[block:api-header]
{
  "title": "How to call the feedback widgets?"
}
[/block]
Unlike for web applications where you can choose between a feedback button or auto-popup and set display paths and frequency, with the mobile app you need to define the open calls for each of your feedback projects. 
You can use any native button and element to call the feedback form. Or you can implement other triggers based on user actions as the call to open Usersnap’s feedback forms.
[block:api-header]
{
  "title": "How to install Usersnap on your mobile application?"
}
[/block]
In your project, you can download the SDK for both iOS and Android systems. Add the SDK as an external framework to your application and initialize the SDK by your project API-Key.
This is the Apple iOS SDK (Beta) for your use: For full technical documentation, please download zip file.
This is the Android SDK (Beta) for your use: Full technical documentation, please download zip file
[block:api-header]
{
  "title": "Superior bug reporting on native mobile platforms"
}
[/block]
If you are looking for bug reporting and mobile app performance for native mobile platforms, we recommend our partner solution Instabug.
[block:api-header]
{
  "title": "Can I preview the feedback form on a mobile environment?"
}
[/block]
The configuration preview is currently showing the web browser version, however the mobile app version will look very similar. Here are some examples:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1b944f1-Ashleys_Visuals__Ideas_Blog_videos_LPs_and_miscellaneous_4.png",
        "Ashley's Visuals & Ideas (Blog, videos, LPs and miscellaneous) (4).png",
        960,
        540,
        "#dddde6"
      ],
      "caption": ""
    }
  ]
}
[/block]
The demo page preview mode (when you click “Test” to try out the widget before you set it live) only exhibits the web browser environment.
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Attention:"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Currently our mobile sdk doesn't support react native directly. \nHowever, there are ways to use native SDKs in react-native:\n\nHow to use platform native modules in React Native is documented here:\nAndroid: https://reactnative.dev/docs/native-modules-android\nIOS: https://reactnative.dev/docs/native-modules-ios\n\nSince it's all about the app, it will also work on pads in general.",
  "title": "Something to learn about the mobile sdk:"
}
[/block]

title: "Survey product and feature feedback"
slug: "collecting-customer-feedback"
hidden: false
createdAt: "2021-02-03T21:37:31.948Z"
updatedAt: "2022-06-06T17:36:24.084Z"

To help you and your team better understand the preferences, needs, and friction of your customers, send microsurveys to ask customers for feedback. Short and in-the-moment surveys have higher response rates and return invaluable insights for your product improvement and ideation. 
Here are some ideas for you:
[block:html]
{
  "html": "\n\n\n"
}
[/block]
[block:api-header]
{
  "title": "When and how to use embedded inline forms?"
}
[/block]
To minimalize the distraction of the feedback survey, you can integrate the feedback form to your website pages or use a native button to open the widget.
Here's a video to help you and show you some famous examples:
[block:html]
{
  "html": "\n\n\n"
}
[/block]
[block:api-header]
{
  "title": "When and how to use email surveys?"
}
[/block]
Sending emails to ask for feedback can show your customers that you truly care about what they have to say even if the interaction on the website or app has finished. This extra gesture from you can make customers more willing to share their feedback. 
Here's an example of using NPS surveys within the web app compared to sending NPS surveys. 
[block:html]
{
  "html": "\n\n\n"
}
[/block]

title: "Community feedback sharing with Usersnap Board"
slug: "community-feedback-sharing-with-usersnap-board"
hidden: false
createdAt: "2022-06-09T07:20:28.939Z"
updatedAt: "2022-06-09T07:21:37.819Z"

To quantify the collective voice of customers, using upvotes for feature requests on a public board is the way to go! See an example here.
[block:api-header]
{
  "title": "Prioritizing feedback to make impactful product decisions"
}
[/block]
Watch this demo to learn powerful features in Usersnap's dashboard and public board:
[block:html]
{
  "html": "\n\n\n"
}
[/block]

title: "Connect with Drift"
slug: "connect-with-drift"
excerpt: "Include your customer support chat into the Usersnap feedback menu"
hidden: false
createdAt: "2021-02-03T21:35:42.117Z"
updatedAt: "2022-07-13T11:16:04.343Z"

[block:api-header]
{
  "title": "Offer Drift Chat via the Usersnap feedback menu"
}
[/block]
The Usersnap feedback menu is a great solution to channel the different feedback or communication requests of your users. 
If you want to include Drift in the feedback menu, just do the following. Super easy.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/da13b46-menu_1.png",
        "menu 1.png",
        1204,
        803,
        "#c1c4c8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Use this guide to set up the feedback menu and instead of the Intercom JavaScript call, use this call for Drift.
[block:code]
{
  "codes": [
    {
      "code": "javascript:drift.api.startInteraction({ interactionId: 'INTERACTION-ID' });",
      "language": "text"
    }
  ]
}
[/block]
Further documentation on the Drift help center.
[block:html]
{
  "html": "\n\n\n  Create feedback menu\n  \n"
}
[/block]

title: "Connect with Intercom"
slug: "connect-with-intercom"
excerpt: "Include your customer support chat into the Usersnap feedback menu"
hidden: false
createdAt: "2021-02-04T09:40:16.841Z"
updatedAt: "2022-07-13T11:16:17.793Z"

[block:api-header]
{
  "title": "Offer Intercom via the Usersnap feedback menu"
}
[/block]
The Usersnap feedback menu is a great solution to channel the different feedback or communication requests of your users. 
If you want to include Intercom into the feedback menu, just do the following. Super easy.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/46b4384-menu_1.png",
        "menu 1.png",
        1204,
        803,
        "#c1c4c8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Use this guide to set up the feedback menu and read how to connect Intercom.
The Intercom snippet code must be loaded before this is available.
[block:code]
{
  "codes": [
    {
      "code": "javascript:Intercom('show');",
      "language": "text"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Create feedback menu\n  \n"
}
[/block]

title: "Connect with Zendesk Chat"
slug: "connect-with-zendesk"
excerpt: "Include your customer support chat into the Usersnap feedback menu"
hidden: false
createdAt: "2021-07-01T04:27:20.427Z"
updatedAt: "2022-10-21T09:21:35.073Z"

[block:api-header]
{
  "title": "Offer the Zendesk chat via the Usersnap feedback menu"
}
[/block]
The Usersnap feedback menu is a great solution to channel the different feedback or communication requests of your users. 
If you want to include Zendesk chat (formerly known as zopim) into the feedback menu, just do the following. Super easy.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a63477d-menu_1.png",
        "menu 1.png",
        1204,
        803,
        "#c1c4c8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
1. When setting up the "messenger" please use this guide to set up the feedback menu and read how to connect Zendesk.
The Zendesk chat snippet code must be loaded before this is available.
[block:code]
{
  "codes": [
    {
      "code": "zE('messenger', 'open');",
      "language": "text"
    }
  ]
}
[/block]
Here's the Zendesk API reference 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4914268-Screen_Recording_2021-07-01_at_6.35.18_AM.gif",
        "Screen Recording 2021-07-01 at 6.35.18 AM.gif",
        1080,
        567,
        "#fafbfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
2. When calling out the Zendesk "live chat" or webWidget, please load the following snippet.
[block:code]
{
  "codes": [
    {
      "code": "zE('webWidget', 'open');",
      "language": "text"
    }
  ]
}
[/block]
Take a look at the Zendesk Chat API for more detailed information.
[block:api-header]
{
  "title": "How we installed the Zendesk chat widget"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "This is a short description of how we installed the widget. Please, read the help pages of Zendesk or talk to their support to get an accurate installation guide."
}
[/block]
1. install the Zendesk widget code in your website or web app.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f34edb7-Screen_Shot_2021-06-30_at_10.50.13_AM.png",
        "Screen Shot 2021-06-30 at 10.50.13 AM.png",
        2880,
        1482,
        "#b5c1c5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Create a web channel
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/799a278-Screen_Shot_2021-06-30_at_10.49.48_AM.png",
        "Screen Shot 2021-06-30 at 10.49.48 AM.png",
        2880,
        1476,
        "#ccd5d6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Go to the settings of the widget of Zendesk Chat and hide the widget of Zendesk
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ff3732b-Screen_Shot_2021-06-30_at_12.06.46_PM.png",
        "Screen Shot 2021-06-30 at 12.06.46 PM.png",
        2880,
        1482,
        "#d8dee0"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "If you have a Chat Phase 3 or Phase 4 Zendesk account, the \"Turn off Chat widget\" option is not available.\n\nYou can go to Determining your Zendesk Chat account version in order to find out more about your Zendesk license.\n\nMore related information can be found here."
}
[/block]
[block:api-header]
{
  "title": "How to hide the Zendesk Chat by API?"
}
[/block]
A workaround could be to hide the Zendesk chat through their API, then show and open it when clicking the Usersnap feedback menu button.
[block:code]
{
  "codes": [
    {
      "code": "// on page load, as soon as Zendesk is initialized, hide the Zendesk widget through the Zendesk API in your website's code\nzE('webWidget', 'hide');",
      "language": "text"
    }
  ]
}
[/block]
And accordingly, in the Usersnap feedback menu please set up the following code to open the Zendesk widge.
[block:code]
{
  "codes": [
    {
      "code": "zE('webWidget', 'open'); zE('webWidget', 'show');",
      "language": "text"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Please notice: Zendesk widget needs to be \"shown\" as well since it was \"hidden\" before."
}
[/block]
[block:html]
{
  "html": "\n\n\n  Create feedback menu\n  \n"
}
[/block]

title: "Record the console errors"
slug: "console-recorder-feature"
excerpt: "Collect the good stuff for your developers"
hidden: false
createdAt: "2021-02-12T14:59:14.100Z"
updatedAt: "2022-11-14T10:46:13.959Z"

[block:api-header]
{
  "title": "The console error log recorder"
}
[/block]
The Usersnap widgets can record your users' browser console and send valuable information to your developers. The console recorder feature adds full XHR logs and JavaScript errors to every feedback item submitted. 
Our console recorder also logs network requests (XHR and Fetch).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2288a16-Screen_Shot_2021-02-12_at_4.03.25_PM.png",
        "Screen Shot 2021-02-12 at 4.03.25 PM.png",
        2360,
        1482,
        "#f8f4f4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Configure the console recording for your widgets"
}
[/block]
Super simple.
Go into your feedback project and click on the "Configure". There you'll find the option under the "Settings" tab to switch on console recording.
Don't forget to hit "save" after the change is done. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f29f3a1-console_1.png",
        "console 1.png",
        1074,
        625,
        "#f5f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Display the error log on each feedback item"
}
[/block]
Go to the feedback item which includes the errors. Click on "More details" on the right and select the right tab "Console Recorder". Forward this information to your developers. If you include an integration like Jira or Azure DevOps, you can send the complete feedback item including the console error log to your developers.
[block:image]
{
  "images": [
    {
      "image": []
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1f66835-console_2.png",
        "console 2.png",
        1095,
        828,
        "#bdb7ea"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Attention:"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "The console error log recording works with every modern web framework out of the box.\n\nErrors that occur very early (e.g., a body onload function that fails) could be missed by the console recorder because Usersnap is loaded asynchronously so as not to hit your page loading time.\n\nIf you are using AngularJS, the console recorder needs your help with a small library to record even internal AngularJS errors.\n\nThe console recorder will work only when the Usersnap widget is used to create the screen. It does not record errors occurring on mobile devices or if the browser extensions were used.\n\nCurrently, it's not possible to export the console logs, hence they cannot be passed to integrations nor be exported.",
  "title": "Something to learn about the console recorder"
}
[/block]

title: "Copy a project"
slug: "copy-a-project"
hidden: false
createdAt: "2022-06-10T08:48:31.475Z"
updatedAt: "2022-10-04T08:55:03.127Z"

[block:api-header]
{
  "title": "How to duplicate a project."
}
[/block]
It is possible to duplicate a project's exact configuration and design.
Please click the 3 dots at the right upper corner of the project you'd like to duplicate and select "Copy" from the drop-down.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/df33d61-copy_project_1.png",
        "copy project 1.png",
        367,
        264,
        "#b0b5b1"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
The process will not copy the project's feedback items nor its connection to any existing integration.
Please choose a collection type for the new project to finalize the duplication.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3a90c17-copy_project_2.png",
        "copy project 2.png",
        552,
        391,
        "#f8f9f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The new project will be of the same design and layout.
Its initial name will be "Copy of XXX" in order to indicate its origin.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c5cea6b-copy_project_3.png",
        "copy project 3.png",
        326,
        247,
        "#f6f7fa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You can easily rename it under the "Manage" tab in "Settings".
Please don't forget to save the changes when finished.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1d89452-copy_project_4.png",
        "copy project 4.png",
        1061,
        307,
        "#f1f7f4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Choose to switch to a different collector type when copying project"
}
[/block]
You will receive a warning message with statements of what’s going to change.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/99d72b8-collection_type_8.png",
        "collection type 8.png",
        3350,
        1942,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Create a Usersnap Project (legacy)"
slug: "create-a-usersnap-project-legacy"
hidden: true
createdAt: "2023-03-02T21:33:00.668Z"
updatedAt: "2023-03-02T21:33:00.668Z"

[block:api-header]
{
  "title": "Create a Platform Project"
}
[/block]
In your Usersnap dashboard, click on 'New Project'.
Choose a project template:

Product testing feedback (Bug tracking, Quick issue reporting, UAT, and Beta test)
Customer feedback (Micro survey, User feedback, Feature request, and Feedback menu)
Product insight (Feature Requests, etc)
Research survey (Customer effort, Product-market fit, New feature poll, etc)
Satisfaction rating (Customer satisfaction, NPS, and customer engagement)

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9ca666e-Create_a_new_project.png",
        "Create a new project.png",
        1709,
        876,
        "#f3f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Name your project"
}
[/block]
Give your project a name and define where the widget shall appear (this can be changed later as well).
If you'd like to restrict access to this project, please check the box below and hit "Done".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d590ac-Create_a_new_project_2.png",
        "Create a new project 2.png",
        994,
        595,
        "#f5f6f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now, you can proceed with the project's configuration and other settings, such as the integrations.
[block:callout]
{
  "type": "info",
  "title": "How do I change a project's name?",
  "body": "It’s possible to change the project name by clicking on it in the project configuration"
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fc0cbda-change_project_name.png",
        "change project name.png",
        784,
        278,
        "#f2f2f6"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Usersnap widgets work on Desktops, Laptops, Tablets and Mobile Phones"
}
[/block]
Your feedback widgets will work on the browsers on (almost ;) all of your users' devices. Collect user feedback not only on desktop screen sizes but also on tablet and mobile phones. More information about this topic
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Create a Usersnap Project (NEW)"
slug: "create-a-usersnap-project-new"
hidden: true
createdAt: "2023-03-02T11:23:40.232Z"
updatedAt: "2023-03-02T11:57:53.005Z"

[block:api-header]
{
  "title": "Create a Platform Project"
}
[/block]
In your Usersnap dashboard, click on 'New Project'.
Choose a project template:

Product testing (Bug tracking, Quick issue reporting, UAT, and Beta test)
User research (Visual feedback, Interview invitation, Customer effort, etc)
Roadmap planning (Feature request, New feature poll, Feature satisfaction)
Customer engagement (Product-market fit, Customer engagement, New feature announcement, etc)
Satisfaction rating (Customer satisfaction, NPS for websites, Customer engagement, etc)

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/843b887-template_library.png",
        "template_library.png",
        2104,
        1278,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can also preview the template before you choose it for your project:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0a0185e-template-preview_1.png",
        "template-preview_1.png",
        1920,
        1080,
        "#000000"
      ]
    }
  ]
}
[/block]
After that, choose how you would like the feedback to be collected. Please note that certain templates can only have one collection type.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/458b1e7-collection_type.png",
        "collection_type.png",
        996,
        1057,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Name your project"
}
[/block]
Give your project a name and define where the widget shall appear (this can be changed later as well).
If you'd like to restrict access to this project, please check the box below and hit "Done".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d590ac-Create_a_new_project_2.png",
        "Create a new project 2.png",
        994,
        595,
        "#f5f6f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now, you can proceed with the project's configuration and other settings, such as the integrations.
[block:callout]
{
  "type": "info",
  "title": "How do I change a project's name?",
  "body": "It’s possible to change the project name by clicking on it in the project configuration"
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fc0cbda-change_project_name.png",
        "change project name.png",
        784,
        278,
        "#f2f2f6"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Usersnap widgets work on Desktops, Laptops, Tablets and Mobile Phones"
}
[/block]
Your feedback widgets will work on the browsers on (almost ;) all of your users' devices. Collect user feedback not only on desktop screen sizes but also on tablet and mobile phones. More information about this topic
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Create a Usersnap Project"
slug: "create-a-usersnap-project"
hidden: true
createdAt: "2019-07-12T08:13:03.225Z"
updatedAt: "2023-03-02T21:34:23.180Z"

[block:api-header]
{
  "title": "Create a Platform Project"
}
[/block]
In your Usersnap dashboard, click on 'New Project'.
Choose a project template:

Product testing (Bug tracking, Quick issue reporting, UAT, and Beta test)
User research (Visual feedback, Interview invitation, Customer effort, etc)
Roadmap planning (Feature request, New feature poll, Feature satisfaction)
Customer engagement (Product-market fit, Customer engagement, New feature announcement, etc)
Satisfaction rating (Customer satisfaction, NPS for websites, Customer engagement, etc)

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0141b65-template_library.png",
        "template_library.png",
        2104,
        1278,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can also preview the template before you choose it for your project:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4823ff2-template-preview_1.png",
        "template-preview_1.png",
        1920,
        1080,
        "#000000"
      ]
    }
  ]
}
[/block]
After that, choose how you would like the feedback to be collected. Please note that certain templates can only have one collection type.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/42af988-collection_type.png",
        "collection_type.png",
        996,
        1057,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Name your project"
}
[/block]
Give your project a name and define where the widget shall appear (this can be changed later as well).
If you'd like to restrict access to this project, please check the box below and hit "Done".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d590ac-Create_a_new_project_2.png",
        "Create a new project 2.png",
        994,
        595,
        "#f5f6f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now, you can proceed with the project's configuration and other settings, such as the integrations.
[block:callout]
{
  "type": "info",
  "title": "How do I change a project's name?",
  "body": "It’s possible to change the project name by clicking on it in the project configuration"
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fc0cbda-change_project_name.png",
        "change project name.png",
        784,
        278,
        "#f2f2f6"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Usersnap widgets work on Desktops, Laptops, Tablets and Mobile Phones"
}
[/block]
Your feedback widgets will work on the browsers on (almost ;) all of your users' devices. Collect user feedback not only on desktop screen sizes but also on tablet and mobile phones. More information about this topic
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Display the feedback button & widgets"
slug: "display-the-feedback-button-widgets"
excerpt: "Install the Usersnap Widget on Your Site or on Your App"
hidden: false
createdAt: "2021-02-02T22:03:39.751Z"
updatedAt: "2022-06-10T09:21:51.088Z"

[block:api-header]
{
  "title": "Display the feedback button"
}
[/block]
The feedback button's displaying rule can be configured directly from the dashboard. You can define the URL where the button shall / shall not be seen. You could also limit the visibility to a certain target audience.
You can also trigger the feedback button only once per user if preferred.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/48aaa94-Target_2.png",
        "Target 2.png",
        1044,
        852,
        "#f5f7f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Display the feedback widgets"
}
[/block]
Widgets from all feedback platform project types can be configured to pop up directly without the need to click on the feedback button. It can be triggered on page load or by time.
If your team wants to use your own feedback button, just check out Open the widget with your own feedback button.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2f886ae-Target_5.png",
        "Target 5.png",
        1052,
        416,
        "#fafafb"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
The displaying rule of this popup widget is also configurable just like the feedback button above. Moreover, you can even trigger the widget to be popped up if a certain event is fired. You can also pop the widget once every X days.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/60c569d-frequency.png",
        "frequency.png",
        864,
        271,
        "#f6f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
See the event trigger example here.
[block:api-header]
{
  "title": "Show the button only to logged-in users"
}
[/block]
Do you want to show the feedback button only to users who are "logged-in" into your app? This is a short guide on how to accomplish that.
While you or your developers are installing the Usersnap snippet code, take the precautions that you let this code be added to your installation snippet code.
In the Initialization of the Usersnap snippet code set the  userID  and the  email . The userID will tell Usersnap that this user is logged into your application/service. What you put into this variable is not essential for Usersnap but if it's set you can use the "logged-in" audience.
[block:callout]
{
  "type": "info",
  "body": "Usersnap can not automatically detect that your users are logged into your web application/service or website. That's why you or your developers have to slightly modify the code.",
  "title": "Attention:"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
After you are ready with that step, set in the "Configure" menu - in the "Target" tab - the audience to "Logged in users" and the feedback button should be shown to only users who are logged in. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c2f6cff-Target_3.png",
        "Target 3.png",
        1010,
        222,
        "#f6f7f8"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Show the button only to users with specific emails"
}
[/block]
Do you want to show the feedback button only to users who are logged with specific emails into your application? This is a short guide on how to accomplish that.
While you or your developers are installing the Usersnap snippet code, take the precautions that you let this code be added to your installation snippet code.
In the Initialization of the Usersnap snippet code set the  email . 
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
After you are ready with that step, set in the "Configure" menu - in the "Target" tab - the audience to "Target specific users by email" and add the emails to whom the feedback button should be shown.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7cae035-Target_4.png",
        "Target 4.png",
        1017,
        373,
        "#f2f7f5"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Using Regex to show the button or widget"
}
[/block]
If you want to limit when the feedback buttons or widgets (Auto-Popup) should show up, you can use the technical method of "Regex". Regexes are conditions that can cover complex scenarios when your widgets should show up.
 Wildcard examples (where * can be anything) 
Page Targeting: https:// www.usersnap.com/blog/
Regex: (^(http:\/\/|https:\/\/)?(www.)?usersnap.com\/blog\/)
Page Targeting: https:// www.usersnap.com/blog/*/post 
Regex: (^(http\:\/\/|https\:\/\/)?(www.)?usersnap.com\/blog\/[^\/]+\/post)
Page Targeting: https:// www.usersnap.com/pageid//page/
Regex: (^(http\:\/\/|https\:\/\/)?(www.)?usersnap.com\/blog\/[0-9]+\/page\/)
 Wildcard excluding a certain pattern 
Page Targeting: All pages which match the pattern but do not include the 
word "blog" or "search" https:// www.usersnap.com//   (includes sub-urls)
Regex: (^(http\:\/\/|https\:\/\/)?(www.)?usersnap.com\/(?!blog|search)[^\/]+\/.)
 Excluding certain words or patterns in a URL 
Page Targeting: All URLs which do not include "/blog" and "/search"
Regex: ^((?!\/blog|\/search).)*$
Page Targeting: Pages that include the word "blog" and do not include "search":
Regex: (.blog.)(?!.search.)
 Multiple pages which don't follow any pattern 
Page Targeting:
www.usersnap.com/blog/post-one/details/
www.usersnap.com/blog/some-word/details/
www.usersnap.com/blog/next-post/details/
Regex: (^(http\:\/\/|https\:\/\/)?(www.)?usersnap.com\/blog\/(post-one|some-word|next-post)\/details)
Excluding pages that use one of the terms 
Page Targeting: Page that do not include these words
Regex: ^((?!product|pricing|search|details|contact).)*$
[block:callout]
{
  "type": "info",
  "body": "Still lost? Please, contact our customer success team. :)"
}
[/block]

title: "Dropdown menu is not captured"
slug: "dropdown-menu-not-capturing"
hidden: true
createdAt: "2023-02-09T09:53:53.784Z"
updatedAt: "2023-02-09T11:58:42.865Z"

[block:api-header]
{
  "title": "Why my dropdown menu is not captured in the screenshot?"
}
[/block]
If you try to take a screenshot by using one of Usersnap's widgets, there's a possibility that your dropdown menu may not get captured.
You may not capture your dropdown menu while it's open during a screenshot process.
It is an expected behavior, but there's a workaround for it. Our browser extension can be a great alternative in this case. By using our browser extension, you can capture your dropdown menus in your screenshots as well.

title: "3. Email survey"
slug: "email-1"
hidden: false
createdAt: "2022-05-23T07:36:18.536Z"
updatedAt: "2022-06-20T14:20:30.224Z"

[block:api-header]
{
  "title": "Embed the rater into an email"
}
[/block]
For the rating widgets, which are “Customer Satisfaction”, “NPS” and “Customer engagement”, we have already prepared an HTML code snippet that includes only the rating part redirecting to the full-page collector.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/bb61c43-collection_type_3.png",
        "collection type 3.png",
        754,
        695,
        "#f6faf7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can use it to quickly integrate your rating widget with your email campaigns.
The code snippet for that can be found here:
After copying the code snippet you can paste it into your email client either as rich text or as HTML code.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/aadff65-inline_rater.png",
        "inline rater.png",
        1504,
        820,
        "#f3f6f7"
      ]
    }
  ]
}
[/block]
For instance, this is how my email looks when the star raters are embedded.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d0d099-email_embed.png",
        "email embed.png",
        429,
        455,
        "#faf9fa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]

title: "Email"
slug: "email"
hidden: false
createdAt: "2019-11-21T12:33:18.348Z"
updatedAt: "2022-05-25T09:34:34.866Z"

[block:api-header]
{
  "title": "Connect Usersnap via email"
}
[/block]
Email is an easy way to deliver Usersnap feedback items to your inbox or to an external tool that supports email. Email is still a powerful solution to connect customer service solutions with email.
 Example ServiceNow: 
Connect ServiceNow with Usersnap via Email. Whenever a user submits a feedback item via Usersnap it will be sent to ServiceNow via email. It creates a ticket there.
 Here's how it works 
Go to your Usersnap platform project’s Integration tab and select Email from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d8a80a-email.png",
        "email.png",
        1104,
        744,
        "#f3f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your email address.
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fa9aba4-email_2.png",
        "email 2.png",
        682,
        544,
        "#f5f7f9"
      ]
    }
  ]
}
[/block]
A test feedback item can be sent right on the configuration's page.
This is how it looks like in your email inbox.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a1376d4-Email_2.png",
        "Email 2.png",
        723,
        762,
        "#eff0f2"
      ]
    }
  ]
}
[/block]

title: "2. Website inline form"
slug: "embed-the-widget-into-a-webpage"
excerpt: "Embed the widget into a webpage"
hidden: false
createdAt: "2022-02-01T11:38:03.824Z"
updatedAt: "2022-11-04T14:40:38.703Z"

You can easily make our widget as part of the layout of your website or web application. 
The feedback items can be easily collected there and centralized in the Usersnap dashboard still.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/eaa845c-collection_type_2.png",
        "collection type 2.png",
        777,
        732,
        "#f5faf6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
This is how a widget would look like in your webpage.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/27607d6-embed_2.png",
        "embed 2.png",
        626,
        391,
        "#fafafa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
There are a couple of ways that you can integrate the widget into the webpage depending on the type created.
[block:api-header]
{
  "title": "Embed the entire widget to your webpage"
}
[/block]
In order to embed the entire widget into the layout of your website or web application, you can use the dedicated HTML code snippet which can be found under the inline form: 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/8f060ec-inline_form_2.png",
        "inline form 2.png",
        1073,
        566,
        "#f6f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
As you can see the code snippet consists of 2 parts.

You need a target element in your layout into where the widget should be placed. 

In the code snippet, this target element is included as:
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
However, you can also use an element that pre-exists in your webpage instead. 
However, please make sure this element exists before loading our widget and that it has a certain unique identifier, which can be used in order to reference this element when initializing our widget.

You need to place a script tag, preferably at the end of the body tag:

[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
Note the following part from the above code snippet:
[block:code]
{
  "codes": [
    {
      "code": "document.getElementById(‘widgetContainer’)",
      "language": "javascript"
    }
  ]
}
[/block]
this represents a target element that was explained before.
[block:callout]
{
  "type": "warning",
  "title": "Something to learn about this technology:",
  "body": "Screenshot and video capturing are not available as the widget is embedded as part of the layout.\n\nJavascript API is limited to “init”, “on” and “off” methods.\n\nThe “on” method of Javascript API listens to only “open”, “beforeSubmit” and “submit” events\n\nThe feedback menus cannot be shown in this collection type."
}
[/block]

title: "Export your project"
slug: "export-your-project"
hidden: false
createdAt: "2021-02-03T09:02:26.584Z"
updatedAt: "2022-05-30T10:04:20.252Z"

Export all feedback items of a project. You will get a threaded export format with all communication data included. The export will be in JSON-format along with all screenshots.
Use online-converters to convert to CSV or MS Excel.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2f414a0-export_2.png",
        "export 2.png",
        808,
        917,
        "#f7f8f9"
      ]
    }
  ]
}
[/block]

title: "Usersnap"
slug: "feedback-widget"
excerpt: "customer feedback software that helps you make confident product decisions"
hidden: false
createdAt: "2021-02-12T14:51:11.929Z"
updatedAt: "2022-06-20T13:48:22.501Z"

[block:api-header]
{
  "title": "What is Usersnap?"
}
[/block]
Usersnap is more than a platform to collect and manage feedback: we pave the road for customer-led growth. Usersnap helps digital products increase feedback interactions and gather insights on customer problems.
“Finally, users tell us exactly what they feel and need.“ Is what product teams say and they go on to build features that gains the trust of their users. How so?


Feedback widgets with screen capture: makes your communication with users on complicated issues much easier. 


Targeted microsurveys: boosts engagement and ensures precise insights for you to make decisions with evidence. 


Intuitive dashboard and set up: saves time for non-tech savvy teams in research, testing and monitoring customer sentiment.


Community and conversations: get the collective VoC with community upvotes. Build real relationships with your users by replying to feedback through Usersnap or have a open discussion on the public Usersnap Board. 


Usersnap empowers startups to agile enterprises to avoid failures and build products that matter, all with the clarity of customer feedback. 
[block:embed]
{
  "html": "",
  "url": "https://www.youtube.com/watch?v=d9iBhAOPjJc&feature=youtu.be",
  "title": "Usersnap - Grow your product with the clarity of customer feedback",
  "favicon": "https://www.youtube.com/s/desktop/56f7f6c9/img/favicon.ico",
  "image": "https://i.ytimg.com/vi/d9iBhAOPjJc/hqdefault.jpg"
}
[/block]
[block:api-header]
{
  "title": "What features are the Usersnap widgets offering?"
}
[/block]

Display a feedback button within the context of your SaaS/software product
Collect beta-testing, UAT, or QA feedback with all the context necessary
Collect feedback with qualitative micro-surveys, no large, complex forms
Let your users take screenshots or screen recordings from their browsers
Collect not only the feedback of your users but also the meta-data of their devices, browsers, screen-sizes, URL, location, etc
Ask questions or add raters to the widgets (like NPS, CSAT, CES, etc)
Link various widgets to ask multiple questions
Trigger questions after a finished step or process within your web app/service
Collect the browser errors (JavaScript) from the console log
No browser extension needed, but you can use such technology
and a lot more
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]


title: "Feedback with a screen recording"
slug: "feedback-with-a-screen-recording"
excerpt: "Now available in the rating widgets"
hidden: false
createdAt: "2021-02-11T07:50:33.148Z"
updatedAt: "2022-09-27T06:50:46.639Z"

[block:api-header]
{
  "title": "What is the Screen Recording feature?"
}
[/block]
The Screen Recording feature offers your users to record a (max. 3 min) video of their issue. That will help you to understand any issue in your flows or processes on your website or within your web application.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/47f464c-SR1.png",
        "SR1.png",
        291,
        317,
        "#e4e8ef"
      ]
    }
  ]
}
[/block]
The video feedback submitters can decide if they want to record both the audio and video.
The record button is also Drag-able so nothing from the webpage will be blocked while recording.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/17120ee-recording_1.png",
        "recording 1.png",
        1919,
        881,
        "#4637b8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/01beb52-recording_2.png",
        "recording 2.png",
        296,
        98,
        "#877bc8"
      ]
    }
  ]
}
[/block]
If they allow Usersnap to use their microphone, the video will then include the audio as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4836212-recording_3.png",
        "recording 3.png",
        317,
        122,
        "#f9fafa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
They can also choose between recording the entire screen, the application window, and the browser tab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/aa17c56-recording_4.png",
        "recording 4.png",
        593,
        524,
        "#dee3eb"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The mouse cursor is highlighted so it's super easy to follow the sender's path.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/da119cf-improved_screen_recording.png",
        "improved screen recording.png",
        1128,
        504,
        "#513ef1"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Once the item is submitted, you can watch the video directly in the Feedback list from the dashboard.
In addition, the screen recording feature can be turned on and off in the project settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e7f179b-recording.png",
        "recording.png",
        855,
        332,
        "#f2f4f5"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "body": "Please make sure to remove display-capture ‘none’;  from the feature-policy header.\nMore about the settings of the Feature-Policy header ‘display-capture’ can be found here.",
  "title": "Attention:"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "The usprivacy feature is also available so confidential parts of the screen recording can be hidden.",
  "title": "The PII feature"
}
[/block]
[block:api-header]
{
  "title": "Limitations"
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": " The screen recording (video) feature is not supported on mobile web browsers and it does not work on Safari browsers (desktop).\n The screen recording feature is only available in a secure context.\n Once the page is reloaded, the current page will be destroyed including the Usersnap widget. Hence the recording will be interrupted in such cases and only a single-page application (SPA) would avoid the intervention.\n The screen recording feature may not function with the Electron app since Usersnap doesn't support it officially."
}
[/block]

title: "Feedback with a screenshot"
slug: "feedback-with-a-screenshot"
hidden: false
createdAt: "2021-02-11T07:50:17.084Z"
updatedAt: "2022-09-16T07:09:04.187Z"

With most of our feedback widgets, you can offer your users the possibility to add a screenshot and annotate the screenshot. This will help you to understand what their issue is.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f8ad9ee-ibt-annotation.gif",
        "ibt-annotation.gif",
        800,
        437,
        "#4923e6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
In addition, the screenshot and annotation mode can be turned on by default or made optional.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9cb2e94-Build_1.png",
        "Build 1.png",
        874,
        772,
        "#f1f4f4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "The widget doesn't start from screenshot (annotation) mode for mobile devices."
}
[/block]
If there are confidential parts on the site that shall be hidden when taking screenshots, please take a look at the "usprivacy".
[block:callout]
{
  "type": "info",
  "title": "Why are our screenshots so accurate?",
  "body": "We have developed for you over the last years a unique technology that allows creating accurate screenshots. To make this work, our cloud-based feedback software has to reach out to the page you want to take a screenshot for.\nSometimes, if the page (or web application) you are taking the screenshot from is protected by firewalls, it's not possible to create the screenshot, because of the missing access to the CSS or JavaScript files of these pages. Read more\n\nIn this case, we have developed an alternative that creates the screenshot directly in the browser of your users. Continue reading to learn more about this cool feature."
}
[/block]
[block:api-header]
{
  "title": "Taking screenshots without our rendering technology"
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "For ENTERPRISE and PREMIUM PLAN customers",
  "body": "If you want to know how this can work for you, get in contact with our customer success team"
}
[/block]
As described beforehand, there are situations, when our rendering technology can not access your servers. But we have you covered in these cases too. 
With our newest enhancement, you can activate a feature that the in-app browser screenshots are taken via the browser-in-built "media-record-API". 
This will create accurate screenshots and your users can add annotations on the screenshots. How cool is that? ;)
 How do you activate this feature? 
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "javascript"
    }
  ]
}
[/block]
Add "nativeScreenshot: true" to the init() call.
If you want to open the screenshot with annotations in a new browser tab, you can use this way of initiating:
[block:code]
{
  "codes": [
    {
      "code": "api.init({ nativeScreenshot: { target: '_blank' }});",
      "language": "javascript"
    }
  ]
}
[/block]
 What your users will see? 
Your users will have to allow pop-ups to be opened in their browsers and they have to choose the screen or browser tab from which they want to take the screenshot. This is a browser-built-in request that is obligatory.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7ca4840-media_record.jpg",
        "media_record.jpg",
        1000,
        467,
        "#cacad1"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The rest goes smoothly like you know from our standard screenshotting technology.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ba0c0af-media_record2.jpg",
        "media_record2.jpg",
        1000,
        494,
        "#cccbd7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Limitations of this technology"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": " The native screenshot feature is not supported on mobile web browsers\n The native screenshot is only available in a secure context.\n When the widget is put inside the iframe, this feature will require user permission in order to access the screen. If users click on the button they will be asked to give permission to access their screen. After permission is granted,  the Usersnap widget should be able to read this permission. In order to make it work, please use the attribute allow=\"display-capture\"* on the top iframe in which you put our widget.",
  "title": "Attention:"
}
[/block]

title: "Usersnap space (global) code snippet"
slug: "flexible-use-cases-for-global-snippet"
hidden: false
createdAt: "2020-07-15T11:25:55.137Z"
updatedAt: "2022-11-28T11:25:24.612Z"

Why is it called the Usersnap space (global) code snippet? Because within the same space you only have to install one code on all your websites/web applications and you define it in your dashboard with feedback widget/feedback button showing up. And define in your dashboard where and when the feedback widget/button should appear.
[block:api-header]
{
  "title": "General concept"
}
[/block]
There is a code snippet, that you or your developers have to install once in your web application or website, on all places where you would like to have Usersnap widgets possibly displayed.
This Usersnap snippet code (space snippet) allows you to define the visibility of each feedback project on your own terms.
[block:callout]
{
  "type": "info",
  "body": "Once you created a new feedback project, you should specify when and where it should be displayed. That's how you make sure that the widget or button only appears on the website pages or your web application where it should appear. You can also limit the visibility to certain user groups. \n\nOnce you set it \"live\", it will show up on all the specified locations."
}
[/block]
The space (global) code snippet is shared across all projects of a team. Hence you don't need to install a different snippet every time. Please copy and install this one snippet everywhere your widgets shall pop while defining each project's disapplying path in the "Target" tab differently.

title: "For your Privacy Page"
slug: "for-your-privacy-page"
hidden: false
createdAt: "2021-04-01T09:35:35.116Z"
updatedAt: "2021-04-01T09:35:35.116Z"

In case you want to add information about Usersnap into your privacy pages on your website, we have a suggested content. Please, revise it with your legal advisors before using it.
[block:api-header]
{
  "title": "Information collected by Usersnap‍"
}
[/block]
The referring web application or website is using Usersnap by including the web snippet of Usersnap. This web application or website uses Usersnap, a user feedback solution provided by Usersnap GmbH (“Usersnap”). Usersnap uses "cookies", which are text files placed on your computer, to help the solution to remember data already filled out and for handling your session. Some information about your use of the web application or website will be transmitted to and stored by Usersnap on servers in the European Union (EU).
Usersnap will store information about your IP address, geo-location, operating system, browser version, (browser) screen size, URL visited, your email, and name (in case you provided it).
Usersnap will use this information for the purpose of adding context information to manually submitted feedback by users, for analysis of feedback items, and generated reports in the dashboard of Usersnap. Usersnap may also transfer this information to third parties where required to do so by law, or where such third parties process the information on Usersnap's behalf. Usersnap will not associate your IP address with any other data held by Usersnap. 
You may refuse the use of cookies by selecting the appropriate settings on your browser, however, please note that if you do this you may not be able to use the full functionality of this website. By using this web application or website, you consent to the processing of data about you by Usersnap in the manner and for the purposes set out above.

title: "Form"
slug: "form"
hidden: false
createdAt: "2022-05-23T07:43:13.443Z"
updatedAt: "2023-01-26T12:24:12.575Z"

[block:api-header]
{
  "title": "What is the \"Form\" of a widget?"
}
[/block]
The layout of a feedback widget can be easily configured here in this tab. 
You can design the widget's components of various fields such as the header, user emails, ticket assignees, checkboxes, poll options, etc. 
It can also be viewed in the "Preview" section so not only can you decide what the contents and the text of questions and placeholders should be but also adjust their sequences accordingly.
This makes your widget customizable and easily adaptable based on the user experience.
[block:api-header]
{
  "title": "Add additional custom fields to your feedback widget"
}
[/block]
A custom field can come in handy when you need your user to check out specific documentation for instance. It also allows you to ask for the phone number or if you have to add additional questions.
Usersnap's feedback widget can be customized with almost no limitations.
From the header to the disclaimer, from the raters to various fields, and from poll options to screenshots. All of the above-mentioned can be easily added or removed from your widget. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/37c4f6e-adding_fields_2.png",
        "adding fields 2.png",
        338,
        407,
        "#f8f9fa"
      ]
    }
  ]
}
[/block]
On the right part of the screen is the overview of your form and you can even go to "Preview" to test it in a demo environment.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/786dc09-Preview_3.png",
        "Preview 3.png",
        694,
        645,
        "#f9f9fa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "General best practices"
}
[/block]
1. Capture qualitative answers with conditional questions
Having 2-4 fields on a form is the most engaging to get good response completions and depth of feedback insights. 
Using a conditional follow-up question after rating questions further helps to build an interactive experience. Read more here 
2. Ask relevant questions
First, you want to determine which points in the user journey you need feedback on. Then you can set up the widget buttons and pop-ups accordingly and craft a delightful, interactive journey.  
Using event-based targeting to activate your survey forms is the most popular and successful method we have seen. You should know which events and KPIs are integral to your business's success. Examples include collecting feedback after:


Payments or checkout flows


Specific “Aha!” moments


Closing a conversation with a user


Make sure each user segment sees one event-based pop-up in their journey at a time.
3. Keep the form simple but still get rich context
Automate the collection of user information to reduce the fields that a user needs to fill out. For example, email, name, subscription package. These user data can be passed on with each feedback ticket once you have set up the custom data pull, read more here.
Keeping the form visually cohesive with your website is also important. However, for the button you may want to pick a noticeable color relative to your brand so your users know exactly where to give their feedback. 
4. Evaluate your projects timely
For some survey use cases, you do not want to run your widget constantly, and you do not run it for only three days. Run it until you notice a trend.
Have a person in charge of each feedback form. Their ownership creates:


Purpose and accountability for the project


The opportunity to act on the feedback


When you're evaluating your project, you may also realize how you can optimize the form to collect higher quality of feedback.

title: "5. Shareable link: Publish"
slug: "full-page-collector"
excerpt: "How to send a link to a self-opening widget via email or any other application"
hidden: false
createdAt: "2021-06-17T11:40:53.433Z"
updatedAt: "2022-06-20T14:22:00.250Z"

We gave this feature the cute name "Full page collector", just in case you are asking 😀.
The full-page collector is one of the methods of how you can collect feedback without installing the widget on the website. The full-page collector is basically a webpage that contains your widget.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9da84d7-collection_type_5.png",
        "collection type 5.png",
        764,
        699,
        "#f4faf6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Collecting feedback via email or in a documentation"
}
[/block]
Feedback can be collected not just via the feedback button (on demand) or based on behavioral triggers of your users, but via email opening in a full-page mode.
[block:api-header]
{
  "title": "Where to find the link to send a feedback request?"
}
[/block]
The link to the full-page mode can be found under the "Configure" section in the "Connect" tab.
However, please note that it works only if the page is set live. (Yes, it must be set live, meaning it's only, otherwise "No Feedback widget").
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7cf0d1e-link_to_form.png",
        "link to form.png",
        1232,
        200,
        "#f4f6f7"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You can then send and add this link whenever you need, for example, you put it inside your emails (for the rating projects we recommend using a dedicated code snippet, check “Embed the rater into an email” for more information)
[block:html]
{
  "html": "\n\n"
}
[/block]
That means you don't necessarily need to install the widget on a website but can include it in an email campaign 📧 or in the documentation for instance. That can be easily done with the hyperlink function to make the image or words clickable. 
I added this email to a campaign sent from my customer service chat solution where the image is linked to the URL you gathered from above.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3b18943-micro_s._3.png",
        "micro s. 3.png",
        577,
        717,
        "#f5f9fb"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
When they click the image, this is what they will see. Once the feedback item is submitted, it appears in the project and can be accessed via the dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5954f82-micro_s._4.png",
        "micro s. 4.png",
        556,
        432,
        "#ebf4fa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Tips and tricks on integrating the Usersnap full-page collector"
}
[/block]
If you want to add a 5-star rating, but users should already click one of the five stars and you want to have pre-selected the stars in the widget. Use these parameters in the URL to make that possible:
The rating parameter can be used for customer satisfaction (1-5) or NPS (0-10).
Additionally, you can already add the email from the email so that your users don't have to add their email again.
[block:code]
{
  "codes": [
    {
      "code": "http://collector.usersnap.com/[PROJECT-API-KEY]?rating=4&email=marc@twain.com",
      "language": "http"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Building a feedback component for Mailchimp"
}
[/block]
Why not integrate Usersnap into Mailchimp and ask for feedback with every newsletter. Take the documentation from above and build your own component in Mailchimp. Add some star rating at the end of your wonderful mailings.  💖
[block:api-header]
{
  "title": "Why sending feedback requests via email?"
}
[/block]
Email is used in a B2B environment still as the No. 1 tool to communicate. If users feel they have right now no time to submit feedback, an email is a wonderful thing to give them the possibility to also answer it later (on their own terms). This will increase the number of feedback items you receive quite enormously.

title: "Get meta data with every feedback"
slug: "get-meta-data-with-every-feedback"
hidden: false
createdAt: "2021-02-12T21:52:44.268Z"
updatedAt: "2022-06-07T11:58:34.463Z"

[block:api-header]
{
  "title": "Every feedback item is sent with context-relevant meta data"
}
[/block]
Whenever one of your users submits a feedback item via the Usersnap feedback widgets, relevant metadata from the context of your users are stored with every feedback.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c341dcc-details.jpg",
        "details.jpg",
        300,
        432,
        "#f9f9fa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Receive the 
* Date & time
* Reporter email (if requested)
* Location
* Browser
* Browser version
* Operating system
* Browser size
* Screen size
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/bc6ee0c-more_details.png",
        "more details.png",
        1905,
        891,
        "#f4f5f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Receive custom data with every feedback item"
}
[/block]
Additionally, custom data from your application, session information, etc can be sent with every feedback item. Custom data is easily sent with every feedback item

title: "First steps with Usersnap"
slug: "getting-started-with-usersnap"
hidden: false
createdAt: "2017-09-19T09:08:13.870Z"
updatedAt: "2022-12-12T09:35:17.861Z"

[block:api-header]
{
  "title": "Welcome to Usersnap"
}
[/block]
Thanks for choosing Usersnap to help your company collect and manage customer feedback on your website and web applications and to improve the feedback process for your web development. 
Getting started with Usersnap is really easy with just a few simple steps.
Here are a few quick links:

Sign up for a free trial
Log in to your existing Usersnap account

Once you have a Usersnap account, you can go ahead and do the following:


Step 1. Create a Usersnap project
If your first project is the feedback menu, please follow this guide.


Step 2. Configure and test your widget on a demo page 


Step 3. Add more team members.


Step 4. Select your colllection type and  publish the widget accordingly  on your website or web app.


Step 5. Manage and share feedback


Step 6. Create multiple spaces


Or pay a visit to Doctor Feedback to see how you can improve your health in customer-led growth:
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/dsdtp71yz3",
  "title": "A doctor's advice on customer feedback for SaaS ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/49be75c66de2a54a2a0deb9b752dfb75.jpg?image_crop_resized=960x540"
}
[/block]
[block:api-header]
{
  "title": "Haven't try Usersnap yet?"
}
[/block]
Why not sign up for a free trial and enjoy 15 days of free usage with all the features of the Usersnap company plan?
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Github"
slug: "github"
hidden: false
createdAt: "2021-01-28T10:59:35.270Z"
updatedAt: "2022-05-25T09:36:05.981Z"

[block:api-header]
{
  "title": "Connect Usersnap with Github"
}
[/block]
Usersnap and Github can be easily connected.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Github from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3937814-Github.png",
        "Github.png",
        1100,
        734,
        "#f3f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your Github account and start configuring how you want the feedback items to be pushed through. 
You can also pre-select the Github labels and determine how the prefix should look like.
Don't forget to check the box to have feedback items sent to Github automatically if preferred.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0b71921-Github2.png",
        "Github2.png",
        605,
        746,
        "#f8f8f9"
      ]
    }
  ]
}
[/block]
This is how they would look like in Github. Now you can start managing the tickets directly in Github.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0e1f8a3-Github3.png",
        "Github3.png",
        894,
        825,
        "#c5d2e3"
      ]
    }
  ]
}
[/block]

title: "GitLab"
slug: "gitlab"
hidden: false
createdAt: "2021-11-03T12:57:12.855Z"
updatedAt: "2022-05-25T09:37:54.556Z"

[block:api-header]
{
  "title": "Connecting Usersnap Platform Projects with GitLab"
}
[/block]
GitLab and Usersnap Platform can be easily connected.
Usersnap supports both cloud accounts on gitlab.com as well as on-premise installations.
For on-premise GitLab, Usersnap integrates with GitLab version 9.0 (released March 2017) and above.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/49cc63e-Gitlab.png",
        "Gitlab.png",
        1100,
        734,
        "#f3f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Here's how it works:
Go to the preferences of your GitLab account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/38fe5d0-Gitlab_2.png",
        "Gitlab 2.png",
        274,
        277,
        "#d7e2dd"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Slect the "Access Tokens" and create a personal token for use in your Usersnap Integration settings. 
Enable API access for the personal token.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/8747b8d-Gitlab_3.png",
        "Gitlab 3.png",
        1042,
        886,
        "#f9f9fa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Copy the personal token. You will need this when you connect Usersnap Platform to GitLab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3ff72f8-Gitlab_4.png",
        "Gitlab 4.png",
        647,
        104,
        "#f6f7f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Important:
If you have a self-hosted on-premise instance of GitLab, please make sure your integration server allows access from our rendering IPs and if you are using SSL, that you have valid certificates in place. You can check out SSL Labs certificate.
Enter your GitLab personal token. If you are using the on-premise version, you will need to enter your hostname. 
Click on 'Connect now!'.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c086020-Gitlab_5.png",
        "Gitlab 5.png",
        840,
        436,
        "#f2f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can now choose the GitLab project where you want to send your Usersnap screens, the default assignee, milestone as well as issue labels.
Click 'Save' and start sending your Usersnap screens directly to your GitLab project.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c6fffdd-Gitlab_6.png",
        "Gitlab 6.png",
        484,
        633,
        "#f6f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
This is how a ticket looks like in GitLab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6375086-Gitlab_7.png",
        "Gitlab 7.png",
        1387,
        890,
        "#bdb6ec"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Website widget (button, pop-up) API"
slug: "global-api"
excerpt: "For website or web application"
hidden: false
createdAt: "2022-06-02T09:37:18.039Z"
updatedAt: "2022-06-09T10:27:05.324Z"

[block:callout]
{
  "type": "info",
  "title": "This is a technical documentation of the API",
  "body": "For more user-case oriented examples see Website widget: API examples."
}
[/block]
[block:api-header]
{
  "title": "Installation"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "window.onUsersnapLoad = function(api) {\n  api.init();\n}\nvar script = document.createElement('script');\nscript.defer = 1;\nscript.src = 'https://widget.usersnap.com/global/load/?onload=onUsersnapLoad';\ndocument.getElementsByTagName('head')[0].appendChild(script);",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "API object"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "interface GlobalApi {\n  init: (options: InitOptions) => Promise,\n  destroy: () => Promise,\n  logEvent: (eventName: string) => Promise,\n  on: (eventName: string, callback: (event: any) => void) => void,\n  off: (eventName: string, callback: (event: any) => void) => void,\n}",
      "language": "typescript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "init()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  custom: {\n    applicationLanguage : \"de\",\n  },\n  user: {\n    userId: \"123\",\n    email: \"mail@example.test\",\n  },\n  locale: 'de',\n});\n",
      "language": "javascript"
    }
  ]
}
[/block]
The init function initializes the global api. It must be called before calling any other api method.
Params

options
options.custom: Record<string, any> –  An object holding custom data. This data will be passed along with every feedback
options.user – An object holding information about the current user
options.user.email: string – Will be pre-filled in the widget and attached to every feedback
options.user.userId: string – Can be used for determining whether to show a widget or not
options.locale: string – Language in which widgets should be displayed 
options.useSystemFonts: boolean – Can be used to disable loading external fonts. Defaults to false
options.useLocalStorage: boolean – Can be used to disable usage of localStorage. Defaults to true
options.nativeScreenshot: boolean – Can be used to enable the usage of the native screenshot feature. Defaults to false
options.collectGeoLocation: 'all' | 'none' – can be used to disable the collection of IP and geo location. Defaults to 'all'

Returns Promise<void>
[block:api-header]
{
  "title": "destroy()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.destroy()",
      "language": "javascript"
    }
  ]
}
[/block]
Destroys the global api and removes all widgets from the DOM of the webpage.
After calling destroy() it is necessary to call init() before calling any other method.
Returns Promise<void>
[block:api-header]
{
  "title": "logEvent()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.logEvent('my-event') // will open a widget if one was configured for this event",
      "language": "javascript"
    }
  ]
}
[/block]
Can be used to trigger widgets by specific event names.
Params

eventName: string – the name of the event

Returns Promise<void>
[block:api-header]
{
  "title": "on()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "function handleSubmit() {\n  console.log('Widget was submitted')\n}\napi.on('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
Registers an event handler for widget events.
For a detailed list of available events and how they can be used see section Widget Events
Params

eventName: string – the name of the widget event you want to listen to
callback: (event: WidgetEvent) => void – callback to handle the event. The structure of the received object depends on the event.

Returns void
[block:api-header]
{
  "title": "off()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.off('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
Removes an event handler
Params

eventName: string – the name of the widget event want to remove the listener from
callback: (event: WidgetEvent) => void – same callback that was used for registering the event

Returns void
[block:api-header]
{
  "title": "Widget Events"
}
[/block]
* open – A widget was opened.
* close – A widget was closed
* beforeSubmit– Before form values are submitted
* submit – After form values were submitted
[block:api-header]
{
  "title": "open event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "type ValueKey = 'assignee' | 'custom' | 'labels' | 'visitor'\n\ninterface OpenEvent {\n  apiKey: string,\n  api: {\n    setValue: (key: ValueKey, value: any) => void,\n  },\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that was opened
* api.setValue – method to set form values
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleWidgetOpened(event) {\n  // You can check whether a specific widget was called\n  if (event.apiKey !== '') return;\n  \n  // Set Assignee. A User with this email has to exist in your Usersnap account\n  event.api.setValue('assignee', 'mail@example.test') \n  // Set custom data\n  event.api.setValue('custom', { applicationLanguage : 'de' })\n  // Set labels\n  event.api.setValue('labels', ['bug', 'critical'])\n  // Set email\n  event.api.setValue('visitor', 'mail@example.test')\n}\napi.on('open', handleWidgetOpened)",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "close event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "interface CloseEvent {\n  apiKey: string,\n  isCancel: boolean,\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that was closed
* isCancel – is true in case the widget was closed before submitting a feedback item
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleWidgetClosed(event) {\n  if (event.isCancel) {\n  \t// do something\n  }\n}\napi.on('close', handleWidgetClosed)",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "beforeSubmit event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "type ValueKey = 'assignee' | 'custom' | 'labels' | 'visitor'\n\ninterface BeforeSubmitEvent {\n  apiKey: string,\n  api: {\n    setValue (key: ValueKey, value: any) => void,\n  }\n  values: {\n    assignee?: string,\n    custom?: any,\n  \tlabels?: string,\n    visitor: string,\n  }\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that will be submitted
* api.setValue – method to set form values. Allows changing values before they are submitted.
* values – values that will be submitted
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleBeforeSubmit(event) {\n  var labels = event.values.labels\n  if (labels && labels.includes('bug')) {\n  \tevent.api.setValue('assignee', 'mail@example.test')\n  }\n}\napi.on('beforeSubmit', handleBeforeSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "submit event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "interface CloseEvent {\n  apiKey: string,\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that was submitted
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleSubmit() {\n  // do something\n}\napi.on('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]

title: "Hidden version of Use case intro"
slug: "hidden-version-of-use-case-intro"
hidden: true
createdAt: "2022-06-07T09:36:32.059Z"
updatedAt: "2022-06-07T09:37:26.995Z"

Usersnap is more than a platform to collect and manage feedback: we pave the road for customer-led growth. It is our goal to empower startups to agile enterprises to gather insights on customer problems so you can avoid failures and build products that matter. With a versatile and easy-to-use customer feedback software you will increase customer feedback and interactions which leads to customer-led growth!
These are the main use cases Usersnap can help you with:


Collect customer feedback, constantly


Measure customer experience ratings


Quality assurance & bug reporting 


User acceptance testing/Beta testing 


Website and design feedback 


Project approval for agencies



title: "Test your widget on a demo page"
slug: "how-to-test-your-widget-on-a-demo-page"
excerpt: "Preview your widget"
hidden: false
createdAt: "2021-02-03T21:35:22.184Z"
updatedAt: "2023-01-26T08:59:29.469Z"

[block:api-header]
{
  "title": "Test the widget within the dashboard"
}
[/block]
In the dashboard, you will find in the "Build" section under the "Form" tab a button on the top right that is named "Preview". 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/883e6e3-Preview.png",
        "Preview.png",
        1723,
        828,
        "#f8f9f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
If you click on it, you will be redirected to a test page where you can try out your widget and test its configurations.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/127778e-Preview_2.png",
        "Preview 2.png",
        456,
        638,
        "#8985d2"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Test the widget with any webpage on your browser"
}
[/block]
Using the browser, you can paste Usersnap's code directly into the console and test the widget without development effort! Here's the hack:
Open any webpage on your browser, then right-click and find “inspect.”
Search for the “console” tab and paste the code there, then enter and voila!
It's a local and temporary installation so once you refresh the page, the console log will be back to it's original empty state. 
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "This feature is currently only available to the collection type of Website widget (button, pop-up)"
}
[/block]

title: "Watch videos and read testimonials"
slug: "how-to-use-usersnap"
excerpt: "How can Usersnap help you achieve your product and business objective?"
hidden: false
createdAt: "2021-02-03T05:49:48.437Z"
updatedAt: "2022-12-12T10:24:57.006Z"

[block:api-header]
{
  "title": "A short video introducing you to the feedback platform"
}
[/block]
However, Usersnap is more than a platform to collect and manage customer feedback - with the clarity of customer problems and needs, you're paving the road to customer-led growth!
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/f8gwaknvxk",
  "title": "Usersnap - your #1 customer feedback solution ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/d4ab7873532914eaa0623796a9db2f4b.jpg?image_crop_resized=960x588"
}
[/block]

title: "Ways to collect feedback items"
slug: "how-would-you-like-the-feedback-items-be-collected"
hidden: false
createdAt: "2022-06-07T07:22:39.155Z"
updatedAt: "2023-03-01T10:29:28.407Z"

You can initiate feedback collection in different ways. 
Here are the 6 types how to initiate the collection:

1. Website widget (button, pop-up): Collecting feedback within your website or web application via buttons or widgets.
2. Website inline form: Feedback collection from a form that is part of your webpage design.
3. Email survey: Interactive raters can be sent via email to your users.
4. Mobile app form: Native mobile in-app feedback collection.
5. Shareable link: Having your feedback form on a URL that can be shared via your preferred channels.
6. Browser extensions: Submitting browser-based feedback without installing the widget.

[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Each project is limited to 1 single way to collect the feedback items."
}
[/block]
[block:api-header]
{
  "title": "A short video about different feedback collection types and template library"
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/i5ly3jh8ys",
  "title": "Template library tour - 1080WebShareName",
  "favicon": null,
  "image": "https://embed-ssl.wistia.com/deliveries/7cc69b1fbcd226dd6a125fe496bd6fb4.jpg?image_crop_resized=960x540"
}
[/block]
[block:api-header]
{
  "title": "How to view and change the collection type?"
}
[/block]
You may view a project's chosen collector type at any time in the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/265f0e0-collection_type_6.png",
        "collection type 6.png",
        3360,
        1948,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
If you want, the collector type can be changed within its project configurations.
There will be a warning message stating the limitations derived from the change.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d64807c-collection_type_7.png",
        "collection type 7.png",
        3360,
        1942,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "HubSpot"
slug: "hubspot"
hidden: false
createdAt: "2022-08-12T09:54:17.388Z"
updatedAt: "2022-08-12T12:35:36.202Z"

[block:api-header]
{
  "title": "Connect Usersnap with native HubSpot integration in platform"
}
[/block]
HubSpot and Usersnap Platform can be easily connected.
Send Usersnap Feedback items, manage them and create Tickets in HubSpot.
Here's how it works: 
Go to Usersnap project’s Manage tab and select Integrations. 
Find HubSpot in the grid and click +Add Integration.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/42d339a-Hubspot_1.png",
        "Hubspot 1.png",
        1104,
        744,
        "#f3f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign up/sign in to your HubSpot account. (Don’t forget to sign up with both Name and Surname to ensure smooth permission processes later)  
If you have more than one account, choose the one you wish to connect with Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b7513a6-Hubspot_2.png",
        "Hubspot 2.png",
        1824,
        1820,
        "#f9f8f9"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Please allow access to your HubSpot account to continue.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d82b3dc-Hubspot_6.png",
        "Hubspot 6.png",
        740,
        883,
        "#f6f7f5"
      ]
    }
  ]
}
[/block]
You will be redirected to the integration with Usersnap. Fill out the form accordingly and don't forget to save the settings. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6bfeb6e-Hubspot_3.jpg",
        "Hubspot 3.jpg",
        1691,
        1488,
        "#f5f7f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
A test feedback item can be sent and you can start managing items pushed to Hubspot!
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/812782a-Hubspot_4.jpg",
        "Hubspot 4.jpg",
        2839,
        1592,
        "#ebedef"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Manage your Usersnap Feedback items into Tickets, assign team members, status and pipeline! 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f58a68e-Hubspot_5.jpg",
        "Hubspot 5.jpg",
        2819,
        1586,
        "#ecf1f3"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "On grounds of special technical requirements, and for flawless flows of files, a folder will be created for you by Usersnap under the name of ‘Usersnap-attachments’. In this folder, you will be able to find attachments from single Feedback items shared from Usersnap. After connecting the integration, you will be able to create your own folders and kindly asked not to move nor rename the ‘Usersnap-attachments’ folder since this could disrupt connections and break the Integration. Please also keep in mind to give permissions to the Usersnap Assignee of Feedback items to create/send files into this folder.",
  "title": "Attention:"
}
[/block]

title: "I'm lost. Can somebody help me?"
slug: "im-lost-can-somebody-help-me"
hidden: false
createdAt: "2021-02-05T13:21:30.284Z"
updatedAt: "2022-06-07T11:13:47.294Z"

[block:api-header]
{
  "title": "Can I get support because I'm stuck?"
}
[/block]
Hi. 
We totally get it. We are also lost sometimes and there's is nothing more annoying than nobody available for help.
Contact our team via our Customer Success Chat on our Website.
If these help pages, do not help you or you are uncertain, just reach out to us. If something is confusing, tell us. We appreciate your feedback. Make Feedback Matter.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6315dc6-chat.gif",
        "chat.gif",
        1236,
        736,
        "#ededf1"
      ],
      "caption": "How to find our chat?",
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f025a16-contact.gif",
        "contact.gif",
        1236,
        733,
        "#ededf1"
      ],
      "caption": "How to get to our contact form?",
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Our support team is here for you"
}
[/block]
Our team is here to support you, your team, and your business.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a38c8e2-team.png",
        "team.png",
        1568,
        284,
        "#a18670"
      ]
    }
  ]
}
[/block]

title: "Improving the page speed"
slug: "improving-the-page-speed"
hidden: false
createdAt: "2021-03-04T14:55:54.137Z"
updatedAt: "2022-11-28T11:41:55.063Z"

[block:api-header]
{
  "title": "Usersnap loads asynchronously and does not block your loading time"
}
[/block]
Especially, external-facing websites and web applications want to have the best page speed possible.
We are constantly working on improving the speed of loading and executing Usersnap on your site. 
Usersnap loads asynchronously to not block the loading time of your website or web application. This is how Google Tag Manager and similar applications work too.
Today's websites and digital products are using a lot of integrated applications and that's increasing the page load in the page speed tests.
[block:api-header]
{
  "title": "How can I improve the page speed with Usersnap?"
}
[/block]
If you want to increase the results for your page speed, you can use some additional approaches to improve the results.
[block:callout]
{
  "type": "warning",
  "body": "Please, use the space API key of your account. Don't use the project-specific API key."
}
[/block]
 1. Load Usersnap on the first scroll of users 
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
 2. Load Usersnap delayed a few seconds after the page was loaded 
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]

title: "Inbox"
slug: "inbox-customize-your-own-view"
hidden: false
createdAt: "2022-06-20T13:30:38.991Z"
updatedAt: "2022-12-12T10:21:16.537Z"

[block:api-header]
{
  "title": "Inbox - customize your own view"
}
[/block]
The inbox gives you a personalized view of various projects. Each project, you are subscribing to will be displayed in your personal inbox. You can search and filter the inbox as you know it from the project view.
What's the big buzz around the inbox?
You can find similar issues throughout different feedback projects. A design-issues that keeps happening in various projects or a flow that makes users unhappy throughout your applications. Find repetitive issues and feedback items and make your customers happier.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/0ftvv4nyqr",
  "title": "Inbox - work on multiple projects at once (CX) ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/eaaeb8134351b6b1cad4597b3be54bbf.jpg?image_crop_resized=960x536"
}
[/block]

title: "1.2 Website widget (button, pop-up): Publish"
slug: "install-usersnap"
excerpt: "How to add the feedback widget to your site or in your web application via feedback button or auto pop-up."
hidden: false
createdAt: "2018-04-04T07:01:17.424Z"
updatedAt: "2022-11-28T11:29:41.243Z"

Creating a project to be show a feedback button or a pop-up widget on a website or your web app.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/83baeeb-collection_type_1.png",
        "collection type 1.png",
        773,
        707,
        "#f5faf6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Installation"
}
[/block]


Install via an HTML code


Install via Google Tag Manager


Install on WordPress


How does the Usersnap snippet code work?


Install Usersnap on popular frameworks like React, Angular etc)


[block:api-header]
{
  "title": "General"
}
[/block]
The installation of Usersnap is quite easy. The provided Usersnap global code snippet should be copied into the website or web application code (HTML) and you are ready to collect user feedback :100: 
The feedback widgets work on all major desktop and mobile browsers.
There are several ways of how to get feedback widgets into your website.

Add the global code snippet to your web application
Use code examples for popular frameworks like React or Angular

In the following sections, you can find out what works best for your use case. If you don't which road to walk down, contact our lovely customer success team.
[block:api-header]
{
  "title": "Examples for popular frameworks"
}
[/block]
Get more information on the installation of Usersnap on popular frameworks and SPAs on this installation page.
[block:api-header]
{
  "title": "What is the Usersnap global code snippet?"
}
[/block]
The Usersnap global code snippet code is a central installation code snippet (written in JavaScript) that you or your developers have to install on your web application or website. You don't need to install one per project, you just need this global one.
Find detailed information about the Usersnap global code snippet
[block:api-header]
{
  "title": "Install via HTML code"
}
[/block]
To install it on your website or in your digital product just follow these steps:

Step 1. Go to the "Configure" section of your project and to the "Publish" tab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0b43bbd-space_code_snippet_3.png",
        "space code snippet 3.png",
        1092,
        534,
        "#000000"
      ]
    }
  ]
}
[/block]
Step 2. Click on "Copy Code" to copy the Usersnap space (global) code snippet
Step 3. Paste this code snippet at the end of your website, just before the closing </ body > tag
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d9c3910-Screen_Shot_2021-02-11_at_7.37.01_AM.png",
        "Screen Shot 2021-02-11 at 7.37.01 AM.png",
        2418,
        876,
        "#212121"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Done. You can start using Usersnap.
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

[block:api-header]
{
  "title": "More details on the global snippet code a.k.a. the space code snippet"
}
[/block]
Usersnap lets you further customize your project widget. First, you would need your global API key, which can be found in the "Publish" tab under your project's "Configure" section.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ccf5833-space_api_key.png",
        "space api key.png",
        797,
        81,
        "#000000"
      ]
    }
  ]
}
[/block]
Next, you'd need to install the widget with the following JavaScript code. Then, you can call API methods later in your code.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Install via Google Tag Manager"
}
[/block]
Please, read our Installation on Google Tag Manager page.
[block:api-header]
{
  "title": "Install on WordPress"
}
[/block]
Please, read our installation page on Wordpress.
[block:api-header]
{
  "title": "How can I activate and deactivate certain features?"
}
[/block]
There are many options to turn on and off in the Usersnap dashboard, but some handy features can be configured in the Usersnap snippet code. 
If you want to remove the tracking "cookies" (which are technically not cookies here), or you don't want to store the location of the users, you should definitely read this section about our API configuration.

title: "Installation on a React App"
slug: "installation-on-a-react-app"
hidden: false
createdAt: "2021-06-22T19:31:45.155Z"
updatedAt: "2022-03-21T08:26:41.958Z"

[block:api-header]
{
  "title": "How to install Usersnap into a React App"
}
[/block]
When you are using React to build a web application, you can combine it with Usersnap. 
To make your life easier, you can use our little library to implement Usersnap into your codebase.

title: "Installation on a Single Page Application (SPA)"
slug: "installation-on-a-single-page-application-spa"
hidden: false
createdAt: "2021-11-24T11:07:21.409Z"
updatedAt: "2023-02-02T08:15:20.899Z"

[block:api-header]
{
  "title": "How to install Usersnap on a SPA and other frameworks"
}
[/block]
Our widget can be integrated with any framework of your choice. Here is the list of examples for the most popular ones:

React
Angular
Vue
Blazor
Gatsby
Nuxt
Next.js

You can find the full list here: https://github.com/usersnap/public
[block:callout]
{
  "type": "info",
  "title": "Did you know that we have a NPM package?",
  "body": "Usersnap comes with its own NPM package in order to simplify the process of installing Usersnap widgets in SPA projects!"
}
[/block]

title: "Installation on AngularJS"
slug: "installation-on-angularjs"
hidden: false
createdAt: "2021-08-06T14:31:06.741Z"
updatedAt: "2021-08-06T15:43:46.191Z"

[block:api-header]
{
  "title": "How to install Usersnap into an AngularJS App"
}
[/block]
When you are using AngularJS to build a web application, you can combine it with Usersnap. 
To make your life easier, you can use our little library to implement Usersnap into your codebase. 
[block:callout]
{
  "type": "warning",
  "title": "How to make the console recorder work",
  "body": "When you want to track the console errors of the browsers of your users, please read this guide."
}
[/block]

title: "Installation on Blazor"
slug: "installation-on-blazor"
hidden: false
createdAt: "2023-01-18T22:41:25.600Z"
updatedAt: "2023-01-23T11:13:59.492Z"

Installing the Usersnap space code snippet in a Blazor app is a relatively straightforward process.
Generally speaking, you can use the Usersnap code snippet either in your Blazor WebAssembly app or your Blazor Server app.
[block:api-header]
{
  "title": "Blazor WebAssembly"
}
[/block]
In a Blazor WebAssembly app, you can add the Usersnap snippet code to the index.html file, which is located in the wwwroot folder of your app. This file is responsible for loading the assets and initializing the app, so adding the Usersnap snippet here will ensure that it's loaded on every page of your app.
```

    ...

    


```
Please note that It is possible to add the Usersnap code snippet in the head of the HTML file in a Blazor WebAssembly app, as it is a single page application (SPA) but the script is only loaded once when the application is loaded.
Alternatively, you can use JavaScript interop to call the Usersnap script when you need it, this way you can call the script when the user triggers an action, for example, when a button is clicked.
You can check the official Blazor JavaScript interoperability guide for more information.
[block:api-header]
{
  "title": "Blazor Server"
}
[/block]
In a Blazor Server app, you can add the Usersnap code snippet to the _Host.cshtml file, which is located in the Pages directory of your app. This file is responsible for rendering the initial HTML of your app, so adding the Usersnap snippet here will ensure that it's loaded on every page of your app.
The _Host.cshtml file acts as the entry point for the app and is responsible for rendering the initial HTML sent to the client, and also where global resources (such as stylesheets or scripts) and additional configurations can be added.
```

    ...

    


```
You can check the official Blazor JavaScript interoperability guide for more information.
[block:api-header]
{
  "title": "Using the Usersnap API in a Blazor app"
}
[/block]
If you want to use the Usersnap API within your Blazor project, you will need to use JavaScript interop to call the API from your C# code.
JavaScript Interop allows you to call JavaScript code from C# and vice versa.
First, You need to expose the Usersnap API on the window object by adding our code snippet to the _Host.cshtml file for a Blazor Server app, or to the index.html file for a Blazor WebAssembly app:
```

``
Once the API is exposed, you can call it from your C# code using theIJSRuntime` interface.
By injecting the IJSRuntime interface in the component where you want to use the Usersnap API, you can call the API by using the InvokeVoidAsync method:
await JSRuntime.InvokeVoidAsync("Usersnap.show", new object[] { "[Project-API-Key]" });
It is important to note that you should only call the API after the page is fully loaded, to avoid any issues with the functionality of your app. You can use the OnAfterRender method of the component to make sure the API is called only when the component is fully rendered.
For more information, check out the official Call JavaScript functions from .NET methods guide.

title: "Installation on Google Tag Manager"
slug: "installation-on-google-tag-manager"
hidden: false
createdAt: "2021-11-24T13:09:06.620Z"
updatedAt: "2022-11-28T11:26:55.423Z"

[block:api-header]
{
  "title": "Install via Google Tag Manager"
}
[/block]
It is possible to add the Usersnap Platform Project widget to your website by using Google Tag Manager.

Step 1. Create a new tag
Step 2. Choose "Custom HTML" as tag type
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/59c4055-03_new_tag.png",
        "03_new_tag.png",
        1892,
        756,
        "#e3e3e3"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Step 3. Insert the Usersnap space (global) code snippet
Step 4. Add a trigger and save your new tag
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a93f6c7-Screenshot_2022-08-30_at_11.35.22.png",
        "Screenshot 2022-08-30 at 11.35.22.png",
        1073,
        874,
        "#f7f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Step 5. Publish the changes in GTM

Once you've applied these changes to your website or web application, your users and website visitors can start sending QA feedback and customer satisfaction ratings to your team.
[block:callout]
{
  "type": "info",
  "title": "Attention",
  "body": "Please make sure to have the google tag manager installed on your web page.\nMore detailed info can be found here."
}
[/block]

title: "Installation on Shopify"
slug: "installation-on-shopify-ecommerce-store"
hidden: false
createdAt: "2021-04-12T19:39:20.452Z"
updatedAt: "2022-11-28T11:33:06.533Z"

[block:api-header]
{
  "title": "Collect feedback from your online store"
}
[/block]
If you are operating your Shopify E-commerce online store and you want to collect feedback from your customers, implement easily Usersnap.
Just add the Usersnap space (global) code snippet to your theme via the "Theme.Liquid" or "Header.Liquid" file.
[block:api-header]
{
  "title": "Step 1: edit the code of your theme"
}
[/block]
Go to the dashboard of your Shopify store and go to "Online Store" and "Themes". On the action menu, click "edit code". 
Click on "theme.liquid" and find the HTML code for the end of the header .
Insert the Usersnap snippet code before the end of the closing of the header.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d21ddcb-installation_shopify.jpg",
        "installation_shopify.jpg",
        2856,
        1340,
        "#f5f4f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1f9672f-installation_usersnap.jpg",
        "installation_usersnap.jpg",
        2394,
        1228,
        "#f6f1f4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Click on the Save button and publish your changed theme.
[block:api-header]
{
  "title": "Add Usersnap to the checkout page"
}
[/block]
Click on the "Settings" on the left menu and choose the Checkout.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e8008d3-Screen_Shot_2021-04-12_at_9.54.00_PM.png",
        "Screen Shot 2021-04-12 at 9.54.00 PM.png",
        2854,
        1472,
        "#e5e6e7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Add the Usersnap snippet code to the checkout process.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2819043-Screen_Shot_2021-04-12_at_9.54.50_PM.png",
        "Screen Shot 2021-04-12 at 9.54.50 PM.png",
        2854,
        1306,
        "#e3e3e4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Save the changes and test the feedback widgets in your Shopify store. Congratulations, you are ready to collect customer feedback in your shop.

title: "Installation on Wordpress (To be reviewed...)"
slug: "installation-on-wordpress-to-be-reviewed"
hidden: true
createdAt: "2023-01-18T13:11:14.800Z"
updatedAt: "2023-01-18T14:17:28.318Z"

[block:api-header]
{
  "title": "Installing Usersnap via the Wordpress Plugins"
}
[/block]
The installation of Usersnap on a WordPress website is now a breeze thanks to the availability of the Usersnap plugin. You just need to download it, activate it, and use your API code to connect to Usersnap.
Let's see how it's done.
Through the dashboard menu, navigate to Plugins > Add New.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5c2f1e9-WP_Plugin_1.png",
        "WP_Plugin_1.png",
        159,
        179,
        "#000000"
      ]
    }
  ]
}
[/block]
Search for the "Usersnap" plugin, then install and activate it.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/bdc12f7-WP_Plugin_2.png",
        "WP_Plugin_2.png",
        1729,
        455,
        "#000000"
      ]
    }
  ]
}
[/block]
Now you need your Usersnap API key. Simply copy your Space API key through the configuration page.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2d31b49-space_api_key.png",
        "space api key.png",
        797,
        81,
        "#000000"
      ]
    }
  ]
}
[/block]
After copying the API Key, navigate to the Usersnap plugin's settings page. You can access the Usersnap plugin's settings by navigating to Settings > Usersnap. Within the settings page, input your Usersnap API key in the designated field and then save the changes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3c1fc70-WP_Plugin_3.png",
        "WP_Plugin_3.png",
        873,
        352,
        "#000000"
      ]
    }
  ]
}
[/block]
Congrats, you have successfully installed Usersnap on your WordPress website!
As you can see, you can also set some basic configurations. On the settings page, you can:
* Set the visibility of the widget by selecting a specific group of users who can view it
* Set the visibility of the widget in the WordPress dashboard 
Note that you only require the Space API Key and no additional configuration is needed on your WordPress website. All configurations can be completed through the Usersnap main dashboard.
[block:api-header]
{
  "title": "Installing Usersnap natively in Wordpress"
}
[/block]
An alternate way to install Usersnap on a WordPress website is through a native installation.
Simply navigate to Appearance > Theme File Editor. There, you can see a list of files of your current installed theme listed on the right side. Find the "footer" file within the list and select it. Now among the code lines, look for the HTML </body> tag. Then, paste the Usersnap space global code snippet exactly before the </body> tag.
After that, simply update the file and save the changes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7446f24-installation_wordpress.png",
        "installation_wordpress.png",
        2852,
        1482,
        "#607281"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Done! You have managed to install Usersnap on WordPress natively.

title: "Installation on Wordpress"
slug: "installation-on-wordpress"
hidden: false
createdAt: "2021-04-12T19:38:52.163Z"
updatedAt: "2022-11-28T11:35:34.288Z"

[block:api-header]
{
  "title": "Installing Usersnap via the Wordpress Plugins"
}
[/block]
Usersnap is available as a WordPress plugin, installing it is straightforward. You can download it here.
Concerning the installation via WordPress of the space (global) code snippet, you only need to enter the space API key and then it works. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2d31b49-space_api_key.png",
        "space api key.png",
        797,
        81,
        "#000000"
      ]
    }
  ]
}
[/block]
It’s like having the space (global) code snippet installed on your Wordpress page, and you can configure everything else in the project settings/display rules from the dashboard.
[block:api-header]
{
  "title": "Installing Usersnap natively in Wordpress"
}
[/block]
If you are using WordPress to operate your website for digital service, you can easily collect customer feedback on it with Usersnap. Here's a short guide on how to do that.
Go to your Themes and click on the "Theme Editor". On the right side, you'll find all files of this theme listed and potentially you'll find a "footer". Open this file and search for the end of the HTML-code 
BEFORE this HTML-element () place the Usersnap space (global) code snippet . Save the file with the button "Update file" on the bottom of the editor and DONE!
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7446f24-installation_wordpress.png",
        "installation_wordpress.png",
        2852,
        1482,
        "#607281"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can test Usersnap in your Wordpress.

title: "Installing Usersnap using NPM (Inline Form)"
slug: "installing-usersnap-using-npm-inline-form"
hidden: false
createdAt: "2023-01-26T09:25:35.753Z"
updatedAt: "2023-01-31T12:17:15.029Z"

NPM, a widely-used package manager in the web development field, allows for easy sharing and reuse of code, as well as efficient management of project dependencies. The Usersnap package, available on NPM, simplifies the process of integrating the Usersnap snippet into single-page application (SPA) projects.
Installing the Usersnap snippet code in single-page application (SPA) projects is now as easy as running a single command, thanks to this package.
In this guide, we will walk you through the inline form installation process of Usersnap widgets.
[block:api-header]
{
  "title": "How to Install"
}
[/block]
To install the package, use the command below based on your preferred package manager:
[block:code]
{
  "codes": [
    {
      "code": "npm install @usersnap/browser",
      "language": "powershell",
      "name": "Terminal Commands"
    }
  ]
}
[/block]
or
[block:code]
{
  "codes": [
    {
      "code": "yarn add @usersnap/browser",
      "language": "text",
      "name": "Terminal Command"
    }
  ]
}
[/block]
After installing the package, you can start setting up the Usersnap widget.
It's fairly easy to implement the Usersnap widget as part of the layout of your web application.
In order to do that, you need to:
* Set a DOM node (target element) which is where the widget should be appended.
* Mount the widget to the specific DOM Node.
Here's an example of how it can be done:
[block:code]
{
  "codes": [
    {
      "code": "import { loadEmbed } from '@usersnap/browser'\n\n// DOM node of the page where the widget should get appended to\nconst targetNode = document.getElementById('embedWidget')\n\nconst projectApiKey ''\n\nloadEmbed(projectApiKey).then((api) => {\n  api.init({\n    mountNode: document.getElementById(targetNode)!,\n  })\n})",
      "language": "javascript",
      "name": "App"
    }
  ]
}
[/block]
This code imports the loadEmbed function from the Usersnap package, gets the DOM node where the widget should be appended, sets the Project API key, calls the loadEmbed(projectApiKey) function with the key passed in, which returns a promise containing an object. The init method is then called with the mountNode option passed in as an argument, to initialize the Usersnap embed widget and attach it to the specific DOM node of the page.
Please note that you should use your Project API key instead of your Space API key. Your Project API key can be found right under your Space API key:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/db1a7dd-NPM_2.png",
        "NPM_2.png",
        1231,
        211,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Installing Usersnap using NPM (MAIN)"
slug: "installing-usersnap-using-npm-main"
hidden: true
createdAt: "2023-01-31T12:00:25.102Z"
updatedAt: "2023-01-31T12:00:25.102Z"

NPM, a widely-used package manager in the web development field, allows for easy sharing and reuse of code, as well as efficient management of project dependencies. The Usersnap package, available on NPM, simplifies the process of integrating the Usersnap snippet into single-page application (SPA) projects.
Installing the Usersnap snippet code in single-page application (SPA) projects is now as easy as running a single command, thanks to this package.
Let's take a look at how we can use it.
[block:api-header]
{
  "title": "How to Install"
}
[/block]
To install the package, use the command below based on your preferred package manager:
[block:code]
{
  "codes": [
    {
      "code": "npm install @usersnap/browser",
      "language": "powershell",
      "name": "Terminal Commands"
    }
  ]
}
[/block]
or
[block:code]
{
  "codes": [
    {
      "code": "yarn add @usersnap/browser",
      "language": "text",
      "name": "Terminal Command"
    }
  ]
}
[/block]
After installing the package, you can start setting up the Usersnap widget like this:
[block:code]
{
  "codes": [
    {
      "code": "import { loadSpace } from '@usersnap/browser'\n\nconst spaceApiKey = ''\n\nloadSpace(spaceApiKey).then((api) => {\n  api.init()\n})",
      "language": "javascript",
      "name": "App"
    }
  ]
}
[/block]
Here, we start by importing the loadSpace method from the @usersnap/browser package, which you have installed in your project using NPM or Yarn.
Then we define a variable spaceApiKey and assign it a string that should be replaced with a valid Space API key. The loadSpace function is called with the spaceApiKey as its argument and returns a promise which when resolved, returns an object. The init method is then called to initialize Usersnap. 
This is our recommended way if you want to fully utilize targeting options configuration.
[block:api-header]
{
  "title": "Inline Form Implementation"
}
[/block]
It's fairly easy to implement the Usersnap widget as part of the layout of your web application.
In order to do that, you need to:
* Set a DOM node (target element) which is where the widget should be appended.
* Mount the widget to the specific DOM Node.
Here's an example of how it can be done:
[block:code]
{
  "codes": [
    {
      "code": "import { loadEmbed } from '@usersnap/browser'\n\n// DOM node of the page where the widget should get appended to\nconst targetNode = document.getElementById('embedWidget')\n\nconst projectApiKey ''\n\nloadEmbed(projectApiKey).then((api) => {\n  api.init({\n    mountNode: document.getElementById(targetNode)!,\n  })\n})",
      "language": "javascript",
      "name": "App"
    }
  ]
}
[/block]
This code imports the loadEmbed function from the Usersnap package, gets the DOM node where the widget should be appended, sets the Project API key, calls the loadEmbed(projectApiKey) function with the key passed in, which returns a promise containing an object. The init method is then called with the mountNode option passed in as an argument, to initialize the Usersnap embed widget and attach it to the specific DOM node of the page.

title: "Installing Usersnap using NPM"
slug: "installing-usersnap-using-npm"
hidden: false
createdAt: "2023-01-23T12:29:57.142Z"
updatedAt: "2023-01-31T12:21:22.948Z"

NPM, a widely-used package manager in the web development field, allows for easy sharing and reuse of code, as well as efficient management of project dependencies. The Usersnap package, available on NPM, simplifies the process of integrating the Usersnap snippet into single-page application (SPA) projects.
Installing the Usersnap snippet code in single-page application (SPA) projects is now as easy as running a single command, thanks to this package.
Let's take a look at how we can use it.
[block:api-header]
{
  "title": "How to Install"
}
[/block]
To install the package, use the command below based on your preferred package manager:
[block:code]
{
  "codes": [
    {
      "code": "npm install @usersnap/browser",
      "language": "powershell",
      "name": "Terminal Commands"
    }
  ]
}
[/block]
or
[block:code]
{
  "codes": [
    {
      "code": "yarn add @usersnap/browser",
      "language": "text",
      "name": "Terminal Command"
    }
  ]
}
[/block]
After installing the package, you can start setting up the Usersnap widget like this:
[block:code]
{
  "codes": [
    {
      "code": "import { loadSpace } from '@usersnap/browser'\n\nconst spaceApiKey = ''\n\nloadSpace(spaceApiKey).then((api) => {\n  api.init()\n})",
      "language": "javascript",
      "name": "App"
    }
  ]
}
[/block]
Here, we start by importing the loadSpace method from the @usersnap/browser package, which you have installed in your project using NPM or Yarn.
Then we define a variable spaceApiKey and assign it a string that should be replaced with a valid Space API key. Your Space API key should be available in the "Publish" page of your project. You can navigate to Configure -> Publish to copy your Space API key:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7830e58-NPM_1.png",
        "NPM_1.png",
        1213,
        241,
        "#000000"
      ]
    }
  ]
}
[/block]
The loadSpace function is called with the spaceApiKey as its argument and returns a promise which when resolved, returns an object. The init method is then called to initialize Usersnap. 
This is our recommended way if you want to fully utilize targeting options configuration.
[block:callout]
{
  "type": "info",
  "title": "Inline Form Implementation",
  "body": "You can check out our Inline form installation guide if you want to use Usersnap widgets as part of your website's layout."
}
[/block]

title: "Intercom"
slug: "intercom"
hidden: false
createdAt: "2021-02-05T16:43:46.013Z"
updatedAt: "2021-02-05T16:55:11.501Z"

[block:api-header]
{
  "title": "Connect Usersnap with Intercom"
}
[/block]
When you collect feedback from your users with the Usersnap widgets, you can manage them in the Usersnap dashboard. If your customer service team works with Intercom, why not send the feedback items with all metadata and screenshot to Intercom?
Connect Usersnap with Intercom via Zapier.
Zapier is an easy integration solution for various software products.

title: "Intro"
slug: "intro"
hidden: false
createdAt: "2022-05-23T07:43:38.158Z"
updatedAt: "2022-06-02T13:16:56.938Z"

[block:api-header]
{
  "title": "Why do you need an intro?"
}
[/block]
Intros are important because they set the tone of your feedback collecting process.
In addition, they can prepare your audience for what to expect and what you need them to do hence having them onboarded effortlessly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e7903f6-Intro.png",
        "Intro.png",
        889,
        735,
        "#f6f7f9"
      ]
    }
  ]
}
[/block]

title: "Invite clients to your account"
slug: "invite-clients-to-your-account"
hidden: false
createdAt: "2021-02-03T21:35:09.092Z"
updatedAt: "2022-06-07T12:02:10.883Z"

There are two ways how you can add your clients to collaborate with you over the tickets and feedback items.
[block:api-header]
{
  "title": "Add clients as team members"
}
[/block]
You can add your clients as team members to your dashboard in Usersnap and they can collaborate with you like your other team members. This is one way how to collaborate. If you want to give them limited access to your project use the new guest access functionality.
[block:api-header]
{
  "title": "Give your clients guest access"
}
[/block]
Give your clients access to a project via the guest access and add them as "guest users". 
See how it will work: Board for your guest users

title: "Issues with CSS & Styles"
slug: "issues-css-styles"
hidden: false
createdAt: "2017-09-18T09:17:12.139Z"
updatedAt: "2023-02-23T10:43:11.121Z"

This section shows you how to configure your settings if you encounter CSS or Style issues when creating screens with Usersnap.
[block:api-header]
{
  "title": "CSS/Style issues in rendered screenshots"
}
[/block]
There may be instances when your Usersnap screens are not correctly rendered or lack CSS/style information. This is usually if your site is behind a firewall or requires basic authentication. It can also be that your static resources are protected.
Usersnap's rendering engine needs access to your site's static resources (images + stylesheets) to be able to render your screens accurately. You can find instructions here on how to fix this.
[block:api-header]
{
  "title": "Font rendering issues"
}
[/block]
If the text in a screenshot has a different font than on your website it can be that our renderer failed to load the font.
You can make sure that the font can be loaded by setting the Access-Control-Allow-Origin header on the resource to *.
[block:api-header]
{
  "title": "Known issue with modal"
}
[/block]
The modal component of multiple libraries is by default set to prevent the focus from leaving the modal as such behavior follows the accessibility guidelines. 
Unfortunately, such behavior also blocks the user from typing in our widget if a modal is currently open. In order to resolve this issue, you need to ensure that modal is not preventing focus from leaving the modal.
For example, using MaterialUI library can be achieved by setting ‘disableEnforceFocus’ prop to true. 
See here for more information.
[block:api-header]
{
  "title": "Cross-origin Content"
}
[/block]
Cross-origin content is not captured and rendered in the Usersnap screen. This is because the browser does not allow the Usersnap widget to capture cross-origin content.
In this case, we suggest using our browser extensions to create a screenshot that shows the cross-origin content.
[block:api-header]
{
  "title": "Custom HTML elements"
}
[/block]
Unfortunately, Usersnap does not support the usage of custom HTML elements. Although there aren't concrete plans for the future to support its usage, there is always the possibility of using the browser extension instead.

title: "Jira Software (2-way sync updated)"
slug: "jira-software-2-way-sync-updated"
hidden: true
createdAt: "2023-01-18T00:09:39.719Z"
updatedAt: "2023-01-18T15:00:02.868Z"

[block:api-header]
{
  "title": "Connect Usersnap with Jira Software"
}
[/block]
Jira, one of the best project management and issue-tracking tools, can be integrated with Usersnap to provide excellent benefits such as streamlined issue tracking, improved collaboration between teams, and increased efficiency.
Usersnap can connect to your Jira Software and Service Desk projects via Jira Cloud or Jira OnPremise.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Jira Software from the grid.
Choose the kind of Jira Software installation you have, Jira Cloud or Jira OnPremise.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/89ad411-Jira.png",
        "Jira.png",
        1100,
        734,
        "#f2f5f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/zyltu4im3a",
  "title": "Jira Integration - visual bug tracking with Usersnap ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/f3e0d81cc9257e7bdd9ff8bd9085175f.jpg?image_crop_resized=960x536"
}
[/block]
If you are using Jira Cloud, select the correct site then 'Accept' and log in with your Jira credentials.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b894382-5.png",
        "5.png",
        711,
        821,
        "#fbfbfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly, and don't forget to save the settings.
Importantly, Jira fields assignee and issue type can also be displayed on the widget.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c1cc86f-Jira_2.png",
        "Jira 2.png",
        659,
        777,
        "#f5f6f8"
      ]
    }
  ]
}
[/block]
Your users can easily select them from the widget like this.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ccd59be-Jira_improvement_2.png",
        "Jira improvement 2.png",
        854,
        952,
        "#f8f0f0"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Jira OnPremise"
}
[/block]
For Jira OnPremise users please kindly create the application link  first using our client id and public key.
And now you can simply enter the credentials of your JIRA account and the hostname of your Jira Software installation. Click on 'Connect now'.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b71f72d-jira_3.png",
        "jira 3.png",
        1024,
        791,
        "#f6f3f6"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "title": "Important:",
  "body": "If you have self-hosted premises Jira server, please make sure your server allows access from our rendering IP addresses.\nPlease also check that your SSL certificates are valid if you are using SSL for your Jira server."
}
[/block]
[block:api-header]
{
  "title": "Tutorial"
}
[/block]
Here you can see find how to set up the integration with Jira OnPremise easily.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/kwcpokcn53",
  "title": "Screen Recording 2020-05-12 at 16.08.45",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/933dbb37901925aa01fb243f429c4a83bdd96815.jpg?image_crop_resized=960x550"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Please make sure the user used to create integration has permissions in Jira to create new issues.\nMore detailed info can be found here: https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/",
  "title": "Permissions required: Create issues project permission"
}
[/block]
[block:api-header]
{
  "title": "Seamless data exchange through 2-way sync integration"
}
[/block]
Bidirectional communication and data exchange between Usersnap and Jira are now possible with the help of 2-way sync integration. This means that any changes made in one system (e.g. Jira) will be automatically reflected in the other system (e.g. Usersnap), and vice versa. This way, teams can collaborate more effectively, and users from the Usersnap side can see the progress being made in resolving their feedback or bugs.
Let's have a look at an example of how 2-way sync might work between Usersnap and Jira:

A user submits feedback or reports a bug using the Usersnap feedback widget on a web page.
This feedback or bug report is automatically sent to Jira, where it is created as a new issue.
The developer works on the issue in Jira and updates the status, assigns it to a team member, or adds comments.
These updates are automatically synced back to Usersnap, so that the user who submitted the feedback or bug report can see the progress being made.
When the issue is resolved, the developer can mark it as closed in Jira, and this information is automatically synced back to Usersnap, so the user can see that the issue has been resolved.

[block:callout]
{
  "type": "info",
  "body": "To enable the 2-way sync feature for Usersnap and Jira integration, existing integration needs to be removed and re-established."
}
[/block]

title: "Jira Software"
slug: "jira-software"
hidden: false
createdAt: "2023-01-12T10:32:44.025Z"
updatedAt: "2023-01-13T06:08:06.388Z"

[block:api-header]
{
  "title": "Connect Usersnap with Jira Software"
}
[/block]
Jira Software and Usersnap can be easily connected.
Usersnap can connect to your Jira Software and Service Desk projects via Jira Cloud or Jira OnPremise.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Jira Software from the grid.
Choose the kind of Jira Software installation you have, Jira Cloud or Jira OnPremise.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/89ad411-Jira.png",
        "Jira.png",
        1100,
        734,
        "#f2f5f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/zyltu4im3a",
  "title": "Jira Integration - visual bug tracking with Usersnap ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/f3e0d81cc9257e7bdd9ff8bd9085175f.jpg?image_crop_resized=960x536"
}
[/block]
If you are using Jira Cloud, select the correct site then 'Accept' and log in with your Jira credentials.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b894382-5.png",
        "5.png",
        711,
        821,
        "#fbfbfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly, and don't forget to save the settings.
Importantly, Jira fields assignee and issue type can also be displayed on the widget.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c1cc86f-Jira_2.png",
        "Jira 2.png",
        659,
        777,
        "#f5f6f8"
      ]
    }
  ]
}
[/block]
Your users can easily select them from the widget like this.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ccd59be-Jira_improvement_2.png",
        "Jira improvement 2.png",
        854,
        952,
        "#f8f0f0"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Jira OnPremise"
}
[/block]
For Jira OnPremise users please kindly create the application link  first using our client id and public key.
And now you can simply enter the credentials of your JIRA account and the hostname of your Jira Software installation. Click on 'Connect now'.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b71f72d-jira_3.png",
        "jira 3.png",
        1024,
        791,
        "#f6f3f6"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "title": "Important:",
  "body": "If you have self-hosted premises Jira server, please make sure your server allows access from our rendering IP addresses.\nPlease also check that your SSL certificates are valid if you are using SSL for your Jira server."
}
[/block]
[block:api-header]
{
  "title": "Tutorial"
}
[/block]
Here you can see find how to set up the integration with Jira OnPremise easily.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/kwcpokcn53",
  "title": "Screen Recording 2020-05-12 at 16.08.45",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/933dbb37901925aa01fb243f429c4a83bdd96815.jpg?image_crop_resized=960x550"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Please make sure the user used to create integration has permissions in Jira to create new issues.\nMore detailed info can be found here: https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/",
  "title": "Permissions required: Create issues project permission"
}
[/block]

title: "Let your users add attachments in the widgets"
slug: "let-your-users-add-attachments-in-the-widgets"
hidden: false
createdAt: "2022-05-27T10:39:26.436Z"
updatedAt: "2022-05-27T10:44:22.896Z"

If taking a screenshot of the site is not enough, your users can also attach an additional file to every feedback item. We know that sometimes it can be necessary to add an image taken elsewhere or some data to back up your requests. Don't worry!
We hear you and now it can be configured directly in the dashboard to make this feature of attachment either optional or required.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/98679ce-attachment_2.png",
        "attachment 2.png",
        923,
        264,
        "#f2f6f4"
      ]
    }
  ]
}
[/block]
Your users can easily drag or upload an additional file to the feedback item to be submitted along.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b93da1d-attachment_3.png",
        "attachment 3.png",
        427,
        569,
        "#f9f8f6"
      ]
    }
  ]
}
[/block]

title: "Local Development Environments"
slug: "local-development-environments"
hidden: false
createdAt: "2018-05-07T08:35:05.332Z"
updatedAt: "2021-07-06T16:58:04.572Z"

How to use Usersnap on local development machines and staging sites.
[block:api-header]
{
  "title": "Local Development Environments and Staging Sites"
}
[/block]
In order to use Usersnap with a local development machine (any other on-premise machine) or your staging site, we recommend activating a feature that the in-app browser screenshots are taken via the browser-in-built "media-record-API". You can also consider a forwarding service like PageKite. 
Another option is to use our browser extensions they work in a local environment, too.
Whenever your URL goes like http(s)://localhost:(number), you have to use the above solution. But in general, Usersnap is not built for local environments, as you want to collect customer and user feedback with it :).

title: "Measure CX and UX with ratings"
slug: "measuring-customer-happiness-experience"
hidden: false
createdAt: "2021-02-03T21:37:21.215Z"
updatedAt: "2022-06-30T12:16:08.645Z"

Using ratings or polls to get customer feedback can help you quantify customer satisfaction and segway into more in-depth questions.
[block:api-header]
{
  "title": "Sending targeted website & in-product rating surveys"
}
[/block]
Using targeting options such as specific URL paths, trigger by API event, trigger by time on page... etc can increase the response rate of the surveys. Ask relevant questions to get more insightful feedback!
Watch this short video on targeting pro-tips:
[block:html]
{
  "html": "\n\n\n"
}
[/block]
Watch this walk-through of measuring product experiences with rating pop-ups:
[block:html]
{
  "html": "\n\n\n"
}
[/block]

title: "Micro surveys"
slug: "micro-surveys-for-websites-web-products-and-mobile-apps"
hidden: true
createdAt: "2021-12-22T12:24:12.475Z"
updatedAt: "2022-03-14T11:48:54.342Z"

[block:api-header]
{
  "title": "Multi-choice pop-up mini surveys"
}
[/block]
Understand and validate your customers' motivations and needs with a short website or in-app survey. The easier it is for customers to respond, the more answers you will get! 
Here's a video with 9 examples of mini-surveys that you use to understand the customer journey:
[block:html]
{
  "html": "\n  "
}
[/block]
[block:api-header]
{
  "title": "How to create a microsurvey"
}
[/block]
Start with the Micro survey project template. All questions and answer fields can be customized.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/af38fb2-Screenshot_2021-12-22_at_13.49.47.png",
        "Screenshot 2021-12-22 at 13.49.47.png",
        2858,
        1634,
        "#f2f3f6"
      ]
    }
  ]
}
[/block]
Use the question type Poll and define answer options, you can add as many choices of answers as you wish. The answer type is single selection. For multiple selction, you can use the Checkbox field. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/020d99c-poll_1.png",
        "poll 1.png",
        1653,
        741,
        "#f5f7f8"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
The results of the survey are shown in Statistics. Each poll question has its own doughnut chart card.
Note that if you change the answer options after the project has collected replies, the old responses will show the original answer, only the new responses will be counted with the new answer option(s).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7b19d7e-Microsurvey_statistics.jpg",
        "Microsurvey statistics.jpg",
        960,
        540,
        "#f4f6f6"
      ]
    }
  ]
}
[/block]

title: "Microsoft Teams"
slug: "microsoft-teams"
hidden: false
createdAt: "2020-09-14T08:39:20.156Z"
updatedAt: "2022-03-07T09:16:28.902Z"

[block:api-header]
{
  "title": "Connect Usersnap with Microsoft Teams"
}
[/block]
Usersnap and Microsoft Teams can be easily connected.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Microsoft Teams from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/629ab3e-Microsoft_Teams_1.png",
        "Microsoft Teams 1.png",
        1343,
        626,
        "#f4f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Connect them via the Webhook URL following this documentation. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a5be1e9-Microsoft_Teams_2.png",
        "Microsoft Teams 2.png",
        784,
        318,
        "#f3f3f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Migrating existing Legacy projects to the Platform system"
slug: "migrating-existing-classic-projects-to-the-platform-system"
hidden: true
createdAt: "2022-06-13T06:45:25.591Z"
updatedAt: "2022-06-29T11:57:35.813Z"

[block:api-header]
{
  "title": "What does self-serviced migration mean?"
}
[/block]
Migration is essentially copying and pasting. The system will export your tickets, create a new project and import them there.
Now instead of having your project auto-migrated, you are in full control of the migration process.
A new project (the platform project) will take the place of the legacy (classic) project you migrated. That means once hitting the "Migrate Project" button, the old project will no longer be seen in the dashboard.
If you wish to keep the data of your existing legacy project in the format of CSV or Excel files, you can export the classic project like this before starting the migration process. 
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "1. Only the team admin and the project owner can migrate a project.\n\n2. If your legacy projects contain more than 100k screens, it is not yet possible to migrate them via the self-serviced button. It will be available in a later time frame.\n\n3.  Usersnap will auto-migrate your projects starting from 31st March 2022."
}
[/block]
[block:api-header]
{
  "title": "What you need to do is just these 3 simple steps:"
}
[/block]
Step 1
Go into the project you wish to export and open the "Project settings".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/67a270f-045376f-Self_migration_1.png",
        "045376f-Self_migration_1.png",
        1919,
        669,
        "#ecf0f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Step 2
Hit the "Migrate project" button.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e0ba4f6-189561a-migration.png",
        "189561a-migration.png",
        961,
        215,
        "#f4f3ed"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Step 3
Read through the message carefully and check all 3 boxes in order to confirm the process.
There is also a guide to install the new project so you can include necessary parties to replace the old snippet with the new code snippet.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1567930-6abc962-Self_migration_3.png",
        "6abc962-Self_migration_3.png",
        596,
        283,
        "#f2d9de"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "The URLs to the screens",
  "body": "As the migrated legacy project will no longer be accessible, all the links previously received through email will cease to work."
}
[/block]
Most settings in the new project will align with your legacy project to save you time on re-configuring everything.
However, for privacy reasons, there are some settings you will need to re-configure in the new project:

Integrations: 
The new project will by default be not connected to any 3rd party integrations. 
You can easily reconnect the tools in the integrations tab. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fde4f33-integrations.png",
        "integrations.png",
        1524,
        888,
        "#f5f7f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

Display URLs: 
If you have set restrictions of URLs for your widget, this would also need to be added to the new settings. 
In the Configuration tab, go to Display > Path Targeting to limit where you want your widget to show. 
The detailed info can be found in Control the visibility of buttons and widgets.


Replacing the code on your website/app: 
Since the new project is independent of the existing old project, you will have a new Usersnap snippet code. 
To start running the new project, just like before, you need to place the new snippet on your website or app and remove the old code. 


Lastly, when you see the feedback items in the new project, the previous activity log will be partially incomplete. 
You can rest assured that the state of the feedback items and comments remains and are 100% identical. 
Only the timestamps of the labels and item closing dates are not visible.
In other words, if a feedback item had a label, was assigned to a member, and was marked closed, in the new project it will keep the label and assignee and stay closed, just the notes in the activity log will be left behind.
In addition, the message "has been sent to integration x" shown in a screen's Timeline will not be visible, neither. This applies to screens both sent to integrations automatically and manually.
[block:callout]
{
  "type": "info",
  "title": "How much time will it take to self-migrate a legacy project?",
  "body": "It depends on your project size. \nRoughly you can estimate 1 hour for around 3500 screens.\nAfter the migration process is done, you'll get notified by email and the migrated project will appear in your Usersnap dashboard."
}
[/block]

title: "Monday"
slug: "monday"
hidden: false
createdAt: "2022-01-25T13:37:39.016Z"
updatedAt: "2022-05-25T09:47:04.720Z"

[block:api-header]
{
  "title": "Connect Usersnap with Monday"
}
[/block]
Usersnap can be easily connected with Monday.
[block:api-header]
{
  "title": "Here's how it works:"
}
[/block]
Simply sign in to your Monday account and go to the Admin tab to obtain Monday's private token under the API section. Please copy the token.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1fc4526-Monday_2.png",
        "Monday 2.png",
        890,
        663,
        "#e9ecec"
      ]
    }
  ]
}
[/block]
Go to your Usersnap project’s Integration tab and select Monday from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4282344-Monday.png",
        "Monday.png",
        1103,
        736,
        "#f3f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Paste the Monday's private token and hit "Connect now".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6025c4c-Monday_2.png",
        "Monday 2.png",
        1027,
        389,
        "#f3f4f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly and a test feedback item can be sent right from here.
Don't forget to save the settings when finished.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7cf591c-Monday_3.png",
        "Monday 3.png",
        806,
        769,
        "#f3f4f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can manage the items pushed to Monday directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e8f7253-Monday_4.png",
        "Monday 4.png",
        694,
        674,
        "#fafafa"
      ]
    }
  ]
}
[/block]

title: "Moving feedback items"
slug: "moving-feedback-items"
hidden: false
createdAt: "2021-10-05T11:13:32.341Z"
updatedAt: "2022-05-27T09:49:26.841Z"

[block:api-header]
{
  "title": "Moving feedback items to another project"
}
[/block]
Feedback items can be moved across different projects and different project types.
The moved item will disappear from the original project, however, its item number will still be reserved.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7683357-move_item.png",
        "move item.png",
        439,
        231,
        "#d4e1de"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You can see the history of the move in the dashboard as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f0684d6-Move_item_2.png",
        "Move item 2.png",
        1076,
        821,
        "#ebedee"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The items can also be moved in a bundle.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9839aba-move_item_2.png",
        "move item 2.png",
        315,
        429,
        "#eef3f1"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]

title: "My account"
slug: "my-account"
hidden: false
createdAt: "2022-06-24T07:50:26.650Z"
updatedAt: "2022-12-07T08:21:55.847Z"

Your Usersnap account can be easily managed under "My account".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f5c8c0e-my_account_1.png",
        "my account 1.png",
        282,
        124,
        "#f4f6f6"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Profile"
}
[/block]
Your profile photo can be uploaded via Gravatar and the username and your role in the company can also be updated here.
Don't forget to hit "Save" after the change is done.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/df1dfa9-my_account_2.png",
        "my account 2.png",
        1056,
        554,
        "#f6f8f9"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Account Settings"
}
[/block]
You can easily reset the password here.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/134241a-my_account_3.png",
        "my account 3.png",
        1082,
        574,
        "#f5f8f9"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
In order to secure the log-in, you can also activate the two-factor authentication in this tab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/982ebef-2fa.png",
        "2fa.png",
        465,
        564,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Subscription"
}
[/block]
As the team admin, you can manage your team's subscription here and also customize your plan freely.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/40c9883-my_account_5.png",
        "my account 5.png",
        1020,
        803,
        "#f5f7f9"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
More related info can be found in Subscribe to a Usersnap plan and Purchase more team members and projects. 
[block:api-header]
{
  "title": "Billing"
}
[/block]
The team admin can view and download all invoices in the "Billing" tab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0f2c80b-my_account_6.png",
        "my account 6.png",
        1016,
        641,
        "#f7f8f9"
      ]
    }
  ]
}
[/block]
The Billing info and the default payment method, i.e. the credit card info, can also be updated here.
The receipts are sent by email to you. 
Hence you can replace the "Billing email" to your finance team's contact if needed.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/756c339-my_account_7.png",
        "my account 7.png",
        1035,
        657,
        "#f2f7f5"
      ]
    }
  ]
}
[/block]

title: "Notifications"
slug: "notifications"
hidden: false
createdAt: "2022-05-30T09:32:18.271Z"
updatedAt: "2022-06-20T13:32:57.709Z"

[block:api-header]
{
  "title": "Project-based notifications"
}
[/block]
For every project, you can define if you'd like to get email notifications on screens other people have created. The item will also appear in your Usersnap inbox.
You can change this simply by clicking on the "3 dots"-menu located at the right upper corner of your project and decide if you'd like to subscribe to or unsubscribe from the project's notifications.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c9a7fd8-notification_1.png",
        "notification 1.png",
        235,
        189,
        "#f0f2f3"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
If you have unsubscribed from the project, the bell icon will be crossed out.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/201e02f-notification_2.png",
        "notification 2.png",
        220,
        176,
        "#fcfafa"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You can also subscribe or unsubscribe other team members from certain projects easily.​
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2deda11-notification_3.png",
        "notification 3.png",
        258,
        201,
        "#eaf2f3"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Where are the global notifications?",
  "body": "Currently, there are no global notifications for the account. We will keep you informed if we add such a feature."
}
[/block]

title: "Net Promoter Score (NPS)"
slug: "nps-rater"
hidden: true
createdAt: "2019-07-16T10:03:52.876Z"
updatedAt: "2021-02-04T14:36:33.090Z"

[block:api-header]
{
  "title": "Measuring NPS in your product"
}
[/block]
The NPS rater lets you measure your customers' loyalty. Your users can give your product or services a rating from 0-10. The question is standardized to "How likely are you to recommend our service to your friend or colleague?"
0-6 are detractors
7-8 are passives
9-10 are promoters
When a user chooses a score, they will be prompted to share why they gave that rating and provide their email address (or you can pass the email address for them).
Learn more about NPS
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6a89395-NPS1.png",
        "NPS1.png",
        530,
        495,
        "#dedef0"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Have a clear overview of your feedback items in the "List" section. The split view can also give you a quick peek at the ticket itself.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/80a90a1-overview.png",
        "overview.png",
        1915,
        1150,
        "#ebebf2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Usersnap automatically calculates the Net Promoter Score (NPS) trends based on the feedback items submitted.
Get helpful insights within the selected time frame right in your project dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7588f32-NPS_4.png",
        "NPS 4.png",
        1916,
        1152,
        "#f6f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "How the Net Promoter Score (NPS) is calculated"
}
[/block]
Detractors: Customers, who give a 6 or below
Passives: Customers, who give a 7 or 8
Promotors: Customers, who give a 9 or 10. 
Net Promotor Score = Percentage of Detractors - Percentage of Promoters
E.g. if 50% of respondents were Promoters and 10% were Detractors, the Net Promoter is a score of 40.

title: "Open the widget with your own feedback button"
slug: "open-the-widget-with-your-own-feedback-button"
hidden: false
createdAt: "2021-02-11T11:36:00.136Z"
updatedAt: "2022-06-02T12:49:37.745Z"

Great. You want to start collecting feedback from your users and customers. If you want to use your own feedback buttons and not use the standard Usersnap ones, no problem. Here's a short guide on how to proceed.
Create a feedback project and in case, you haven't installed the Usersnap snippet code yet, please follow this installation guide. Next, you need a few lines of JavaScript code in your website or web application. Ready to collect feedback. 
Control the displaying of the buttons and feedback widgets with this API reference.
A custom button can be created and placed where you want it to be. There are two options for how to do it.
[block:api-header]
{
  "title": "This is how it can be done."
}
[/block]
1. Hide the standard button of the feedback widget
You have to configure the "Target" right so that the widgets only appear when someone clicks on your button.
And then simply set the Audience to "Everybody" or to who should be able to see it.
The trigger shall be "API event" which in this case has the value "open_yhc_star", but you can of course define any name you want.
PS. Please make sure in case you have multiple widgets, the event names do not overlap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/cde1ae8-event_1.png",
        "event 1.png",
        1043,
        739,
        "#f6f7f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "body": "Do not forget to press the \"Set live\" button of the project. This controls whether the project is available at all or not."
}
[/block]
2. Implement your own button
This is an example of JavaScript code to open the widget via API event, which was defined in the previous step:
[block:code]
{
  "codes": [
    {
      "code": "window.Usersnap.logEvent('open_yhc_star')",
      "language": "javascript"
    }
  ]
}
[/block]
Here's an example of a button opening a specific widget using API event.
[block:code]
{
  "codes": [
    {
      "code": "Open YHC Star widget",
      "language": "html"
    }
  ]
}
[/block]
That's all you have to do.

title: "Outro"
slug: "outro"
hidden: false
createdAt: "2022-05-23T07:43:45.477Z"
updatedAt: "2022-06-02T13:18:51.105Z"

[block:api-header]
{
  "title": "The impact of an outro"
}
[/block]
An outro concludes the whole feedback collection.
It keeps your audience engaged and has the feeling of being part of your community.
Not only does an outro leave your audience with impactful impressions, but it also wraps up the process on a good note.
It can be used as an "auto-reply" in order to convey certain business-related messages as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/21637b5-outro.png",
        "outro.png",
        1557,
        758,
        "#f8faf9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Customizing of the widget's thank-you-page - the outro screen"
}
[/block]
There's an outro screen after a feedback item is submitted. There is a default text that is automatically translated in all default languages.
However, you can of course write your own text and link an URL to redirect your visitors elsewhere as desired. This can be used as a way to set up the parameter in order to track your visitor's path.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fbc6e53-outro_2.png",
        "outro 2.png",
        1627,
        701,
        "#f9f8f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Payments FAQ"
slug: "payments-faq"
hidden: false
createdAt: "2017-09-18T11:58:28.545Z"
updatedAt: "2022-06-24T08:05:32.525Z"

[block:api-header]
{
  "title": "Most helpful FAQs for your payment"
}
[/block]
- How to subscribe to a Usersnap plan?


Can I purchase more team members and projects? 


What payment methods do you accept?


Do you offer bank transfer as a payment?


Do you offer discounts?


What is your refund policy?


My company is in the EU, do we need a VAT number?


Where can I see my invoices?


How does the Brexit influence my payments with Usersnap?
[block:api-header]
{
  "title": "What payment methods do you accept?"
}
[/block]
We accept payments via credit cards such as VISA, MasterCard, and American Express. Please note that you do not need a credit card to sign up for a Usersnap trial. For Enterprise plans, we also accept bank transfers for annual plans.
[block:api-header]
{
  "title": "Do you offer bank transfer as a payment?"
}
[/block]
If you decide on an Enterprise plan, we can offer bank transfer instead of credit card payment. Enterprise plans can be purchased with annual subscriptions only.
[block:api-header]
{
  "title": "Do you offer discounts?"
}
[/block]
We offer discounts to NGOs and educational institutions. For more information, please get in touch with the team.
[block:api-header]
{
  "title": "What is your refund policy?"
}
[/block]
We offer a free 15-day trial, take your time to find out if the product fits your requirements. You can cancel your subscription anytime.


Please, be aware that we can not offer partial refunds for the remaining subscription.
[block:api-header]
{
  "title": "My company is in the EU, do we need a VAT number?"
}
[/block]
If you are a customer from the EU or UK, we require a valid VAT number. We apply the reverse charge system and you will not be charged for VAT on your invoice. Unfortunately, we can't offer you an account if your organization is in the EU (or UK) and you have no valid VAT number. If you set your country outside the EU (or UK), you will not be asked for a VAT-ID.
[block:api-header]
{
  "title": "Where can I see my invoices?"
}
[/block]
As the team admin, you can download the invoices under the "Billing" page of your Usersnap portal. 
Usersnap also sends the receipts (not invoices) to the team admin in an email. We would suggest you set up an email forwarding rule in your inbox to pass them on to the finance department if needed.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2b0ea41-my_account_6.png",
        "my account 6.png",
        1016,
        641,
        "#f7f8f9"
      ]
    }
  ]
}
[/block]
The team admin can also replace her/his email with another email address, for instance, the finance team's email.
Don't forget to hit the "Save" button after the change is done.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e5c9da4-my_account_7.png",
        "my account 7.png",
        1035,
        657,
        "#f2f7f5"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "How does the Brexit influence my payments with Usersnap?"
}
[/block]
As a customer from the UK, you still need the VAT ID, because Usersnap can only make business with companies with a valid VAT ID (in the EU and UK).
If you have further questions, please contact our customer success team.

title: "Settings"
slug: "permissions-limited-access-to-the-dashboard"
excerpt: "General settings"
hidden: false
createdAt: "2021-05-18T14:11:46.475Z"
updatedAt: "2022-08-09T04:03:15.582Z"

In the tab of "Settings", the project name, assignee, permissions, and console recording can be configured.
[block:api-header]
{
  "title": "Change the owner of a project"
}
[/block]
The project's owner can be easily changed in the "Settings" tab of the manage section.
You can also allocate all items to a designated assignee.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/158e632-project_owner.png",
        "project owner.png",
        1126,
        369,
        "#f3f7f6"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Feedback confirmation email"
}
[/block]
Project Members have the possibility to send customers confirmation emails after they submit a feedback item.
Feedback confirmation emails will be sent with a copy of the feedback submitted, and customers will also be able to reply to these emails. Their replies will be shown in the dashboard (as a thread).
For each project, it can be defined whether confirmation emails should be sent to feedback submitters.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/86028be-Confirm_email_1.png",
        "Confirm email 1.png",
        1103,
        659,
        "#f4f7f7"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "This feature only works when the submitters' email addresses are fetched."
}
[/block]

title: "Customer support"
slug: "platform-project-menu-routing"
hidden: true
createdAt: "2020-04-15T05:56:32.455Z"
updatedAt: "2022-07-29T05:53:22.532Z"

[block:api-header]
{
  "title": "The feedback menu"
}
[/block]
It is possible to have multiple projects installed on the same site targeting different types of feedback. 
[block:html]
{
  "html": "\n  \n\n"
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ec487b5-new_menu_1.png",
        "new menu 1.png",
        2530,
        1790,
        "#f0f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You might also have the need to include a chat for customer service and a link to your help center (documentation).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/75df24c-Routing_Menu.png",
        "Routing Menu.png",
        2880,
        1480,
        "#c6c8cc"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
​
[block:html]
{
  "html": "\n\n\n  Create feedback menu\n  \n"
}
[/block]
[block:api-header]
{
  "title": "How do I include my customer support chat into the feedback menu, i.e. Intercom?"
}
[/block]
​It can be done easily and let's take "Intercom" as an example.
Go to the "Form" tab and choose "Execute Javascript Code". Add the JavaScript code of your customer support chat solution to open it. In this case, it's "Intercom('show')". 
This code varies from solution to solution, depending on which software you use. 
Please, verify this installation code with your tech team.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a962a86-new_menu_5.png",
        "new menu 5.png",
        896,
        442,
        "#eef2f5"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "What is the right size for icons in the menu?"
}
[/block]
If you set your own icons in the feedback menu, use a 40 x 40 pixels resolution.

title: "Product Insight"
slug: "platform-project-product-engagement"
hidden: true
createdAt: "2020-06-08T09:28:01.842Z"
updatedAt: "2022-03-14T11:14:26.544Z"

[block:api-header]
{
  "title": "Feature Request projects"
}
[/block]
In order to collect feature requests for product improvement, use this handy feedback widget.
[block:html]
{
  "html": "\n  "
}
[/block]
Encourage your users to send in wishes and ideas rapidly while the statistic report is already available at the same time,
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ed535b8-Product_insight.png",
        "Product insight.png",
        1784,
        914,
        "#f4f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You can configure the toolbar of annotations the way that fits best in your use case. Its multiple annotations allow you to draw, pin an arrow, blackout (hide) an area, and leave a comment on the feedback item.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/823e442-toolbar.png",
        "toolbar.png",
        1679,
        427,
        "#f7f7fa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "QA feedback projects"
slug: "platform-project-qa-feedback-projects"
hidden: true
createdAt: "2020-04-22T08:51:57.989Z"
updatedAt: "2021-04-28T12:35:49.807Z"

[block:api-header]
{
  "title": "Various feedback projects for QA, UAT and Beta Testing"
}
[/block]
Choose one of these feedback projects:

Bug Tracking
Quick issue reporting
Beta Test and
Acceptance Testing (UAT)

They are designed specifically to facilitate your quality assurance (QA) and User Acceptance Testing (UAT) process. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7a0b80d-QA_cat..png",
        "QA cat..png",
        1821,
        904,
        "#f4f3f5"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Bug Tracking Project"
}
[/block]
The Bug Tracking project has various annotation tools to "Highlight", "Comment", "Draw with a Pen", "Arrow", and "Hide" at your users' disposal. 
The assignee of the report is also selectable. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/30662a4-IBT1.png",
        "IBT1.png",
        1916,
        940,
        "#5140ce"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
If the users prefer to record the screen instead of taking a screenshot, they can have it done simply by clicking on the icon for the recording.  More detailed info can be found here. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/35a9fd3-IBT2.png",
        "IBT2.png",
        272,
        323,
        "#d9deef"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Quick issue reporting"
}
[/block]
It allows users to highlight the screenshot and send it directly. Without the toolbar involved, you can receive feedback items at the ultimate speed. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d7c3284-quick_issue_reporting.png",
        "quick issue reporting.png",
        803,
        579,
        "#f5f2f2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Beta Testing"
}
[/block]
[block:html]
{
  "html": "\n  \n\n"
}
[/block]

title: "REST API"
slug: "platform-rest-api"
hidden: false
createdAt: "2020-10-22T08:36:12.454Z"
updatedAt: "2023-01-20T07:59:51.763Z"

[block:callout]
{
  "type": "info",
  "title": "Only for Enterprise plans",
  "body": "This REST API is currently only available for customers with Enterprise plans. If you are not sure where you can find the details on the REST API, please contact our customer success team."
}
[/block]
Usersnap provides a way for you to use the platform's capabilities via a REST API. To begin with, you need to make sure that you're part of a plan that allows you to do that. Once you're a part of such a plan, you'll see an option to configure Rest API under settings, as shown below.
Usersnap uses Bearer authentication to protect its API endpoints. To be able to make requests to the platform API, you'll first need to generate a JWT secret on Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/836ac94-Rest_API.png",
        "Rest API.png",
        1359,
        1023,
        "#000000"
      ]
    }
  ]
}
[/block]
Usersnap uses Bearer authentication to protect its API endpoints. To be able to make requests to the platform API, you'll first need to generate a JWT secret on Usersnap.
Once this secret has been generated, you can use it to create JWTs on your own. The header of the JWT needs to contain a kid field whose value is the JWT ID generated on Usersnap. The JWT header would look like this:
[block:code]
{
  "codes": [
    {
      "code": "{\n    \"alg\": \"HS256\",\n    \"typ\": \"JWT\",\n    \"kid\": \"\n}",
      "language": "json"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "title": "Please, use HS256 as algorithm",
  "body": "Don't use HS512."
}
[/block]
Finally, you must send this JWT as a bearer token in the Authorization header when making requests to Usersnap's API endpoints.
API documentation can be accessed here.
[block:api-header]
{
  "title": "Example call for the REST API"
}
[/block]
This is an example request on how you can post data via a CURL call. Is this how you can use it in your application and send feedback without using the feedback widgets.
[block:code]
{
  "codes": [
    {
      "code": "# submit a feedback\ncurl -H \"Authorization: Bearer \" \\n     -H \"Content-Type: application/json\" \ \n     -d '{\"visitor\":\"ms@usersnap.com\", \"comment\":\"this is my comment\", \"custom\": \"{\\"user_id\\": 45612, \\"user_hash\\": \\"cafeaffe-dead-4eef\\"}\"}' \\n     https://platform.butterhaserl.com/v0.0/projects//feedbacks",
      "language": "curl"
    }
  ]
}
[/block]

title: "Poll"
slug: "poll"
hidden: false
createdAt: "2022-05-27T10:47:50.408Z"
updatedAt: "2022-05-27T10:54:11.113Z"

When creating a project (non-feedback menu project), you can configure the form and add a poll field.﻿
This offers you a way to ask a question with several pre-provided answers to be chosen from.
Moreover, the options can also be randomized.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/691b3c6-Poll_1.png",
        "Poll 1.png",
        911,
        384,
        "#f2f5f4"
      ]
    }
  ]
}
[/block]
The poll field looks like this in the widget.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/05e8402-poll_2.png",
        "poll 2.png",
        397,
        530,
        "#f8e5e7"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
In addition, you can also find the related data in the project's "statistics" tab.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/93b6f53-poll_3.png",
        "poll 3.png",
        963,
        682,
        "#f5f1f5"
      ]
    }
  ]
}
[/block]
It’s possible to filter for poll answers as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d361ab9-poll_4.png",
        "poll 4.png",
        714,
        506,
        "#f9f7f8"
      ]
    }
  ]
}
[/block]

title: "Project access"
slug: "project-access"
hidden: false
createdAt: "2022-09-09T06:31:15.092Z"
updatedAt: "2022-09-09T06:31:15.092Z"

A project's access can be defined by the team admin or the project owner.
You can allow all team members to access your project.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fe3d4c4-project_access.png",
        "project access.png",
        721,
        230,
        "#000000"
      ]
    }
  ]
}
[/block]
Or you can only allow certain members to have the access to your project.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a7092f1-project_access_2.png",
        "project access 2.png",
        1108,
        709,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Project approval for web agencies"
slug: "project-approval-for-agencies"
hidden: true
createdAt: "2021-02-03T21:36:50.078Z"
updatedAt: "2022-06-05T22:17:19.934Z"

[block:api-header]
{
  "title": "When and how to use Usersnap for Website project approval?"
}
[/block]
Watch this short demo to learn what Usersnap can do for you and your team.
[block:html]
{
  "html": "\n  \n\n"
}
[/block]

title: "Project types"
slug: "project-types"
hidden: true
createdAt: "2019-07-12T08:11:33.603Z"
updatedAt: "2022-01-28T14:36:04.909Z"

With the Usersnap widget on your site, you can collect clear and actionable visual feedback and measure customer satisfaction on your website or web app. You can choose from our multiple project types and use cases.


QA & testing


Customer Feedback


Product Insight


Customer support 
[block:api-header]
{
  "title": "5 of our project types explained"
}
[/block]


[block:html]
{
  "html": "\n  \n\n"
}
[/block]
[block:api-header]
{
  "title": "QA Feedback widgets"
}
[/block]
The Usersnap QA Feedback projects display a widget that is able to create a screenshot from the browser window. This enables testers and users with various annotations tools, such as select boxes, drawing pen, arrows, hiding tools, and comments to annotate issues and requests in your website or web application.
You can get live feedback with precise metadata automatically attached. Keep stakeholders in the loop with instant reply and update notifications.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/438e616-Beta_widget.png",
        "Beta widget.png",
        1459,
        925,
        "#7471bf"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Customer Feedback widgets"
}
[/block]
The Usersnap Customer Feedback widget  installed on your website or web application allows you to capture your visitors' satisfaction rating as well as their qualitative feedback with a follow-up question.
With Usersnap's sentiment analysis and the satisfaction scores, you can understand your customers' needs and increase customer happiness to enable cheerful and pleasant digital experiences.
Well-known customer feedback widgets

NPS (Net Promoter Score) - measure customer loyalty
CSAT (Customer Satisfaction) - measure customer happiness
CES (Customer Effort Score) - measure customer engagement
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ad246f1-NPS_2.png",
        "NPS 2.png",
        1017,
        885,
        "#c9ccd1"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

[block:api-header]
{
  "title": "Feature Request Widgets"
}
[/block]
The Usersnap feature request projects encourage users to submit feature requests to get the right inputs for your product roadmap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9b17450-Product_Engagement_Widget.png",
        "Product Engagement Widget.png",
        1433,
        927,
        "#7c79b8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Feedback menu"
}
[/block]
The Usersnap feedback menu channels various feedback requests via a menu. Routing to various feedback projects helps you to send the different feedback requests to the right teams. 
Link your customer service chat (like Intercom, Zendesk, etc) or your help center into the feedback menu.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0601e8d-routing_menu.png",
        "routing menu.png",
        290,
        372,
        "#f5f6f8"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "User Research"
}
[/block]
Get user for user interviews and learn more about their needs and pains. This widget helps you to gather user data and request user interviews to your calendar.
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Board for your guest users"
slug: "public-portal-for-your-guest-users"
excerpt: "Share the project's overview with external parties"
hidden: false
createdAt: "2021-02-17T07:05:20.466Z"
updatedAt: "2022-05-27T09:38:01.655Z"

[block:api-header]
{
  "title": "This is what you can do in the Board."
}
[/block]
The guest users can see a list of feedback items and comment on them. 
The guests can also add a new feedback item directly from the board which will then be revealed in the feedback list of your dashboard. They can also vote for certain items they prefer.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/8a8f961-board_list_and_voting.png",
        "board list and voting.png",
        1443,
        514,
        "#fdfdfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
In addition, the search box allows guests to find a specific item they are looking for.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/84ca14a-Searchi_nthe_board.png",
        "Searchi nthe board.png",
        749,
        535,
        "#fdfdfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Looking into the details of a feedback item and drop your comment directly. The comment left in the Board will then appear in the Usersnap dashboard as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b0e5d35-Comment_inthe_board.png",
        "Comment inthe board.png",
        1105,
        1038,
        "#dde1e1"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Share the board in the Usersnap dashboard"
}
[/block]
In the Usersnap dashboard, you can share your project via a link that is under the Config. tab in the "Manage"->"Board" section.
Switch on "Publish to board" and you can copy the URL to share it with your guests manually now.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e79d9c5-board_1.png",
        "board 1.png",
        1077,
        447,
        "#f5f8f8"
      ]
    }
  ]
}
[/block]
Additionally, you can even specify if labels should be displayed on the board, and if yes - which ones
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5cc8f8f-board_2.png",
        "board 2.png",
        659,
        109,
        "#f4f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Purchase more team members and projects"
slug: "purchase-more-team-members-and-projects"
hidden: false
createdAt: "2021-02-04T11:49:15.111Z"
updatedAt: "2023-02-02T09:43:13.308Z"

[block:api-header]
{
  "title": "Add more team members or projects"
}
[/block]
All team admins can purchase more team members and projects directly in the dashboard.
Just go to "My account" and under the "Subscription" tab you can hit the "Customize"button.
Now you can add more team members and projects. Add your credit card details and you are ready to go.
[block:api-header]
{
  "title": "How to add users and projects the 2nd time?"
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "",
  "body": "If you've already added users or projects earlier and you'd like to add even more now, please put the total \"additional count\" into the field. \n\nFor instance, when you are subscribed to the basic plan which includes 2 users and you already added 1 additional user last week. If you'd like to add another one now.,  please put \"2\" additional users in the field and hit \"Update plan\"."
}
[/block]
[block:api-header]
{
  "title": "Add more team members or projects with Enterprise plan"
}
[/block]
Please, reach out to our customer success team to get a quote for more projects or team members.
[block:callout]
{
  "type": "info",
  "title": "Current pricing",
  "body": "More up-to-date information can be found in PRICING."
}
[/block]

title: "Quality assurance & bug reporting"
slug: "quality-assurance-bug-reporting"
hidden: true
createdAt: "2021-02-03T21:38:25.928Z"
updatedAt: "2022-06-05T22:16:07.471Z"

[block:api-header]
{
  "title": "When and how to use Usersnap for QA & Bug Reporting?"
}
[/block]
Watch this short demo to learn what Usersnap can do for you and your team.
[block:html]
{
  "html": "\n  \n\n"
}
[/block]

title: "Customer Feedback"
slug: "rating-project-features"
hidden: true
createdAt: "2019-07-16T09:56:38.885Z"
updatedAt: "2021-12-16T06:54:26.307Z"

Collect customer feedback or measure customer experience with these customer feedback projects.

Customer Engagement 
User Feedback 
NPS Rater 
Customer Satisfaction


title: "Referral program"
slug: "referral-program"
hidden: false
createdAt: "2021-06-30T14:22:44.299Z"
updatedAt: "2021-07-06T09:34:20.022Z"

[block:callout]
{
  "type": "success",
  "body": "\"Usersnap has changed the way we handle customer feedback in every way!\" \nSaid a customer, and maybe you've said something similar too?"
}
[/block]
[block:api-header]
{
  "title": "How to benefit from referring Usersnap to your friends?"
}
[/block]
If you think Usersnap's a great solution and you're happy to spread the love 💖, then come and be a part of our referral program!
[block:parameters]
{
  "data": {
    "0-0": "Claim FULL VALUE of the 1st month of the subscription plan of the referral",
    "0-1": "Your referral also gets a sweet deal: 10% off on the first 3 months.",
    "1-0": "Or enjoy 100% off for 3 entire months on your own subscription",
    "h-0": "For you (as a referrer)",
    "h-1": "For your referral",
    "1-1": "If they subscribe to the yearly plan, then it's 10% off applied to the full year!"
  },
  "cols": 2,
  "rows": 2
}
[/block]
Referral process:
* To claim your reward or discount, your friend or client, the referral, has to be subscribed to Usersnap for 3 months. You will be notified by us. 
* Next, you can choose to be paid by sending us an invoice (must come from a legal entity) or receive an Amazon shopping voucher.
[block:api-header]
{
  "title": "How to apply for the Usersnap referral program?"
}
[/block]
Just fill out this form and we'll give you a unique referral link.

title: "REST API (Updated)"
slug: "rest-api-updated"
hidden: true
createdAt: "2023-01-19T09:21:33.410Z"
updatedAt: "2023-02-08T11:50:46.980Z"

[block:callout]
{
  "type": "info",
  "title": "Only for Enterprise plans",
  "body": "This REST API is currently only available for customers with Ultimate plans. If you are not sure where you can find the details on the REST API, please contact our customer success team."
}
[/block]
Usersnap provides a way for you to use the platform's capabilities via a REST API. To begin with, you need to make sure that you're part of a plan that allows you to do that. Once you're a part of such a plan, you'll see an option to configure Rest API under settings, as shown below.
Usersnap uses Bearer authentication to protect its API endpoints. To be able to make requests to the platform API, you'll first need to generate a JWT secret on Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/59e80e5-rest_api.png",
        "rest api.png",
        1577,
        718,
        "#f2f3f6"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Usersnap uses Bearer authentication to protect its API endpoints. To be able to make requests to the platform API, you'll first need to generate a JWT secret on Usersnap.
Once this secret has been generated, you can use it to create JWTs on your own. The header of the JWT needs to contain a kid field whose value is the JWT ID generated on Usersnap. The JWT header would look like this:
[block:code]
{
  "codes": [
    {
      "code": "{\n    \"alg\": \"HS256\",\n    \"typ\": \"JWT\",\n    \"kid\": \"\n}",
      "language": "json"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "warning",
  "title": "Please, use HS256 as algorithm",
  "body": "Don't use HS512."
}
[/block]
Finally, you must send this JWT as a bearer token in the Authorization header when making requests to Usersnap's API endpoints.
API documentation can be accessed here.
[block:api-header]
{
  "title": "Example call for the REST API"
}
[/block]
This is an example request on how you can post data via a CURL call. Is this how you can use it in your application and send feedback without using the feedback widgets.
[block:code]
{
  "codes": [
    {
      "code": "# submit a feedback\ncurl -H \"Authorization: Bearer \" \\n     -H \"Content-Type: application/json\" \ \n     -d '{\"visitor\":\"ms@usersnap.com\", \"comment\":\"this is my comment\", \"custom\": \"{\\"user_id\\": 45612, \\"user_hash\\": \\"cafeaffe-dead-4eef\\"}\"}' \\n     https://platform.butterhaserl.com/v0.0/projects//feedbacks",
      "language": "curl"
    }
  ]
}
[/block]

title: "Salesforce"
slug: "salesforce"
hidden: false
createdAt: "2022-09-20T08:21:39.702Z"
updatedAt: "2022-12-12T10:06:32.450Z"

[block:api-header]
{
  "title": "Connect Usersnap with Salesforce"
}
[/block]
Here's how it works:
Go to your Usersnap project’s Integration tab and select Salesforce from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c7a5b86-salesforce_0.png",
        "salesforce 0.png",
        1491,
        696,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your Salesforce account and allow the access.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/400b4f7-salesforce_1.png",
        "salesforce 1.png",
        419,
        527,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b6fc8cf-salesforce_2.png",
        "salesforce 2.png",
        841,
        691,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
A test feedback item can be sent right on the configuration page.
Now you can manage the items pushed to Salesforce directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a072f26-salesforce_3.png",
        "salesforce 3.png",
        1891,
        938,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "The Salesforce account's REST API must be enabled in order to connect to Usersnap.\nYou can find whether the edition of your Salesforce license has API access or not here."
}
[/block]
[block:api-header]
{
  "title": "A short video for better understanding."
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/itr4j1o5ys",
  "title": "Salesforce & Usersnap integration ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/07afced5b289c1c47734742d98c328d7.jpg?image_crop_resized=960x540"
}
[/block]

title: "Interview invitation"
slug: "schedule-innterview"
hidden: true
createdAt: "2020-10-08T10:57:05.297Z"
updatedAt: "2022-03-14T11:21:19.307Z"

[block:api-header]
{
  "title": "Interview invitation Widgets"
}
[/block]
As a product manager, researcher, or marketer you might need to carry out interviews constantly. Instead of waiting for them to come to you, this project type can help you be more proactive. 
[block:html]
{
  "html": "\n  \n\n"
}
[/block]
You can propose to schedule an interview conveniently in relation to a new feature, upcoming product, and so on simply with a pop-up widget triggered by time or event.
Integrate convenient calendar solutions like calendly to get interviews booked immediately.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/172da56-User_research.png",
        "User research.png",
        1707,
        907,
        "#f4f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Here we take Calendly as an example. Please copy the link to your preferred meeting slot.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3b8a00a-interview_3.png",
        "interview 3.png",
        1041,
        550,
        "#f8f8f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Go to "Configuration" -> "Form Setup" -> Link to page and simply add the URL.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a72c761-schedule_interviews.png",
        "schedule interviews.png",
        975,
        617,
        "#f5f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now your visitors can easily schedule a meeting with you.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/33630d9-interview_4.png",
        "interview 4.png",
        501,
        430,
        "#bdc8cf"
      ],
      "sizing": "original"
    }
  ]
}
[/block]

title: "Why are my screenshots not fully accurate?"
slug: "screenshots-not-accurate"
hidden: false
createdAt: "2021-02-02T20:25:33.487Z"
updatedAt: "2021-05-26T16:49:23.556Z"

[block:api-header]
{
  "title": "My screenshots are white or a bit off"
}
[/block]
Please, read this troubleshooting guide to get your screenshots fixed.
If you have inaccurate screenshots, please read this guide about "issues with CSS & styles".
If your website or web application is behind a firewall or protected otherwise, please read this troubleshooting guide.

title: "Security"
slug: "security"
hidden: false
createdAt: "2021-02-04T15:03:39.627Z"
updatedAt: "2022-12-12T16:00:40.555Z"

[block:api-header]
{
  "title": "Usersnap provides Enterprise security"
}
[/block]
We are working hard to make Usersnap rock-solid to protect your user and customer data. Please, read everything we've implemented to give you the highest security possible.
If you are looking for our Enterprise security measurements, please go to this security page. 
 Information overview for our Enterprise security information  
Infrastructure
- Our secure system architecture
- Our hosting data centers
- Latest versions and security patches
- Penetration and vulnerabilities scans
- Redundant services and failover
- Firewalls
Your data
- Data storages
- Compliance with GDPR
- Privacy policy
- Data segregation and data access
- Backups & disaster recovery
- Logs - authentication & login
- Passwords & sessions
- Federated Services & Single Sign On (SSO)
- Multi-factor authentication
- Monitoring
- Permissions and roles
Encryption
- Secure transport via HTTPS
- Encryption in transfer & at rest
Security in Software Development
- Code Reviewing
Additional Security Measures
- Policies
- Business Continuity Plan
- Corporate Security Policies
- Office Security
- Incident response
- Security training
- Background checks
- Confidentiality
- Payment processing & PCI compliance
- Insurance CyberSecurity and E&O
[block:api-header]
{
  "title": "Cookies used for the feedback widget"
}
[/block]
Today, it's important to know what cookies are provided on your web application or website. 
 Local Storage / Cookies on the Usersnap feedback platform widget 
The platform widget does not store any cookies on our customers' customers machines.
The platform widget does store some information in your browser's "localstorage", though, mostly to persist provided data.

us-reporter_: an anonymized uuid for the user of the widget (“reporter_id”)
us-assignee_[uuid]: uuid chosen in assignee field
us-visitorEmail_[uuid]: email chosen in visitor field
us-bubbleHiddenAt_[uuid]: time of closing a bubble
us-WidgetShownOnce_[uuid]: true | false
us-ShowAgainTimestamp_[uuid]: timestamp
us-TimesShown_[uuid]: number
us-ShowAgainAction_[uuid]: ‘dismiss’ | ‘submit’

[block:callout]
{
  "type": "warning",
  "title": "Cookies of the Usersnap dashboard",
  "body": "Please, be aware that the Usersnap dashboard will use more cookies than the feedback widgets alone. The feedback widgets are the ones that are presented to your customers, and it's important to be clear about what cookies you will add to your customers' and users' browsers. \n\nIf you, as a team member, log into the Usersnap dashboard, there are more cookies that will be stored in your browser. For more information on the privacy policy to use the Usersnap application, please read this article."
}
[/block]
[block:api-header]
{
  "title": "Implement a Content Security Policy for the widget"
}
[/block]
We are offering the possibility of using Usersnap with Content Security Policy (CSP), which enhances certain security issues. Content Security Policy (CSP)
[block:api-header]
{
  "title": "Information for your Privacy Page"
}
[/block]
If you need a content template for your privacy page, please refer to this page For your Privacy Page .

title: "Multiple feedback options menu"
slug: "setting-up-a-menu-with-multiple-feedback-options"
hidden: false
createdAt: "2021-02-11T06:05:38.327Z"
updatedAt: "2023-03-02T21:30:17.765Z"

To navigate customers to the right feedback category and make them feel more cared for, you can use the feedback menu widget to host all your feedback and support options. Build a feedback menu that tailors to the needs of your customers.
[block:api-header]
{
  "title": "How to create a feedback menu?"
}
[/block]
Watch the tutorial video or read the step-by-step instructions below.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/37xfh3zvlw",
  "title": "Feedback Menu and Floating Action Button ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/9d76018853aa7bb83cad283e9c316533.jpg?image_crop_resized=640x360"
}
[/block]
There are multiple options you can choose from the feedback menu templates. Please select one that fits your use case the best.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/c88e689-feedback_menu_options.png",
        "feedback_menu_options.png",
        2253,
        847,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Then please define if the existing project(s) should be connected, or new ones shall be auto-created.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/397452f-new_menu_2.png",
        "new menu 2.png",
        2552,
        1810,
        "#f4f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The menu's layout can be easily edited during the creation.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d9fccca-feedback_menu_template_edit.png",
        "feedback_menu_template_edit.png",
        2232,
        946,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The feedback menu's config. view: Everything is configurable and movable directly in this view.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fbd3667-new_menu_4.png",
        "new menu 4.png",
        3068,
        1830,
        "#f1f5f7"
      ]
    }
  ]
}
[/block]
Note: Some additional information on the feedback menu.
[block:html]
{
  "html": "\n\n\n  Create feedback menu\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Do I need to install a snippet code for each project?"
}
[/block]
No. Our Usersnap space (global) code snippet has global control over all projects. You just have to install it once on your website and no more codes :+1: 
If you have not yet done that, please go to this page for help.
[block:api-header]
{
  "title": "Why is more than one feedback button showing?"
}
[/block]
Only the feedback button of the feedback menu should be visible
Step 1: We have to set the so-called "Display rules" right so that the widgets only appear when we want them to appear.
Step 2: We should not forget to press the "Set live" button on each project. This controls whether the project is available at all or not. Great to pause a project quickly.
 feedback menu 
The feedback menu widget must be "set live" and in the "Display" tab of the "Configuration", you can set a path where the widget should appear. Let's say your web app is provided under the URL https://amazingapp.com/app/. Use the "URL contains" limiter to display the widget on all URLs starting with this URL.
The other two widgets' audience should be set to "Nobody" so that the buttons of these widgets are not showing up.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/91a5bd8-menu_1.png",
        "menu 1.png",
        808,
        156,
        "#e9f5ea"
      ]
    }
  ]
}
[/block]
Projects which are linked can be easily spotted on the dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4328e38-new_menu_6.png",
        "new menu 6.png",
        542,
        283,
        "#f8fafa"
      ]
    }
  ]
}
[/block]
Configure the feedback menu with your help center linking to a URL and your customer service chat using the "JavaScript code execution".  This code varies from tool to tool, so depending on which tool you apply, that will change. Please kindly check that out for your chatting tool's specifics. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e4f4a3d-new_menu_5.png",
        "new menu 5.png",
        896,
        442,
        "#eef2f5"
      ]
    }
  ]
}
[/block]
Some additional information on the feedback menu.
Now, you should be ready to go. Start collecting feedback.
[block:callout]
{
  "type": "info",
  "title": "Attention",
  "body": "The feedback menu can only route projects with \"Website widget (button, pop-up)\" as a collection type."
}
[/block]

title: "Project permissions"
slug: "settings"
excerpt: "Permissions - Limited access to the dashboard"
hidden: false
createdAt: "2022-05-27T10:07:35.545Z"
updatedAt: "2022-05-27T10:08:28.082Z"

[block:api-header]
{
  "title": "Where to change the permissions?"
}
[/block]
If you want to limit the access to projects for only specific team members in the dashboard, navigate into the project and click on "Configure" to go under the tab of "Manage"->"Settings" then the permissions can be set accordingly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2f12b44-permissions_1.png",
        "permissions 1.png",
        1082,
        534,
        "#f5f8f8"
      ]
    }
  ]
}
[/block]
You can grant access to all team members or limit it to specific ones.

title: "Showing labels in the widget for your users"
slug: "showing-labels-in-the-widget-for-your-users"
hidden: false
createdAt: "2022-05-27T11:10:27.061Z"
updatedAt: "2022-05-27T11:10:27.061Z"

You can configure the labels to be revealed on the widget so that your users can select from the drop-down menu.
The displayed labels can be selected in case you don't want to make all labels public.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/aff7c85-label_1.png",
        "label 1.png",
        909,
        238,
        "#f2f5f2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
In this case, your user will only see the labels you made public.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/645bd30-label_2.png",
        "label 2.png",
        449,
        655,
        "#f7f8f6"
      ]
    }
  ]
}
[/block]

title: "Single-Sign-On (SSO) (Updated version....)"
slug: "single-sign-on-sso-updated-version"
hidden: true
createdAt: "2023-01-18T20:03:35.747Z"
updatedAt: "2023-01-31T18:50:39.982Z"

[block:callout]
{
  "type": "info",
  "title": "Add-on to your Ultimate plan",
  "body": "This functionality is available as an additional add-on for your Ultimate plan. For detailed questions, please contact our team.\n\nIf you want to use the Single-Sign-On authentication method, please contact our team to get the necessary information for your individual integration."
}
[/block]
If your Usersnap account is SSO-enabled, you can have your employees authenticated with your internal authentication methods and security measurements. Additionally, you can add external team members with email and passwords as their login methods. 
This allows you to add internal and external team members to your projects. 
If you have any questions, please do not hesitate to contact us.
[block:api-header]
{
  "title": "Okta (SAML 2.0)"
}
[/block]
Following this guide:

Create a new SAML Okta application integration.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b17c1f9-1_42ad6ee4-27ca-4fed-b4ff-3e7cb867bebc.png",
        "1_42ad6ee4-27ca-4fed-b4ff-3e7cb867bebc.png",
        1919,
        991,
        "#8b8b8d"
      ]
    }
  ]
}
[/block]
In the settings, configure the fields as follows:

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62e31a7-5322ecb3-6803-4cea-ad0a-e536f2c6dbfa.png",
        "5322ecb3-6803-4cea-ad0a-e536f2c6dbfa.png",
        1920,
        991,
        "#fbfbfb"
      ]
    }
  ]
}
[/block]
* SSO URL - this URL will be provided by Usersnap. It will be similar to this one: https://us-XXXXX-basic-setup.auth.eu-west-1.amazoncognito.com/saml2/idpresponse
* Audience URI - this URI will be provided by Usersnap. It will be similar to urn:amazon:cognito:sp:eu-west-1_XXXXXXXX
* Attribute statements:
-- Name: emailaddress
-- Value: user.email
-- Name: name
-- Value: user.firstName

After creating the app, assign some users that you want to be able to log in to Usersnap.

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/88e5950-3_f9e5c3ed-aee4-4e85-a3da-5d517d4906bd.png",
        "3_f9e5c3ed-aee4-4e85-a3da-5d517d4906bd.png",
        1920,
        992,
        "#fbfbfc"
      ]
    }
  ]
}
[/block]
4. Finally, open the Identity Provider metadata.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/97bfcb9-4_27056dc2-8263-4542-ba0e-79c3d9db54cc.png",
        "4_27056dc2-8263-4542-ba0e-79c3d9db54cc.png",
        1920,
        994,
        "#f9f9f8"
      ]
    }
  ]
}
[/block]
5. And download the XML-file. You will need to send this file to Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d7e2310-5_83aa042e-e66a-4234-8a40-bfa37a10ba76.png",
        "5_83aa042e-e66a-4234-8a40-bfa37a10ba76.png",
        1920,
        993,
        "#c9c8ca"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Okta (OIDC - OpenID Connect)"
}
[/block]
Following this guide

Create a new OIDC Okta application integration.

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f39a8d2-7_e4e41c4d-d081-4012-b226-b519c3b38eeb.png",
        "7_e4e41c4d-d081-4012-b226-b519c3b38eeb.png",
        1920,
        994,
        "#9f9fa1"
      ]
    }
  ]
}
[/block]
2. In the settings - Configure the fields as follows:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/49019cf-Screenshot_2022-01-18_at_20.33.57.png",
        "Screenshot 2022-01-18 at 20.33.57.png",
        1920,
        871,
        "#fbfbfc"
      ]
    }
  ]
}
[/block]
Sign-in redirect URI: This will be provided by Usersnap. It will look similar to this one https://us-XXXX-basic-setup.auth.eu-west-1.amazoncognito.com/oauth2/idpresponse

Copy the Client ID and Secret. You will need to send this to Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/97efdb3-9_6c2f9878-5111-41f3-af02-d92348a545c6.png",
        "9_6c2f9878-5111-41f3-af02-d92348a545c6.png",
        1920,
        991,
        "#fafafb"
      ]
    }
  ]
}
[/block]
Copy the issuer URL. 

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4e6e947-91_5a9c16b8-98cb-41e5-afd3-8a2979c147cb.png",
        "91_5a9c16b8-98cb-41e5-afd3-8a2979c147cb.png",
        1920,
        995,
        "#fbfbfb"
      ]
    }
  ]
}
[/block]
5. Please send the issuer URL to Usersnap.
[block:api-header]
{
  "title": "Set the team members' authentication method"
}
[/block]
You now have the flexibility to customize the authentication method for each team member. This means you can choose the best method for each individual to sign in with.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/77fe10b-SSO_2.png",
        "SSO_2.png",
        888,
        580,
        "#000000"
      ]
    }
  ]
}
[/block]
In addition, you can easily set a default authentication method for your team by visiting the "Manage team" page within the Usersnap dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a0918f3-SSO_11.jpg",
        "SSO_11.jpg",
        1842,
        1194,
        "#000000"
      ]
    }
  ]
}
[/block]
Enforcing the Single Sign-On method is also possible. Enforcing SSO means that the system will not allow access to any of its applications or services without the user first logging in through the SSO system. This can increase security and convenience for users.
[block:callout]
{
  "type": "info",
  "body": " These modifications can only be carried out by admins.\n When SSO is enabled, the ability to use 2-Factor Authentication in individual user accounts will be disabled.",
  "title": "Please note that..."
}
[/block]

title: "Single-Sign-On (SSO)"
slug: "single-sign-on-sso"
hidden: false
createdAt: "2022-01-17T20:39:51.186Z"
updatedAt: "2023-01-31T18:55:46.911Z"

[block:callout]
{
  "type": "info",
  "title": "Add-on to your Enterprise plan",
  "body": "This functionality is available as an additional add-on for your Enterprise plan. For detailed questions, please contact our team.\n\nIf you want to use the Single-Sign-On authentication method, please contact our team to get the necessary custom information for your individual integration."
}
[/block]
If your Usersnap account is SSO-enabled, you can have your employees authenticated with your internal authentication methods and security measurements. Additionally, you can add external team members with email and passwords as their login methods. 
This allows you to add internal and external team members to your projects. 
If you have any questions, please do not hesitate to contact us.
[block:api-header]
{
  "title": "Okta (SAML 2.0)"
}
[/block]
Following this guide:

Create a new SAML Okta application integration.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b17c1f9-1_42ad6ee4-27ca-4fed-b4ff-3e7cb867bebc.png",
        "1_42ad6ee4-27ca-4fed-b4ff-3e7cb867bebc.png",
        1919,
        991,
        "#8b8b8d"
      ]
    }
  ]
}
[/block]
In the settings, configure the fields as follows:

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62e31a7-5322ecb3-6803-4cea-ad0a-e536f2c6dbfa.png",
        "5322ecb3-6803-4cea-ad0a-e536f2c6dbfa.png",
        1920,
        991,
        "#fbfbfb"
      ]
    }
  ]
}
[/block]
* SSO URL - this URL will be provided by Usersnap. It will be similar to this one: https://us-XXXXX-basic-setup.auth.eu-west-1.amazoncognito.com/saml2/idpresponse
* Audience URI - this URI will be provided by Usersnap. It will be similar to urn:amazon:cognito:sp:eu-west-1_XXXXXXXX
* Attribute statements:
-- Name: emailaddress
-- Value: user.email
-- Name: name
-- Value: user.firstName

After creating the app, assign some users that you want to be able to log in to Usersnap.

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/88e5950-3_f9e5c3ed-aee4-4e85-a3da-5d517d4906bd.png",
        "3_f9e5c3ed-aee4-4e85-a3da-5d517d4906bd.png",
        1920,
        992,
        "#fbfbfc"
      ]
    }
  ]
}
[/block]
4. Finally, open the Identity Provider metadata.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/97bfcb9-4_27056dc2-8263-4542-ba0e-79c3d9db54cc.png",
        "4_27056dc2-8263-4542-ba0e-79c3d9db54cc.png",
        1920,
        994,
        "#f9f9f8"
      ]
    }
  ]
}
[/block]
5. And download the XML-file. You will need to send this file to Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d7e2310-5_83aa042e-e66a-4234-8a40-bfa37a10ba76.png",
        "5_83aa042e-e66a-4234-8a40-bfa37a10ba76.png",
        1920,
        993,
        "#c9c8ca"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Okta (OIDC - OpenID Connect)"
}
[/block]
Following this guide

Create a new OIDC Okta application integration.

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f39a8d2-7_e4e41c4d-d081-4012-b226-b519c3b38eeb.png",
        "7_e4e41c4d-d081-4012-b226-b519c3b38eeb.png",
        1920,
        994,
        "#9f9fa1"
      ]
    }
  ]
}
[/block]
2. In the settings - Configure the fields as follows:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/49019cf-Screenshot_2022-01-18_at_20.33.57.png",
        "Screenshot 2022-01-18 at 20.33.57.png",
        1920,
        871,
        "#fbfbfc"
      ]
    }
  ]
}
[/block]
Sign-in redirect URI: This will be provided by Usersnap. It will look similar to this one https://us-XXXX-basic-setup.auth.eu-west-1.amazoncognito.com/oauth2/idpresponse

Copy the Client ID and Secret. You will need to send this to Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/97efdb3-9_6c2f9878-5111-41f3-af02-d92348a545c6.png",
        "9_6c2f9878-5111-41f3-af02-d92348a545c6.png",
        1920,
        991,
        "#fafafb"
      ]
    }
  ]
}
[/block]
Copy the issuer URL. 

[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4e6e947-91_5a9c16b8-98cb-41e5-afd3-8a2979c147cb.png",
        "91_5a9c16b8-98cb-41e5-afd3-8a2979c147cb.png",
        1920,
        995,
        "#fbfbfb"
      ]
    }
  ]
}
[/block]
5. Please send the issuer URL to Usersnap.
[block:api-header]
{
  "title": "Set the team members' authentication method"
}
[/block]
You now have the flexibility to customize the authentication method for each team member. This means you can choose the best method for each individual to sign in with.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/060871d-SSO_2.png",
        "SSO_2.png",
        888,
        580,
        "#000000"
      ]
    }
  ]
}
[/block]
In addition, you can easily set a default authentication method for your team by visiting the "Manage team" page within the Usersnap dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5ebd5af-SSO_11.jpg",
        "SSO_11.jpg",
        1842,
        1194,
        "#000000"
      ]
    }
  ]
}
[/block]
Enforcing the Single Sign-On method is also possible. Enforcing SSO means that the system will not allow access to any of its applications or services without the user first logging in through the SSO system. This can increase security and convenience for users.
[block:callout]
{
  "type": "info",
  "title": "Please note that...",
  "body": " These modifications can only be carried out by admins.\n When SSO is enabled, the ability to use 2-Factor Authentication in individual user accounts will be disabled."
}
[/block]

title: "Slack Integration"
slug: "slack-integration"
excerpt: "for Platform projects"
hidden: false
createdAt: "2020-06-15T09:05:25.219Z"
updatedAt: "2022-05-25T09:59:09.984Z"

[block:api-header]
{
  "title": "Connect Usersnap to Slack"
}
[/block]
Usersnap can notify your Slack channels when a new feedback item is submitted to your Platform project. To connect your project to a Slack channel, please follow these instructions:
Go to the Integration tab in your Usersnap Platform project and click on 'Slack'.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5c0bffc-slack.png",
        "slack.png",
        1134,
        746,
        "#f3f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Connect your Slack account to Usersnap.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/04e0bdb-Native_slack_integration_2.png",
        "Native slack integration 2.png",
        715,
        631,
        "#f6f7f7"
      ]
    }
  ]
}
[/block]
Choose the target channel to which Usersnap will post your notifications. You can also choose to push the ticket or close the ticket automatically. Click on 'Save' after all changes are done.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/08fc591-slack_2.png",
        "slack 2.png",
        868,
        627,
        "#f6f5f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
You will now start receiving feedback items pushed to your Slack channel.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e1c0601-Native_slack_integration_4.png",
        "Native slack integration 4.png",
        835,
        578,
        "#c2bcea"
      ]
    }
  ]
}
[/block]

title: "Space"
slug: "space"
hidden: false
createdAt: "2022-11-25T11:31:43.942Z"
updatedAt: "2022-11-30T10:34:52.675Z"

[block:api-header]
{
  "title": "What is a space?"
}
[/block]
When your account looks after multiple environments where the widget forms shall be installed, it would be ideal to create dedicated spaces for each environment in order to manage the projects separately. In this case, you can avoid popping the wrong form on your website or web application.
In addition, if you have various teams running different projects simultaneously. Such as the product team, marketing team, and customer success team, it would be great to have their own spaces independent from each other.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/693e804-space_5.png",
        "space 5.png",
        1734,
        1100,
        "#000000"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "A short video about the concept and usage of spaces"
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/0n75u4hgbe",
  "title": "Spaces - Intro - Organize projects and teams by spaces",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/644e5e6f0f93609f38001f63f1743fb6.jpg?image_crop_resized=960x540"
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention",
  "body": "Please make sure your plan offers more than 1 space in the account in order to create multiple spaces.\n\nThe detailed description for each plan can be found in Usersnap Pricing."
}
[/block]
[block:api-header]
{
  "title": "Space overview"
}
[/block]
The name, description, and accent color of each space can be uniquely designed in order for all team members to have a good overview and manage them effortlessly. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a220339-space_3.png",
        "space 3.png",
        385,
        687,
        "#000000"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Under each space's installation tab, one can clearly see which project is set live and how their display rules are set up. You can also hit the edit button to configure them directly. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/fa9ce49-space_4.png",
        "space 4.png",
        881,
        869,
        "#000000"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "What is a space code snippet?"
}
[/block]
When you select "Website widget (button, pop-up)" as your projects' collection type, all of the projects within the same space share one space code snippet a.k.a. the "global snippet" so their installation can be easy and simple since there is only one single snippet for all projects in this space. 
Please do not forget to configure the displaying rules for each project in order to pop the form correctly. More related info can be found in Target and Display the feedback button & widgets.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b62a7b9-space_6.png",
        "space 6.png",
        1042,
        762,
        "#000000"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]

title: "Customer Satisfaction (CSAT)"
slug: "star-rater"
hidden: true
createdAt: "2019-07-16T10:04:02.335Z"
updatedAt: "2021-02-27T11:58:54.587Z"

[block:api-header]
{
  "title": "Customer Satisfaction Widget"
}
[/block]
Customer satisfaction is a key indicator of long-term success. Therefore it is extremely important to measure this indicator regularly. One of the most popular methods for this is the so-called "Customer Satisfaction Score (CSAT)". 
The Customer Satisfaction Score (CSAT) is a simple method for quantifying customer satisfaction/happiness. This score can be used to track customer satisfaction over the entire customer life cycle. It determines how customers feel at various points of contact with a company and whether or not the experience has contributed to their satisfaction.
This makes it easier to detect weaknesses, for which appropriate measures can then be taken.
The Customer Satisfaction Widget (CSAT) lets your users rate your product, service, or website with a 1-5 star or smiley rating. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e771a18-Screen_Shot_2021-02-27_at_12.57.58_PM.png",
        "Screen Shot 2021-02-27 at 12.57.58 PM.png",
        1760,
        1360,
        "#ccced1"
      ],
      "caption": "Star rating",
      "sizing": "80"
    }
  ]
}
[/block]
You can also change your rating style to "Smiley" if preferred. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5ae7f4c-customer_satisfaction_2.png",
        "customer satisfaction 2.png",
        1798,
        910,
        "#f7f4f3"
      ],
      "caption": "Smiley rating",
      "sizing": "80"
    }
  ]
}
[/block]
Have a clear overview of your feedback items in the "List" section. The split view can also give you a quick peek of the ticket itself.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/01a2061-star_rating_list.png",
        "star rating list.png",
        1896,
        925,
        "#f6f6f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Usersnap automatically calculates your CSAT index based on the feedback items submitted.
Get helpful insights within the selected time frame right on your project dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b1f0171-star_rating_statistics.png",
        "star rating statistics.png",
        1178,
        666,
        "#f9f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "How the CSAT Score is calculated"
}
[/block]
CSAT = Number of happy customers / Number of Customers asked
Happy customers
- 4-star and 5-star rating
- Thumb up
- Love/Like smiley

title: "Statistics and reports"
slug: "statistics-and-reports"
hidden: false
createdAt: "2021-02-04T10:40:28.559Z"
updatedAt: "2022-05-27T11:03:42.216Z"

[block:api-header]
{
  "title": "Statistics and reports of each feedback widget"
}
[/block]
Each feedback widget provides you and your team with statistics about the incoming feedback. You will find them in the sub-menu "Statistics".
By choosing different time periods, you can see how the feedback statistics change.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4706d4b-stats_1.png",
        "stats 1.png",
        1051,
        874,
        "#f8fafa"
      ]
    }
  ]
}
[/block]

title: "Style (Updated...)"
slug: "style-updated"
hidden: true
createdAt: "2023-01-19T09:31:48.803Z"
updatedAt: "2023-01-19T09:31:48.803Z"

[block:api-header]
{
  "title": "Colors"
}
[/block]
The widget's primary color, the fields' text color, the colors of the header text, and the background can be set differently following your liking with the HTML color codes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1703d02-colors_1.png",
        "colors 1.png",
        898,
        418,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "What is the best header size?",
  "body": "We suggest using 250x150 px for the logo frame size."
}
[/block]
[block:api-header]
{
  "title": "Font"
}
[/block]
The Usersnap feedback widgets use GoogleFonts to make the widgets look nicer. If you don't want to use GoogleFonts, please check out Deactivate GoogleFonts in the feedback widgets.
[block:api-header]
{
  "title": "Widget position"
}
[/block]
There are 5 widget positions that you can configure from the drop-down.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62d6505-widget_positions.png",
        "widget positions.png",
        194,
        205,
        "#f7f8fa"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Removing the Usersnap branding"
}
[/block]
The "Power by" link can be removed as a company(or higher) plan customer.
And as a Scale or Ultimate plan customer, the email correspondence can also be unbranded.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/417498c-power_by_link.png",
        "power by link.png",
        865,
        154,
        "#f7f8fa"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Widget size customization"
}
[/block]
There are 3 widget sizes you can choose from.
This feature offers the flexibility to, for instance, reveal important information on a webpage where the widget is popped without having it blocked. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d30465-widget_size.png",
        "widget size.png",
        781,
        310,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "This customization is not available for mobile SDK."
}
[/block]
[block:api-header]
{
  "title": "CSS custom styling"
}
[/block]
The widget can appear as a blocking or non-blocking widget.
This means you can choose if the widgets show in a position relative to the browser window without blocking the rest of the page or not.
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Usersnap does not support nor recommend any CSS custom styling of the widget. \nAny override done on the users' end may potentially break the widget's functionalities."
}
[/block]
[block:api-header]
{
  "title": "Button styling"
}
[/block]
You can configure the styling of buttons in multiple ways, which include new shapes and sizes.
This is configurable in the ‘Build’ tab under ‘Style’ 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9a292ae-button_1.png",
        "button 1.png",
        1566,
        1724,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
There are many shapes of the button you can select from, including the classic rectangle, a rectangle with rounded edges, a circle, and a square. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7ac4737-button_2.png",
        "button 2.png",
        1566,
        1722,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Here, you can separate the colors of buttons and widgets, as well as add a chosen set of icons and text to buttons.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0fcd859-button_8.png",
        "button 8.png",
        198,
        429,
        "#000000"
      ]
    }
  ]
}
[/block]
The icons can be aligned left or right from the button text which can also change in color now. 
The position change can only be configured for rectangular buttons and rectangular buttons with rounded edges
Sizes: small, default, and large
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/063b2a5-button_7.png",
        "button 7.png",
        1484,
        546,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Style"
slug: "style"
hidden: false
createdAt: "2022-05-23T07:43:30.181Z"
updatedAt: "2022-09-14T10:58:42.197Z"

[block:api-header]
{
  "title": "Colors"
}
[/block]
The widget's primary color, the fields' text color, the colors of the header text, and the background can be set differently following your liking with the HTML color codes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1703d02-colors_1.png",
        "colors 1.png",
        898,
        418,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "What is the best header size?",
  "body": "We suggest using 250x150 px for the logo frame size."
}
[/block]
[block:api-header]
{
  "title": "Font"
}
[/block]
The Usersnap feedback widgets use GoogleFonts to make the widgets look nicer. If you don't want to use GoogleFonts, please check out Deactivate GoogleFonts in the feedback widgets.
[block:api-header]
{
  "title": "Widget position"
}
[/block]
There are 5 widget positions that you can configure from the drop-down.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62d6505-widget_positions.png",
        "widget positions.png",
        194,
        205,
        "#f7f8fa"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Removing the Usersnap branding"
}
[/block]
The "Power by" link can be removed as a company(or higher) plan customer.
And as a Premium or Enterprise plan customer, the email correspondence can also be unbranded.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/417498c-power_by_link.png",
        "power by link.png",
        865,
        154,
        "#f7f8fa"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Widget size customization"
}
[/block]
There are 3 widget sizes you can choose from.
This feature offers the flexibility to, for instance, reveal important information on a webpage where the widget is popped without having it blocked. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3d30465-widget_size.png",
        "widget size.png",
        781,
        310,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "This customization is not available for mobile SDK."
}
[/block]
[block:api-header]
{
  "title": "CSS custom styling"
}
[/block]
The widget can appear as a blocking or non-blocking widget.
This means you can choose if the widgets show in a position relative to the browser window without blocking the rest of the page or not.
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Usersnap does not support nor recommend any CSS custom styling of the widget. \nAny override done on the users' end may potentially break the widget's functionalities."
}
[/block]
[block:api-header]
{
  "title": "Button styling"
}
[/block]
You can configure the styling of buttons in multiple ways, which include new shapes and sizes.
This is configurable in the ‘Build’ tab under ‘Style’ 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9a292ae-button_1.png",
        "button 1.png",
        1566,
        1724,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
There are many shapes of the button you can select from, including the classic rectangle, a rectangle with rounded edges, a circle, and a square. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7ac4737-button_2.png",
        "button 2.png",
        1566,
        1722,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Here, you can separate the colors of buttons and widgets, as well as add a chosen set of icons and text to buttons.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0fcd859-button_8.png",
        "button 8.png",
        198,
        429,
        "#000000"
      ]
    }
  ]
}
[/block]
The icons can be aligned left or right from the button text which can also change in color now. 
The position change can only be configured for rectangular buttons and rectangular buttons with rounded edges
Sizes: small, default, and large
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/063b2a5-button_7.png",
        "button 7.png",
        1484,
        546,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Subscribe to a Usersnap plan"
slug: "subscribe-and-purchase-a-plan"
hidden: false
createdAt: "2021-02-02T21:51:57.628Z"
updatedAt: "2022-07-06T10:42:15.739Z"

[block:api-header]
{
  "title": "Subscribe and purchase a Usersnap plan"
}
[/block]
Woohoo. We are happy that you are ready to purchase a subscription to Usersnap. This article is about how to pay for Usersnap.
Do that directly in the Usersnap dashboard.
Go to "My account" under the tab of  "subscription"  to select the plan you want.
You can choose between "Monthly" and "Yearly" payment periods.
Last but not least, please fill out the required information, such as your credit card credentials and company details then you are ready to go!
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/71a6c87-Subscription_tab.png",
        "Subscription tab.png",
        1025,
        733,
        "#dde3f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Only the team admin can subscribe to the service or change any subscription related settings."
}
[/block]

title: "Sync new feedback items to Google spreadsheets"
slug: "sync-new-feedback-items-to-google-spreadsheets"
hidden: false
createdAt: "2021-02-03T21:34:32.011Z"
updatedAt: "2022-05-27T09:20:40.761Z"

[block:api-header]
{
  "title": "Connect Usersnap with Google Sheets via Zapier"
}
[/block]
Go to the Usersnap integration page on the Zapier website.
[block:html]
{
  "html": "\n  \n\n"
}
[/block]
Set up the integration and choose the feedback project from which you want to get feedback items to send to Google sheets.
Connect Google Drive and choose the right Google sheet. Decide which Usersnap feedback item fields are stored in which Google sheet column. 
And activate the zap. Done.
This is how it should look like in the Usersnap dashboard (Integration section).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e6c0628-zapier_to_google_sheet.png",
        "zapier to google sheet.png",
        964,
        572,
        "#f4f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "1.1 Website widget (button, pop-up): Target"
slug: "targeting"
excerpt: "Configuration of the widget visibility (via button or pop-up)"
hidden: false
createdAt: "2020-03-29T06:43:36.966Z"
updatedAt: "2022-12-27T08:04:46.946Z"

[block:api-header]
{
  "title": "How to change the visibility of a widget or the feedback button?"
}
[/block]
To change the visibility for your widget, go to your project's "Configure" and to the tab "Target".
Users can also target the visitors by the device.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/10d7982-Target_1.png",
        "Target 1.png",
        996,
        557,
        "#f6f8f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Limit the visibility of the feedback button by URL
By adding certain URLs you can limit where the feedback button should be displayed.
If you add multiple URLs, they are joined with an OR operator. 
* URL contains https://usersnap.com 
* URL contains https://help.usersnap.com
This would display the feedback button on both URLs. Because we use "contains" it takes all URLs that have "https://usersnap.com" in it. 
If you are using the "does not contain" limiter, then the URLs are joined with an AND operator.
* URL does not contain https://usersnap.com 
* URL does not contain https://help.usersnap.com
In this case, the feedback buttons won't be displayed on any of these URLs.
Limit the visibility to a specific audience

Everybody: The widget will be exposed to everyone.
Nobody: The widget will be exposed to nobody (same as pausing the widget). But you can activate it via the API
Known users: The widget will be exposed to only known users. A user is known, if a user was set when initializing the widget. Please note, that at least the userID needs to be set.
Target specific users by email: The widget will be exposed to only users with the specified email address. Please note, that the email must be added while initializing the widget.
Target specific user segment: The widget will be exposed to only users that belong to the specified segment. Please note that you can either select a predefined property in the drop-down list, but also type in your arbitrary user property. User segments must be added while initializing the widget.
[block:api-header]
{
  "title": "Targeting segments"
}
[/block]
Further user properties can be added when initializing the widget
User segments can be targeted or excluded in the target audience settings.

[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  user: {\n    userId: \"123\",\n    email: \"mail@example.test\",\n    cohort: \"normal\"\n  },\n});",
      "language": "html"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/0198089-target_segment.png",
        "target segment.png",
        1135,
        522,
        "#f4f6f7"
      ]
    }
  ]
}
[/block]
There is a video that can help you understand it even better.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/akq1qfq1ld",
  "title": "User segmentation - get actionable feedback with targeted surveys!",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/8c9bdaade6b2c5a436e0ad515f383b8a.jpg?image_crop_resized=960x540"
}
[/block]
[block:api-header]
{
  "title": "Further examples how to manage the visibility of the buttons or widgets"
}
[/block]
* Display the feedback button & widgets 
* Open the widget with your own feedback button 
Test the widget on your site
To test the widget, just copy "?testusersnap=APIKEY" to your site.
[block:callout]
{
  "type": "info",
  "title": "Attention",
  "body": "Usersnap uses localStorage to check whether a feedback item was already submitted or not. If the local storage is cleared by the user or automatically, the widget might pop up to the same user again. \n\nMore info can be found here - Local Storage on the Usersnap feedback platform widget."
}
[/block]

title: "User roles"
slug: "team-user-roles"
excerpt: "There are 2 levels of user roles in the dashboard."
hidden: false
createdAt: "2021-09-23T12:12:29.817Z"
updatedAt: "2022-05-30T09:22:08.653Z"

[block:api-header]
{
  "title": "Team level"
}
[/block]
Roles: 
[block:parameters]
{
  "data": {
    "0-0": "Team admin",
    "1-0": "Admin",
    "2-0": "Member",
    "h-0": "Roles",
    "h-1": "Plans",
    "h-2": "Creation",
    "0-1": "All plans",
    "1-1": "Only available for Premium & Enterprise plans.",
    "2-1": "All plans",
    "0-2": "The user who starts the trial and subscribes to the service.",
    "1-2": "Added by the team admin.",
    "2-2": "Invited by the team admin."
  },
  "cols": 3,
  "rows": 3
}
[/block]
Permissions:
[block:parameters]
{
  "data": {
    "h-0": "Permission \ Role",
    "h-1": "Team admin",
    "h-2": "Admin",
    "h-3": "Member",
    "0-0": "Delete team",
    "1-0": "Delete users",
    "2-0": "Create & delete invites",
    "3-0": "Change ownership",
    "4-0": "Change user role\n(not ownership)",
    "5-0": "Deciding which user role can invite new members",
    "6-0": "Access & Change billing info\n(upgrade, downgrade & cancel)",
    "0-1": "Yes",
    "1-1": "Yes",
    "2-1": "Yes",
    "3-1": "Yes",
    "4-1": "Yes",
    "5-1": "Yes",
    "6-1": "Yes",
    "1-2": "Yes",
    "2-2": "Yes",
    "3-2": "Yes",
    "4-2": "Yes",
    "5-2": "Yes",
    "6-2": "Yes",
    "2-3": "Yes",
    "1-3": "Can only delete themselves."
  },
  "cols": 4,
  "rows": 7
}
[/block]
The user roles can be configured in the tab of "Manage Team".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2e9f63e-manage_team_6.png",
        "manage team 6.png",
        1001,
        924,
        "#f6f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Project level"
}
[/block]
[block:parameters]
{
  "data": {
    "h-0": "Permission \ Role",
    "h-1": "Team admin & project owner",
    "h-2": "Project members",
    "h-3": "Others",
    "0-0": "Transfer ownership",
    "1-0": "Change project access settings\n(private / public, select members)",
    "2-0": "Access / delete / update project",
    "0-1": "Yes",
    "1-1": "Yes",
    "2-1": "Yes",
    "2-2": "Yes",
    "2-3": "Can still see an entry for the project on the display rules summary on the “Installation tab“."
  },
  "cols": 4,
  "rows": 3
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "For public projects, every team member is treated as a project member."
}
[/block]

title: "Teamwork"
slug: "teamwork"
hidden: false
createdAt: "2021-12-02T07:37:51.910Z"
updatedAt: "2023-01-24T13:03:47.465Z"

[block:api-header]
{
  "title": "Connect Usersnap with Teamwork"
}
[/block]
Usersnap can be easily connected with Teamwork or Teamwork Desk.
[block:api-header]
{
  "title": "Here's how it works:"
}
[/block]
Go to your Usersnap project’s Integration tab and select Teamwork from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/dfc358b-Teamwork.png",
        "Teamwork.png",
        1105,
        744,
        "#f3f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign into your Teamwork account.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4d46a54-teamwork_2.png",
        "teamwork 2.png",
        539,
        545,
        "#f4f5fc"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Fill out the form accordingly and a test feedback item can be sent right from here.
Don't forget to save the settings when finished.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ea34294-Teamwork_2.png",
        "Teamwork 2.png",
        774,
        784,
        "#f7f7f9"
      ]
    }
  ]
}
[/block]
Now you can manage the items pushed to Teamwork directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1043a3f-teamwork_4.png",
        "teamwork 4.png",
        832,
        911,
        "#9c91e1"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Please make sure to enable the files tabbed section in order for the connection to work.\nIt is under \"Projects\" ->\"More\"->\"Settings\"."
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3c3e0ab-teamwork.png",
        "teamwork.png",
        1023,
        1186,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Customer Effort (CES)"
slug: "thumb-rater"
hidden: true
createdAt: "2019-07-16T10:04:19.937Z"
updatedAt: "2021-03-19T18:27:15.884Z"

[block:api-header]
{
  "title": "Customer Effort Widget"
}
[/block]
The Customer Effort Score widget lets your users rate your product, service, or website. You can do that with the same widget as Customer satisfaction and using a question like "How easy was it to do X?".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5665ad9-e771a18-Screen_Shot_2021-02-27_at_12.57.58_PM.png",
        "e771a18-Screen_Shot_2021-02-27_at_12.57.58_PM.png",
        1760,
        1360,
        "#ccced1"
      ]
    }
  ]
}
[/block]
Or you can use the feedback widget with a thumbs-up or thumbs-down after the user accomplishes a task or flow in your website or application.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f6b925f-Customer_engagement_1.png",
        "Customer engagement 1.png",
        484,
        506,
        "#a19bd7"
      ],
      "sizing": "original"
    }
  ]
}
[/block]
Have a clear overview of your feedback items in the "List" section. The split view can also give you a quick peek of the ticket itself.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3b0330d-Thumb_rating_split_view.png",
        "Thumb rating split view.png",
        1913,
        1169,
        "#e1e6ed"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Usersnap automatically calculates your Customer Engagement Score based on the feedback items submitted.
Get helpful insights within the selected time frame right on your Usersnap Feedback project dashboard.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ffb0864-Thumb_rating_statistics.png",
        "Thumb rating statistics.png",
        1918,
        1157,
        "#f5f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "6. Browser extensions"
slug: "track-browser-extensions"
hidden: false
createdAt: "2021-02-02T21:58:37.018Z"
updatedAt: "2023-01-25T10:45:12.342Z"

The browser extensions allow you and your team to take screenshots and submit feedback to Usersnap without our feedback widgets installed on the target sites or web applications.
If you want to send feedback with an annotated screenshot i.e. from your SalesForce CRM and the Usersnap widget is not installed, just click on the browser extension icon. You just have to install the browser extension for Usersnap and you are ready to go.
You can use it with your Usersnap team member user or with the project API key (in this case the users don't need a unique user account in Usersnap).
We only support the browser extension with Chrome and Firefox.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/bl59ak8wrp",
  "title": "Browser Extension - capture screenshots ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/57618e35b600cffd40fa26d960871667.jpg?image_crop_resized=960x562"
}
[/block]
[block:api-header]
{
  "title": "Logging Into Your Browser Extension"
}
[/block]
There are two ways to log into your browser extensions.
Using Usersnap standard log-in credentials
You just use the login data of your user account you normally use for the Usersnap dashboard and log into the browser extension. In this case, you need a user account and your email will be taken to submit feedback to the Usersnap dashboard.
Once the browser extension is installed and configured, you can create feedback items on any website or web application by clicking on the Usersnap icon on your browser toolbar.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ad703e7-Firefox_extension_5.png",
        "Firefox extension 5.png",
        454,
        281,
        "#f5f7fb"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Using Usersnap project API key 
Additionally, your users can use the browser extension without having an Usersnap team member account. They can use the API credentials to authenticate within the browser extension and submit feedback items to a project. 
[block:callout]
{
  "type": "warning",
  "body": "The feedback items will be sent anonymously."
}
[/block]
Add the API-key from your project which can be found in the "Configuration" section and authenticate within the browser extension.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/24c2304-Firefox_extension_4.png",
        "Firefox extension 4.png",
        387,
        352,
        "#edeff6"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
PS: The project api key can be found in the project's "Publish" tab in the "Configure" section.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d80d11a-browser_extension.png",
        "browser extension.png",
        1106,
        214,
        "#000000"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Please do NOT use the space api key but the project api key in order to indicate which widget shall be in use exactly."
}
[/block]
[block:api-header]
{
  "title": "Google Chrome Extension"
}
[/block]
Google Chrome users can find the Usersnap extension in the Chrome Store: Google Chrome Store
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/8417519-Chrome_extension.png",
        "Chrome extension.png",
        1191,
        812,
        "#f9fafb"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Firefox extension"
}
[/block]
Firefox users can find the Usersnap extension in the add-ons directory for Firefox: Firefox Extension 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/32b431f-Firefox_extension_1.png",
        "Firefox extension 1.png",
        1654,
        989,
        "#cccbd6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Once your Firefox extension is installed and configured, you can create a screen on any website by clicking on the Usersnap icon on your browser toolbar.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/adc78a2-Firefox_extension_2.png",
        "Firefox extension 2.png",
        447,
        337,
        "#d0ced3"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You are ready to submit screens to different projects if wanted. All that you need to do is to select a different project name or fill in a different API key.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/828db18-Firefox_extension_3.png",
        "Firefox extension 3.png",
        1911,
        966,
        "#adbac3"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention",
  "body": "* As this technology is taking an actual screenshot of the webpage, the user is no longer on the website, hence certain feature such as the screen recording is limited to moving the cursor around only."
}
[/block]

title: "Trello"
slug: "trello"
hidden: false
createdAt: "2020-11-05T10:30:51.091Z"
updatedAt: "2021-02-05T16:46:52.449Z"

[block:api-header]
{
  "title": "Connect Usersnap with Trello"
}
[/block]
Usersnap and Trello can be easily connected.
 Here's how it works: 
Go to your Usersnap project’s Integration tab and select Trello from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ec51ef5-Trello_1.png",
        "Trello 1.png",
        1094,
        674,
        "#f3f4f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Simply sign in to your Trello account and fill out the form accordingly and don't forget to save the settings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/84cf733-Trello_2.png",
        "Trello 2.png",
        662,
        727,
        "#f7f7f8"
      ]
    }
  ]
}
[/block]
A test feedback item can be sent right from the configuration page.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3937722-Trello_4.png",
        "Trello 4.png",
        870,
        459,
        "#9e9f9f"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can manage the items pushed to Trello directly.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9111389-Trello_3.png",
        "Trello 3.png",
        748,
        806,
        "#edeef1"
      ]
    }
  ]
}
[/block]

title: "Beta testing & UAT"
slug: "user-acceptance-testing"
hidden: true
createdAt: "2021-02-03T21:36:40.678Z"
updatedAt: "2022-06-05T22:16:44.492Z"

[block:api-header]
{
  "title": "When and how to use Usersnap for UAT?"
}
[/block]
Watch this short demo to learn what Usersnap can do for you and your team.
[block:html]
{
  "html": "\n  \n\n"
}
[/block]

title: "User roles (Updated)"
slug: "user-roles-updated"
excerpt: "There are 2 levels of user roles in the dashboard."
hidden: true
createdAt: "2023-01-19T09:27:44.005Z"
updatedAt: "2023-01-19T09:27:44.005Z"

[block:api-header]
{
  "title": "Team level"
}
[/block]
Roles: 
[block:parameters]
{
  "data": {
    "0-0": "Team admin",
    "1-0": "Admin",
    "2-0": "Member",
    "h-0": "Roles",
    "h-1": "Plans",
    "h-2": "Creation",
    "0-1": "All plans",
    "1-1": "Only available for Scale and Ultimate plans.",
    "2-1": "All plans",
    "0-2": "The user who starts the trial and subscribes to the service.",
    "1-2": "Added by the team admin.",
    "2-2": "Invited by the team admin."
  },
  "cols": 3,
  "rows": 3
}
[/block]
Permissions:
[block:parameters]
{
  "data": {
    "h-0": "Permission \ Role",
    "h-1": "Team admin",
    "h-2": "Admin",
    "h-3": "Member",
    "0-0": "Delete team",
    "1-0": "Delete users",
    "2-0": "Create & delete invites",
    "3-0": "Change ownership",
    "4-0": "Change user role\n(not ownership)",
    "5-0": "Deciding which user role can invite new members",
    "6-0": "Access & Change billing info\n(upgrade, downgrade & cancel)",
    "0-1": "Yes",
    "1-1": "Yes",
    "2-1": "Yes",
    "3-1": "Yes",
    "4-1": "Yes",
    "5-1": "Yes",
    "6-1": "Yes",
    "1-2": "Yes",
    "2-2": "Yes",
    "3-2": "Yes",
    "4-2": "Yes",
    "5-2": "Yes",
    "6-2": "Yes",
    "2-3": "Yes",
    "1-3": "Can only delete themselves."
  },
  "cols": 4,
  "rows": 7
}
[/block]
The user roles can be configured in the tab of "Manage Team".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2e9f63e-manage_team_6.png",
        "manage team 6.png",
        1001,
        924,
        "#f6f8f8"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Project level"
}
[/block]
[block:parameters]
{
  "data": {
    "h-0": "Permission \ Role",
    "h-1": "Team admin & project owner",
    "h-2": "Project members",
    "h-3": "Others",
    "0-0": "Transfer ownership",
    "1-0": "Change project access settings\n(private / public, select members)",
    "2-0": "Access / delete / update project",
    "0-1": "Yes",
    "1-1": "Yes",
    "2-1": "Yes",
    "2-2": "Yes",
    "2-3": "Can still see an entry for the project on the display rules summary on the “Installation tab“."
  },
  "cols": 4,
  "rows": 3
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "For public projects, every team member is treated as a project member."
}
[/block]

title: "API for project-specific widgets (old version)"
slug: "usersnap-api-for-project-specific-widgets"
hidden: true
createdAt: "2021-02-02T19:53:54.274Z"
updatedAt: "2022-06-29T14:22:56.107Z"

[block:api-header]
{
  "title": "Project specific snippet"
}
[/block]
[block:callout]
{
  "type": "danger",
  "title": "Notice!",
  "body": "We recommend using the global snippet and its API for showing and hiding feedback buttons and widgets. The project-specific snippets and API will only be maintained and not enhanced in the future."
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "This snippet will only work for this project and ignore all display rules of this and other projects. Moreover, this version of the API has its own methods, listed below.\n\nIf you are using the global snippet for the installation of the Usersnap feedback platform, please go to this API docu.",
  "title": "API for project-specific snippets"
}
[/block]
[block:api-header]
{
  "title": "Project-specific widgets react to the following events"
}
[/block]
Please, read the documentation about the events in the general Usersnap API section
[block:api-header]
{
  "title": "Installation widget and exposing API"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html",
      "name": "Installation snippet"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Setting default values - email address"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.on('open', function(event) {\n    event.api.setValue('visitor', 'john@doe.me');\n});",
      "language": "javascript",
      "name": "Setting email address"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Customizing the feedback button"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  button: {isHidden: true}; //hiding the button\n});",
      "language": "javascript",
      "name": "Hiding the button"
    }
  ]
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  button: {\n    position: \"rightCenter\" //or \"rightBottom\" or \"bottomRight\"\n  } \n});",
      "language": "javascript",
      "name": "Setting button position"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Changing visibility of the button via API"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.showButton()\n\napi.hideButton()",
      "language": "javascript",
      "name": "Showing/Hiding button"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Opening the widget via the API"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.open()",
      "language": "javascript",
      "name": "Opening the widget"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Setting custom data via the API"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.on('open', function(event) {\n    event.api.setValue('custom', {userID: 'u123', enviroment: 'staging'});\n});",
      "language": "javascript",
      "name": "Custom data"
    }
  ]
}
[/block]
You can pass any data that is of interest to you as "custom data".
This data you can view on the feedback's detail screen under "More details" -> "Custom data"
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Examples on popular frameworks"
}
[/block]
Check out sample code for installing widgets in different popular frameworks in the repository below:
[block:embed]
{
  "html": false,
  "url": "https://github.com/usersnap/public",
  "title": "usersnap/public",
  "favicon": "https://github.com/favicon.ico",
  "image": "https://avatars0.githubusercontent.com/u/3296843?s=400&v=4"
}
[/block]

title: "Feedback list"
slug: "usersnap-dashboard-management"
hidden: false
createdAt: "2020-04-19T06:38:34.786Z"
updatedAt: "2022-12-12T10:18:35.179Z"

[block:api-header]
{
  "title": "What do you need for your daily management of your users' feedback?"
}
[/block]
 Dashboard for feedback items 
* Feedback management
  * Dashboard and feedback list
  * View and manage feedback
  * Manage and label to feedback items
  * Assign feedback items to your team
  * Search and filtering feedback items

Communicate with your team and users via Usersnap

Add attachments to the conversation with your team or users


Inbox - customize your own view


 Notifications 
* Project-specific notifications
 Statistics, Reports and Exporting 
* Statistics and reports 
* Export your projects' feedback items 
 Additional Functions 
* Content Security Policy
[block:api-header]
{
  "title": "Dashboard and feedback list"
}
[/block]
In each project, you have an overview of your feedback items in the "List" section. 
The split view gives you a quick peek at the feedback items of this project.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/dd0f848-feedback_list_1.png",
        "feedback list 1.png",
        860,
        271,
        "#eef1f4"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "View and manage feedback"
}
[/block]
By clicking on one of the feedback items, you can see the details of this feedback item on the right side in the so-called split view.
You can see and do various actions with the feedback item:
* Set it to done
* Display the added screenshot with the annotations
* See the URL of the page where the feedback was submitted
* See further comments and messages your users were sending you in this feedback item
* Find the multiple comments that can be added to the screenshot
* See the sentiment-analysis of the content with the smileys
* Get more details like screen size, browser size, operating system, browser version and browser type, location, etc
* Assign the feedback to a team member
* Add labels to this feedback item to categorize the feedback
* Send the feedback to an integrated third party solution
* See when the feedback item was sent in
* Read the communication with the user or team internally at the end of the feedback details
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]
[block:api-header]
{
  "title": "Bulk action"
}
[/block]
The possible bulk actions in the "Feedback list" and "Inbox" are as followed:
* Delete
* Change status
* Assign
* Label
* Mark read/unread
* Share/send to integration (not in inbox view)
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/02af88c-bulk_action_1.png",
        "bulk action 1.png",
        668,
        452,
        "#e8ebeb"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Search and filtering feedback items"
}
[/block]
The search is quite powerful to filter the feedback items based on various search terms.
Within the search field, you can specify the different terms you are looking for. The search terms will not only do a full-text search but offer you to search specifically for labels, time periods, assigned persons, etc. 
There are some useful filters, such as sent/not sent to integration and search feedback items by number  "#", which are available as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/42221b7-filters_1.png",
        "filters 1.png",
        801,
        754,
        "#fbfbfc"
      ]
    }
  ]
}
[/block]
It is also possible to apply a “not”-filter for labels and assignees
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5af063d-filters_2.png",
        "filters 2.png",
        415,
        159,
        "#e7e8ef"
      ]
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/df706d4-filters_3.png",
        "filters 3.png",
        186,
        87,
        "#f1f2f4"
      ]
    }
  ]
}
[/block]
You can also save your frequently used filters to create your own lists of feedback items in order to have a quick overview.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/87cf97e-filters_4.png",
        "filters 4.png",
        753,
        533,
        "#fafafb"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Communicate with your team and reply to customers via Usersnap"
}
[/block]
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/rbi3rb0exh",
  "title": "Customer Care - reply to customers and close the loop ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/38061570d9278f4334e4f25a365f508b.jpg?image_crop_resized=960x534"
}
[/block]
With the "reply" feature in each feedback item,  you can enhance your customer support & communication with browser screenshots. By clicking on 'reply', your comment will be sent via email to your customer. The customer will receive an email containing the same conversation you see in your Usersnap dashboard.
Only messages sent to the customer can be viewed by the customer. When clicking on "Add notes", those notes will stay in the Usersnap dashboard as internal comments.
Your customer or website visitor will receive an email with your comment and can reply to you directly from his inbox. The original message and screenshot are also included so that they are always clear about which feedback item is this reply for.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/78db99d-Dashboard__Management_3.png",
        "Dashboard & Management 3.png",
        1108,
        789,
        "#aba3ef"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/02cc79f-CX_reply_content.png",
        "CX reply content.png",
        479,
        235,
        "#fafbfb"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Notes are shared internally within the team only while replies will reach the item's reporter by email.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/70cf6c8-reply.png",
        "reply.png",
        1084,
        100,
        "#e9edf6"
      ]
    }
  ]
}
[/block]
Moreover, users can edit/delete their own notes/replies. Concerning the replies sent by email, there is a delay of 3 minutes. Hence if the reply was edited within this timeframe, changes are included in the notification email.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3395396-add_notes.png",
        "add notes.png",
        1100,
        851,
        "#f3f2f7"
      ]
    }
  ]
}
[/block]
In addition,  an edited/deleted message can be seen clearly. One can also give the comment a "Like".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/dd9ed32-reply_edited.png",
        "reply edited.png",
        907,
        105,
        "#f6f3f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a71574e-Deleted_message.png",
        "Deleted message.png",
        897,
        46,
        "#f0f0f2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
It is possible to add up to 10 attachments to external replies or internal notes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/174f0a6-reply_multiple_attachment.png",
        "reply multiple attachment.png",
        1235,
        393,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Saved replies"
}
[/block]
Users can create, edit, and select saved replies. 
These "templates" are only available in the reply section, but not in notes.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/79d98cc-reply_template_1.png",
        "reply template 1.png",
        1208,
        114,
        "#ebeef6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/79a945d-reply_template_2.png",
        "reply template 2.png",
        355,
        145,
        "#f3fbf4"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
They are user based across all projects. 
Hence you won't need to worry about other team members editing your own templates.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/62bc172-reply_template_3.png",
        "reply template 3.png",
        395,
        295,
        "#f7f8fb"
      ]
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "The \"saved replies\" feature is available from the Startup plan on"
}
[/block]
[block:api-header]
{
  "title": "Add attachments to the conversation with your team or users"
}
[/block]
All team members can add an attachment to a reply or a note of a certain feedback item.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a1e407c-Dashboard__Management_6.png",
        "Dashboard & Management 6.png",
        1126,
        175,
        "#e7ebf4"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
In addition, reporters can also add attachments to the very feedback item submitted by oneself directly from the received email. The attached file will then be presented in the timeline of this item.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/30e7eee-attachment.png",
        "attachment.png",
        948,
        661,
        "#f4f4f5"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Manage and add labels to feedback items"
}
[/block]
You can add labels to each feedback item to easily categorize your feedback items.
[block:embed]
{
  "html": "",
  "url": "https://usersnapat.wistia.com/medias/otj69xxp1g",
  "title": "Labels - categorize feedback items ✅",
  "favicon": "https://usersnapat.wistia.com/favicon.ico",
  "image": "https://embed-ssl.wistia.com/deliveries/3f8be404138fe3625f1e26d9a0bea0c0.jpg?image_crop_resized=960x536"
}
[/block]
Add an existing label or create new ones. Remove them later on if necessary. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/90379b5-New_label_3.png",
        "New label 3.png",
        444,
        232,
        "#f3f2ef"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
If you click on the "Edit" button, an existing label can be updated at any time.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6ab393e-label_2.png",
        "label 2.png",
        603,
        207,
        "#f1f0f4"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
You can also choose to create a brand new label. Just start typing and hit "Create" in the end.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/58e8c40-New_label_4.png",
        "New label 4.png",
        356,
        192,
        "#eeedf1"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Assign feedback items to your team"
}
[/block]
In each feedback item detail view, you can assign a feedback item to one of your team members. When you do that, your team member gets a notification about the assignment.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4948259-assign.jpg",
        "assign.jpg",
        1416,
        1020,
        "#e2e2ea"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "General Topics"
slug: "usersnap-general-topics"
hidden: false
createdAt: "2017-09-18T09:12:07.590Z"
updatedAt: "2023-02-06T09:32:26.184Z"

[block:api-header]
{
  "title": "We listed the most common troubleshooting questions here"
}
[/block]
 Screenshots are corrupted or not accurate 
* Why are my screenshots blank or not accurate?
Potentially, because your CSS or JavaScript-files are protected.
 My users can't submit screenshots in the widgets 
* Content Security Policy (CSP) 
* Why can't your users submit a screenshot when your DOM (HTML) is too huge?
 The widget or feedback button is not showing 
* Why is my feedback button or widget not showing on my site/app?
 Emails or notifications are not arriving 
* Why am I not receiving emails from Usersnap
 Installation issues 
* I'm confused with the space (global) code snippet for installation.


Can we build our own feedback button?


How can I control the visibility of feedback buttons and widgets? 


 Performance and maxima 
* Do the Usersnap widgets slow down my site?

What is the maximum supported screen resolution of Usersnap? 

 Does Usersnap support this ... 
* What browsers are supported by Usersnap? 


Does Usersnap work in local development environments? 


Does Usersnap support WebGL? 


Does Usersnap support iframes in website screenshots? 


Can we black-out parts of screenshots for privacy reasons? 


How can I handle the content which is not supposed to be rendered in a feedback item?


 Integration connection issues 
* I can't see all the projects from my Azure DevOps account or the connection doesn't work at all
 Widget submission takes too long 
* Why does the feedback widget submission take so long?
[block:api-header]
{
  "title": "Why am I not receiving emails from Usersnap?"
}
[/block]
 Please, check your spam folder. 
Every email that comes from the Usersnap applications should come from our email server:
mg.usersnap.com 
That includes new screens, email integration, invitation, notifications, etc. If you whitelist that hostname, the emails shall go through smoothly.
[block:api-header]
{
  "title": "Why are all requests on my website failing after adding Usersnap?"
}
[/block]
This could have been caused by the console recorder. Please kindly check if your console recorder feature is activated. If so, please deactivate it and things should be working normally again.
[block:api-header]
{
  "title": "Why does the Usersnap button/widget not show although the snippet was installed?"
}
[/block]
In this case please check if the project was set live or if it's been paused. It can be seen from the projects' overview or inside a specific project.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a43add9-set_live_2.png",
        "set live 2.png",
        442,
        177,
        "#ebf5ec"
      ]
    }
  ]
}
[/block]
The "Set live" button can be found inside a project in the right upper corner.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9bcbb09-set_live_1.png",
        "set live 1.png",
        271,
        46,
        "#94d3c6"
      ]
    }
  ]
}
[/block]
If the project is "set live" but the button/widget still does not appear, please kindly double-check on its display rules and see if they were configured accordingly.
[block:api-header]
{
  "title": "Do the Usersnap widgets slow down my site?"
}
[/block]
The Usersnap widgets are loaded asynchronously (like Google Analytics). It DOES NOT impact your page loading and rendering times. Additionally, we are using a strong CDN to ensure the best user experience.
Read the article about "Improving the page speed" 
[block:api-header]
{
  "title": "Why can't your users submit a screenshot if your DOM (HTML) is too huge?"
}
[/block]
With every screenshot, our widget is currently also submitting a snapshot of your DOM (document object model) of your HTML page. Sometimes, this DOM can be huge especially if you have a Single-Page-Application (SPA) or your company is using a framework like VUE.js, etc.
Due to protect Usersnap against any attacks we limit the so-called payload (size of the DOM) to 20 MB (mega-bytes). If your DOM is bigger than that, you will not be able to submit the screenshot.
[block:api-header]
{
  "title": "Why can't I see all the projects from my Azure DevOps account?"
}
[/block]
 The connection of the integration from Usersnap to Azure DevOps does not work 
This can happen when using ActiveDirectory in conjunction with Azure DevOps if the connecting account is only a guest account in the ActiveDirectory. 
In this case, you should use a dedicated account that is a "real member" in the ActiveDirectory to connect to Azure DevOps. That should solve your issue.
[block:api-header]
{
  "title": "Why does the feedback widget submission take so long?"
}
[/block]
Sometimes, when you have a huge web page (DOM), it can take longer to submit the feedback item with a screenshot. With every submission, the structure of the web page (which is called document object model = DOM) is attached to the feedback item. 
If the size of the DOM is bigger than 20 MB, due to security reasons, we are blocking the request. 
If you are using the video screen recording and you took a long recording, it can also take a long time to submit the feedback item.
 How can you measure the size of the DOM? 
Enter this in the console of your browser to see the size of the DOM in MB (megabytes)
[block:code]
{
  "codes": [
    {
      "code": "document.documentElement.outerHTML.length/1024/1024",
      "language": "javascript"
    }
  ]
}
[/block]

title: "Protected Sites"
slug: "usersnap-protected"
hidden: false
createdAt: "2017-08-25T12:15:05.865Z"
updatedAt: "2021-06-07T14:27:29.630Z"

If your website or web app is protected (e.g with Cloudflare or similar), behind a firewall, or require users to be authenticated, you will need additional settings when setting up Usersnap.
To get these accurate screenshots, we are storing the HTML when your users are taking a screenshot in a feedback item. But to accurately render them, our rendering-servers need access to your web pages to have access to the CSS and JavaScript files embedded in the HTML. 
If your website or web application is protected by a firewall or a script, you and your technical team need to make sure that these resources (CSS, JavaScript) are available for our rendering servers.
If you have any further questions, please contact our customer success team.
[block:api-header]
{
  "title": "Basic Authentication"
}
[/block]
If your site requires basic authentication (.htaccess), you need to grant access to the Usersnap servers (*.usersnap.com).
[block:api-header]
{
  "title": "Configuration for Apache 2.2"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "Order deny,allow\nDeny from all\n\nAuthType Basic\nAuthName \"Password protected\"\nRequire valid-user\nAuthUserFile /path/to/your/.htpasswd\n\nAllow from .usersnap.com\nSatisfy Any",
      "language": "text"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Configuration for Apache 2.4"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "AuthType Basic\nAuthName \"Password protected\"\nAuthUserFile /path/to/your/.htpasswd\nRequire valid-user\n\nRequire ip 144.76.224.70 78.46.60.85 136.243.88.28 52.51.159.222 52.50.237.226 52.208.135.82 18.196.29.249 18.196.146.235 18.196.76.93",
      "language": "text"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Configuration for IIS7+"
}
[/block]
Open the IIS Manager, click on your website and open "IP address and domain restrictions". In this view, enable domain restrictions (Edit Feature Settings | Enable domain restrictions) and add an allow rule for the domain "*.usersnap.com". 
You can even find more reference on this technique at Microsoft: https://technet.microsoft.com/en-us/library/cc731598(v=ws.10).aspx
[block:api-header]
{
  "title": "Configuration for Nginx"
}
[/block]
To enable specific IP ranges on a Nginx server, please add the following IP addresses to your allow list: current renderer of Usersnap
You have to add the configuration to your nginx.conf file, please add a line for the IP addresses like:
[block:code]
{
  "codes": [
    {
      "code": "allow 52.51.159.222;\nallow 52.50.237.226;\nallow 52.208.135.82; \nallow 18.196.29.249;\nallow 18.196.146.235;\nallow 18.196.76.93;",
      "language": "text"
    }
  ]
}
[/block]
There are a lot of tutorials out there like this tutorial.
If you use any other web server (e.g. Tomcat, ...) just contact us, we are happy to find a solution together with you.
[block:api-header]
{
  "title": "Protected/Firewall"
}
[/block]
If you can't check for partial hostnames using a reverse lookup, you can get our comprehensive list of renderer IPs.
[block:api-header]
{
  "title": "List of Rendering IPs"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "52.51.159.222\n52.50.237.226\n52.208.135.82 \n18.196.29.249\n18.196.146.235\n18.196.76.93",
      "language": "text"
    }
  ]
}
[/block]
If you are not able to change a firewall rule, you can use our browser extensions which will work without any firewall change.
[block:api-header]
{
  "title": "Using a different screenshot rendering technology"
}
[/block]
Our Usersnap feedback platform got a huge upgrade and you are able to collect screenshots via an alternative rendering technology.
Read more about this option.

title: "Team Management"
slug: "usersnap-team-management"
hidden: false
createdAt: "2017-08-24T09:58:39.955Z"
updatedAt: "2022-06-20T05:51:57.107Z"

[block:api-header]
{
  "title": "Add team members and collaborate"
}
[/block]
 Usersnap works best for teams. 
Invite your colleagues to your Usersnap team and start collaborating on customer feedback. Democratize feedback throughout your teams.
Click on the 'Manage Team' icon on the upper left of your Usersnap dashboard to go to the Team section.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/64347dd-manage_team_1.png",
        "manage team 1.png",
        1588,
        903,
        "#f8fafa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Add the email addresses of your colleagues in the 'Invite users' bar.
You can see your current team members here as well as the pending invites you have sent.
In this section, you can also change the name of your team and configure who is able to invite new team members.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/72a3f59-manage_team_3.png",
        "manage team 3.png",
        803,
        426,
        "#f0f5f2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "What is a team member?"
}
[/block]
A team member is someone who can log-in and have access to the Usersnap dashboard and can collaborate with other team members. External users or site visitors using Usersnap to send screens to the team are not considered as team members and are not counted in the user limit.
[block:api-header]
{
  "title": "One user account in one team"
}
[/block]
In Usersnap one user account associated with a specific email can only join one team (account). If you want to manage multiple accounts, you can create an email with a (+) in it like office+account1@usersnap.com.
[block:api-header]
{
  "title": "Transfer ownership of your account"
}
[/block]
The team admin can transfer the ownership of the account to another member of the team. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/61d38a3-manage_team_5.png",
        "manage team 5.png",
        807,
        480,
        "#f4f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
This is important for billing concerns since only the owner of the team account can update the payment details of the account as well as proceed with the payment process. More detailed info can be found in User roles.
Additionally, the team admin can delete team members.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/538c559-manage_team_4.png",
        "manage team 4.png",
        828,
        448,
        "#f2f4f4"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Change the email of the team admin or a teammate"
}
[/block]
When the original team admin is A and you plan to replace it with B, please invite B to be a team member first. 
After B joins the team please assign B to be the new team admin.
You can delete the A account after the transfer is done if necessary.
Please, make sure that you have transferred the ownership of the account to B before you delete the old team admin's account.
[block:callout]
{
  "type": "info",
  "body": "If you are a teammate, not the team admin, please take the same steps mentioned above without transferring the team's ownership. That means please invite your new email address to the team and delete the old email after it's done."
}
[/block]
[block:api-header]
{
  "title": "Delete your account"
}
[/block]
[block:callout]
{
  "type": "warning",
  "body": "Please be aware that all your data, including team member accounts, projects, and screens, will be deleted and cannot be retrieved."
}
[/block]
 Cancelling the subscription 
If you want to cancel your active subscription, please go to the "Upgrade Plan" page and click on the button "Unsubscribe".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5e76636-unsubscribe.png",
        "unsubscribe.png",
        915,
        719,
        "#f6f7fa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
 Deleting the account 
Here is how you can delete your account.
Please log in to your account and go to "My Account" -> "Manage Team" -> "Delete Team".
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/3fa6429-manage_team_2.png",
        "manage team 2.png",
        827,
        427,
        "#f1f5f3"
      ]
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Delete your user (team member)"
}
[/block]
[block:callout]
{
  "type": "warning",
  "body": "Please, be aware that if you are a team admin, you will also delete your account with all data. Only delete your user after you transferred the ownership to someone else from your team."
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ed9fd91-delete_team_member.png",
        "delete team member.png",
        1004,
        487,
        "#f4f4f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]

title: "Works on mobile devices"
slug: "usersnap-widgets-also-work-on-mobile-devices"
hidden: false
createdAt: "2021-02-19T19:26:52.487Z"
updatedAt: "2021-05-25T11:48:52.466Z"

[block:api-header]
{
  "title": "Feedback widgets that work on desktops, laptops, tablets and mobile phones"
}
[/block]
Your feedback widgets will work on the browsers on (almost) all of your users' devices. Collect user feedback not only on desktop screen sizes but also on tablet and mobile phones.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/75de7d7-47a3490-mobile_cx.jpg",
        "47a3490-mobile_cx.jpg",
        376,
        668,
        "#b9bcbe"
      ],
      "sizing": "original"
    }
  ]
}
[/block]

title: "Content Security Policy (CSP)"
slug: "usersnap-with-csp"
hidden: false
createdAt: "2018-07-31T12:05:35.670Z"
updatedAt: "2022-03-29T10:42:00.060Z"

We are offering the possibility of using Usersnap with Content Security Policy (CSP), which enhances certain security issues.
More about CSP
Please follow the instructions on this page to use Usersnap with CSP.
CSP nonce installation
For activating CSP with the usage of a nonce, a random hash (nonce) has to be defined.
This nonce is then used to authenticate scripts.  
Setting Header
To enable CSP in the browser the Content-Security-Policy header has to be set. In it, different permissions of different URLs or nonce hashes are set. 
For example:
[block:code]
{
  "codes": [
    {
      "code": "Content-Security-Policy: \"\n  default-src 'self';\n  script-src .usersnap.com 'YOUR-NONCE' 'self';\n  style-src .usersnap.com .googleapis.com 'YOUR-NONCE';\n  connect-src .usersnap.com https://s3.eu-central-1.amazonaws.com/upload.usersnap.com 'self';\n  img-src .usersnap.com;\n  font-src .usersnap.com *.gstatic.com;\n\"",
      "language": "html"
    }
  ]
}
[/block]
To enable Usersnap with CSP, the nonce which is used for Usersnap needs the following permissions:
- script-src
- style-src
Also, the domain *.usersnap.com needs permissions:
- script-src
- connect-src
- style-src
- img-src
- font-src
If you need video uploads on your website, you must allow  https://s3.eu-central-1.amazonaws.com/upload.usersnap.com to connect.
Since we are using Google fonts, *.googleapis.com needs the style-src permission, and *.gstatic.com needs the font-src permission. 
Setting nonce
Finally, for activating the widget itself, the nonce hash must be added as an attribute to the embedded script tag and as a parameter to the script source:
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:html]
{
  "html": "\n\n\n  Get started\n  \n"
}
[/block]

title: "Voting on feedback items"
slug: "voting-on-feedback-items"
hidden: false
createdAt: "2021-07-08T11:57:01.359Z"
updatedAt: "2022-05-27T09:44:52.902Z"

It’s  possible to

vote on feedback items
see the number of upvotes on the list
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6c2448f-upvote_1.png",
        "upvote 1.png",
        794,
        741,
        "#d3dce2"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
sort by number of upvotes
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/27464ae-Filter_by_votes.png",
        "Filter by votes.png",
        804,
        277,
        "#eef0f3"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The voting feature is also available on the Board for your guest users and the votes are synced betwen the dashboard and the board.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ce3ec2d-Votes_in_the_Board.png",
        "Votes in the Board.png",
        1902,
        662,
        "#fdfdfd"
      ],
      "sizing": "80"
    }
  ]
}
[/block]


title: "Webhook (Updated...)"
slug: "webhook-updated"
hidden: true
createdAt: "2023-01-19T09:38:33.435Z"
updatedAt: "2023-01-19T09:39:14.199Z"

[block:api-header]
{
  "title": "Connect Usersnap via Webhook with your enterprise solutions"
}
[/block]
Usersnap lets you easily set up a webhook integration. Go to your Usersnap project’s integration tab and select Webhook from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/23f79b9-1-select-from-grid.png",
        "1-select-from-grid.png",
        1501,
        700,
        "#f2f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "Our Webhook integration is available to users on our Scale and Ultimate plans - so you can easily connect and automate your workflow!"
}
[/block]
Next, enter the webhook URL.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a75ac7c-2-enter-url.png",
        "2-enter-url.png",
        847,
        352,
        "#f2f2f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Usersnap will create a security token for this integration. You will need this security token to verify requests arriving at your endpoint. The rest of the page describes how to do it.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b0d7421-3-secret.png",
        "3-secret.png",
        856,
        759,
        "#f4f4f6"
      ]
    }
  ]
}
[/block]
How does the request look like
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/90a65c4-Screenshot_2021-08-16_at_10.13.25.png",
        "Screenshot 2021-08-16 at 10.13.25.png",
        1601,
        521,
        "#f3f3f3"
      ]
    }
  ]
}
[/block]
Where the JSON values are:
[block:code]
{
  "codes": [
    {
      "code": "{\n  \"feedback_number\": 1000,\n  \"link\": \"https://app.usersnap.com/l/feedback/45a5c97d-2a8f-46c0-90b6-d6089192b161\",\n  \"client\": {\n    \"url\": \"https://app.usersnap.com/\",\n    \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\n    \"screen_width\": 1200,\n    \"screen_height\": 1200,\n    \"client\": \"Chrome\"\n  },\n  \"comment\": {\n    \"text\": \"This example feedback will show if your integration setup is correct\"\n  },\n  \"geo\": {\n    \"ip_address\": \"123.123.123.123\"\n  },\n  \"fields\": [\n    {\n      \"order\": 0,\n      \"label\": \"Title\",\n      \"boolean_value\": null,\n      \"text_value\": \"Sample feedback\",\n      \"value\": \"Sample feedback\"\n    },\n    {\n      \"order\": 1,\n      \"label\": \"Comment\",\n      \"boolean_value\": null,\n      \"text_value\": \"This example feedback will show if your integration setup is correct\",\n      \"value\": \"This example feedback will show if your integration setup is correct\"\n    }\n  ],\n  \"rating\": {\n    \"value\": 1\n  },\n  \"request\": {\n    \"text\": \"Sample feedback\"\n  },\n  \"state\": {\n    \"identifier\": \"open\"\n  },\n  \"visitor\": {\n    \"email\": \"external_user_email@example.com\"\n  }\n}",
      "language": "json"
    }
  ]
}
[/block]
Keep in mind that our servers will be checking the response status code. If your script returns an HTTP status code that is different from 200, we will retry the delivery process several times.
Verify a request from webhook integration
Usersnap send two headers alongside every webhook request:
- X-Usersnap-Signature
- X-Usersnap-Timestamp
X-Usersnap-Signature is the HMAC SHA-256 of the request body. X-Usersnap-Timestamp contains a timestamp associated with this request. This timestamp is included as an input to the calculation of the signature hash to prevent time replay attacks.
The two headers can be used by consumers of the Webhook integration to verify that the request comes from Usersnap, and not from someone else. The following code snippet shows how this can be done (the example uses Python and Flask, but the same principle would apply for any other language/framework).
First, let's set up the necessary imports.
python
from flask import Flask, jsonify, request
import base64
from hashlib import sha256
import hmac
import json
import datetime
import time
import sys
For the sake of this example, we've set up a route handler in Flask which accepts POST requests.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
Next, we need the binary data of the request itself.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
Next, calculate an HMAC SHA-256 hash of this request body using the secret you get from Usersnap.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
Next, get the timestamp from the X-Usersnap-Timestamp header, and use it to update the HMAC hash.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
    header_timestamp = request.headers.get("X-Usersnap-Timestamp")
    header_timestamp = int(header_timestamp)
    timestamp_bytes = header_timestamp.to_bytes(32, "little")
    hmac_hash.update(timestamp_bytes)
Finally, get the hexdigest from the hmac_hash, and compare it with the signature in X-Usersnap-Signature. If they match, you're good to go. If they don't, you can reject the request with a non-200 status code.
```python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
    header_timestamp = request.headers.get("X-Usersnap-Timestamp")
    header_timestamp = int(header_timestamp)
    timestamp_bytes = header_timestamp.to_bytes(32, "little")
    hmac_hash.update(timestamp_bytes)
    expected_signature = hmac_hash.hexdigest()
header_signature = request.headers.get("X-Usersnap-Signature")

match = hmac.compare_digest(header_signature, expected_signature)

```
[block:api-header]
{
  "title": "NodeJS example using ExpressJS"
}
[/block]
The steps for verifying a request using ExpressJS are very similar to the steps described for the Flask.
The example can be found in our public Github repository.

title: "Webhook"
slug: "webhook"
hidden: false
createdAt: "2020-11-20T09:35:37.647Z"
updatedAt: "2022-07-22T13:40:08.494Z"

[block:api-header]
{
  "title": "Connect Usersnap via Webhook with your enterprise solutions"
}
[/block]
Usersnap lets you easily set up a webhook integration. Go to your Usersnap project’s integration tab and select Webhook from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/23f79b9-1-select-from-grid.png",
        "1-select-from-grid.png",
        1501,
        700,
        "#f2f3f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Next, enter the webhook URL.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/a75ac7c-2-enter-url.png",
        "2-enter-url.png",
        847,
        352,
        "#f2f2f5"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Usersnap will create a security token for this integration. You will need this security token to verify requests arriving at your endpoint. The rest of the page describes how to do it.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/b0d7421-3-secret.png",
        "3-secret.png",
        856,
        759,
        "#f4f4f6"
      ]
    }
  ]
}
[/block]
How does the request look like
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/90a65c4-Screenshot_2021-08-16_at_10.13.25.png",
        "Screenshot 2021-08-16 at 10.13.25.png",
        1601,
        521,
        "#f3f3f3"
      ]
    }
  ]
}
[/block]
Where the JSON values are:
[block:code]
{
  "codes": [
    {
      "code": "{\n  \"feedback_number\": 1000,\n  \"link\": \"https://app.usersnap.com/l/feedback/45a5c97d-2a8f-46c0-90b6-d6089192b161\",\n  \"client\": {\n    \"url\": \"https://app.usersnap.com/\",\n    \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\n    \"screen_width\": 1200,\n    \"screen_height\": 1200,\n    \"client\": \"Chrome\"\n  },\n  \"comment\": {\n    \"text\": \"This example feedback will show if your integration setup is correct\"\n  },\n  \"geo\": {\n    \"ip_address\": \"123.123.123.123\"\n  },\n  \"fields\": [\n    {\n      \"order\": 0,\n      \"label\": \"Title\",\n      \"boolean_value\": null,\n      \"text_value\": \"Sample feedback\",\n      \"value\": \"Sample feedback\"\n    },\n    {\n      \"order\": 1,\n      \"label\": \"Comment\",\n      \"boolean_value\": null,\n      \"text_value\": \"This example feedback will show if your integration setup is correct\",\n      \"value\": \"This example feedback will show if your integration setup is correct\"\n    }\n  ],\n  \"rating\": {\n    \"value\": 1\n  },\n  \"request\": {\n    \"text\": \"Sample feedback\"\n  },\n  \"state\": {\n    \"identifier\": \"open\"\n  },\n  \"visitor\": {\n    \"email\": \"external_user_email@example.com\"\n  }\n}",
      "language": "json"
    }
  ]
}
[/block]
Keep in mind that our servers will be checking the response status code. If your script returns an HTTP status code that is different from 200, we will retry the delivery process several times.
Verify a request from webhook integration
Usersnap send two headers alongside every webhook request:
- X-Usersnap-Signature
- X-Usersnap-Timestamp
X-Usersnap-Signature is the HMAC SHA-256 of the request body. X-Usersnap-Timestamp contains a timestamp associated with this request. This timestamp is included as an input to the calculation of the signature hash to prevent time replay attacks.
The two headers can be used by consumers of the Webhook integration to verify that the request comes from Usersnap, and not from someone else. The following code snippet shows how this can be done (the example uses Python and Flask, but the same principle would apply for any other language/framework).
First, let's set up the necessary imports.
python
from flask import Flask, jsonify, request
import base64
from hashlib import sha256
import hmac
import json
import datetime
import time
import sys
For the sake of this example, we've set up a route handler in Flask which accepts POST requests.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
Next, we need the binary data of the request itself.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
Next, calculate an HMAC SHA-256 hash of this request body using the secret you get from Usersnap.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
Next, get the timestamp from the X-Usersnap-Timestamp header, and use it to update the HMAC hash.
python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
    header_timestamp = request.headers.get("X-Usersnap-Timestamp")
    header_timestamp = int(header_timestamp)
    timestamp_bytes = header_timestamp.to_bytes(32, "little")
    hmac_hash.update(timestamp_bytes)
Finally, get the hexdigest from the hmac_hash, and compare it with the signature in X-Usersnap-Signature. If they match, you're good to go. If they don't, you can reject the request with a non-200 status code.
```python
@app.route("/webhook-file", methods=["POST"])
def webhook_with_file():
    data = request.get_data()
    hmac_hash = hmac.new(
        SHARED_SECRET.encode("utf-8"),
        data,
        digestmod=sha256,
    )
    header_timestamp = request.headers.get("X-Usersnap-Timestamp")
    header_timestamp = int(header_timestamp)
    timestamp_bytes = header_timestamp.to_bytes(32, "little")
    hmac_hash.update(timestamp_bytes)
    expected_signature = hmac_hash.hexdigest()
header_signature = request.headers.get("X-Usersnap-Signature")

match = hmac.compare_digest(header_signature, expected_signature)

```
[block:api-header]
{
  "title": "NodeJS example using ExpressJS"
}
[/block]
The steps for verifying a request using ExpressJS are very similar to the steps described for the Flask.
The example can be found in our public Github repository. 
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "The native Webhook integration is available to premium plan users."
}
[/block]

title: "Website and design feedback"
slug: "website-and-design-feedback"
hidden: true
createdAt: "2021-02-03T21:37:01.801Z"
updatedAt: "2022-06-05T22:17:08.444Z"

[block:api-header]
{
  "title": "When and how to use Usersnap for Website & Design Feedback?"
}
[/block]
Watch this short demo to learn what Usersnap can do for you and your team.
[block:html]
{
  "html": "\n  \n\n"
}
[/block]

title: "Website inline form API"
slug: "website-embed-api-1"
hidden: false
createdAt: "2022-06-02T12:00:27.570Z"
updatedAt: "2022-06-08T09:27:27.480Z"

[block:callout]
{
  "type": "info",
  "title": "This is a technical documentation of the API",
  "body": "For more user-case oriented examples see Website inline form: API examples."
}
[/block]
[block:api-header]
{
  "title": "Installation"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "window.onUsersnapLoad = function(widgetApi) {\n  widgetApi.init({ mountNode: document.getElementById('widgetContainer') });\n}\nvar script = document.createElement('script');\nscript.defer = 1;\nscript.src = 'https://widget.usersnap.com/embed/load/<>?onload=onUsersnapLoad';\ndocument.getElementsByTagName('head')[0].appendChild(script);\n",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "API object"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "interface GlobalApi {\n  init: (options: InitOptions) => void,\n  on: (eventName: string, callback: (event: any) => void) => void,\n  off: (eventName: string, callback: (event: any) => void) => void,\n}",
      "language": "typescript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "init()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.init({\n  mountNode: document.getElementById('widgetContainer')\n  locale: 'de',\n});\n",
      "language": "javascript"
    }
  ]
}
[/block]
The init function initializes the global api. It must be called before calling any other api method.
Params

options
options.mountNode – The container element in which the widget should appear
options.locale: string – Language in which widgets should be displayed 
options.useSystemFonts: boolean – Can be used to disable loading external fonts. Defaults to false
options.useLocalStorage: boolean – Can be used to disable usage of localStorage. Defaults to true
options.nativeScreenshot: boolean – Can be used to enable the usage of the native screenshot feature. Defaults to false
options.collectGeoLocation: 'all' | 'none' – can be used to disable the collection of IP and geo location. Defaults to 'all'

Returns Promise<void>
[block:api-header]
{
  "title": "on()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "function handleSubmit() {\n  console.log('Widget was submitted')\n}\napi.off('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
Registers an event handler for widget events.
For a detailed list of available events and how they can be used see section Widget Events
Params

eventName: string – the name of the widget event you want to listen to
callback: (event: WidgetEvent) => void – callback to handle the event. The structure of the received object depends on the event.

Returns void
[block:api-header]
{
  "title": "off()"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "api.off('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
Removes an event handler
Params

eventName: string – the name of the widget event want to remove the listener from
callback: (event: WidgetEvent) => void – same callback that was used for registering the event

Returns void
[block:api-header]
{
  "title": "Widget Events"
}
[/block]
* open – A widget was opened.
* beforeSubmit– Before form values are submitted
* submit – After form values were submitted
[block:api-header]
{
  "title": "open event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "type ValueKey = 'assignee' | 'custom' | 'labels' | 'visitor'\n\ninterface OpenEvent {\n  apiKey: string,\n  api: {\n    setValue: (key: ValueKey, value: any) => void,\n  },\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that was opened
* api.setValue – method to set form values
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleWidgetOpened(event) {\n  // You can check whether a specific widget was called\n  if (event.apiKey !== '') return;\n  \n  // Set Assignee. A User with this email has to exist in your Usersnap account\n  event.api.setValue('assignee', 'mail@example.test') \n  // Set custom data\n  event.api.setValue('custom', { applicationLanguage : 'de' })\n  // Set labels\n  event.api.setValue('labels', ['bug', 'critical'])\n  // Set email\n  event.api.setValue('visitor', 'mail@example.test')\n}\napi.on('open', handleWidgetOpened)",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "beforeSubmit event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "type ValueKey = 'assignee' | 'custom' | 'labels' | 'visitor'\n\ninterface BeforeSubmitEvent {\n  apiKey: string,\n  api: {\n    setValue (key: ValueKey, value: any) => void,\n  }\n  values: {\n    assignee?: string,\n    custom?: any,\n  \tlabels?: string,\n    visitor: string,\n  }\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that will be submitted
* api.setValue – method to set form values. Allows changing values before they are submitted.
* values – values that will be submitted
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleBeforeSubmit(event) {\n  var labels = event.values.labels\n  if (labels && labels.includes('bug')) {\n  \tevent.api.setValue('assignee', 'mail@example.test')\n  }\n}\napi.on('beforeSubmit', handleBeforeSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "submit event"
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "interface CloseEvent {\n  apiKey: string,\n}",
      "language": "typescript"
    }
  ]
}
[/block]
* apiKey– API key of the widget that was submitted
Example
[block:code]
{
  "codes": [
    {
      "code": "function handleSubmit() {\n  // do something\n}\napi.on('submit', handleSubmit)",
      "language": "javascript"
    }
  ]
}
[/block]

title: "Website inline form: API examples"
slug: "website-embed-api-examples"
hidden: false
createdAt: "2022-06-03T08:33:57.537Z"
updatedAt: "2022-08-23T10:13:02.723Z"

For a technical reference of the Javascript API, see Website inline form API.
[block:api-header]
{
  "title": "Set the widget language"
}
[/block]
When initializing the JS API you can pass a language as ISO-639-1-Code.
Here are the codes for each supported language:
* cs (Czech)
* de (German)
* en (English)
* es (Spanish)
* fr (French)
* hr (Croatian)
* hu (Hungarian)
* it (Italian)
* ja(Japanese)
* ko (Korean)
* lt (Lithuanian)
* nl (Dutch)
* pl (Polish)
* pt (Portuguese)
* ro (Romanian)
* ru (Russian)
* sk (Slovak)
* sv (Slovenian)
* tr (Turkish)
* zh-CH (Chinese - traditional)
* zh-TW (Chinese - simplified)
The desired code can be passed in form of the locale parameter:
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Passing custom data"
}
[/block]
You can pass any data you like in the form of custom data to the widget. This data will be stored with every submitted feedback item.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Pre-fill the widget with information"
}
[/block]
Apart from custom data you can also set the assignee, labels and the email of the user when opening the widget.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
All those values will be visible and editable for the user if the respective field is available in the widget's form.
[block:api-header]
{
  "title": "Edit form values before they are submitted"
}
[/block]
Sometimes you want to edit or add form values before the feedback is created. This can be done by hooking into the beforeSubmit event. The following example sets the assignee to "mail@example.test" in case the label "bug" was selected.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Deactivate tracking of location and IP"
}
[/block]
If you don't want Usersnap to track the location (country, city) and IP of the users, you can deactivate this by initiating the snippet code with the parameter collectGeoLocation: 'none'.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
For any further questions, please contact our lovely customer success team.
[block:api-header]
{
  "title": "Deactivate localStorage (Cookies)"
}
[/block]
The Usersnap feedback widgets do not use cookies, but we use the localStorage to store a few parameters. From a data privacy standpoint (GDPR), the localStorage is seen similar to cookies. If you want to deactivate the localStorage for your website or web application, you can do this with the following parameters.
Please, be aware that this has a few disadvantages for your users. For example, the email is not remembered for the next time, they give feedback. Also, the assignees are not stored.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Deactivate GoogleFonts"
}
[/block]
The Usersnap feedback widgets use GoogleFonts to make the widgets look nicer. If you don't want to use GoogleFonts, you can deactivate them by setting useSystemFonts to false.
[block:code]
{
  "codes": [
    {
      "code": "\n",
      "language": "html"
    }
  ]
}
[/block]

title: "Website widget: API examples"
slug: "website-widget-api-examples"
excerpt: "for buttons and auto pop-ups"
hidden: false
createdAt: "2022-06-02T09:15:33.714Z"
updatedAt: "2022-11-28T11:32:17.116Z"

For a technical reference of the Javascript API, see Website widget API.
[block:callout]
{
  "type": "info",
  "title": "Usersnap space (global) code snippet REQUIRED",
  "body": "Please, be aware that this API needs the standard Usersnap snippet code (the space (global) code snippet). This snippet is a code you or your developer have to install once and then, you can decide which feedback widget should be displayed on what pages. The following API examples are ONLY for the standard Usersnap snippet installations."
}
[/block]
[block:api-header]
{
  "title": "Set the widget language"
}
[/block]
When initializing the JS API you can pass a language as ISO-639-1-Code.
Here are the codes for each supported language:
* cs (Czech)
* de (German)
* en (English)
* es (Spanish)
* fr (French)
* hr (Croatian)
* hu (Hungarian)
* it (Italian)
* ja(Japanese)
* ko (Korean)
* lt (Lithuanian)
* nl (Dutch)
* pl (Polish)
* pt (Portuguese)
* ro (Romanian)
* ru (Russian)
* sk (Slovak)
* sv (Slovenian)
* tr (Turkish)
* zh-TW (Chinese - traditional)
* zh-CH (Chinese - simplified)
The desired code can be passed in form of the locale parameter:
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Passing user information"
}
[/block]
You can pass user information to Usersnap to increase the options to target specific user groups and provide targeted experiences.
To specify/target a concrete user we support two parameters:
* email: The email will be pre-filled in the widget.
If no email field is configured, it still will be stored with the feedback
* userId: If a userId is passed, the user counts as "logged in user" for targeting purposes.
The ID is not stored.
To specify/target a segment you can use either predefined, such as the followings.
* plan, role, userGroup
However, also your arbitrary parameters can be used such as  mySegment: 'cohort-A'
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
If you want to store more user data, you can pass it as custom data.
[block:api-header]
{
  "title": "Passing custom data"
}
[/block]
You can pass any data you like in the form of custom data to the widget. This data will be stored with every submitted feedback item.
There are two options to achieve this.
Option 1: When initializing the widget
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
Option 2: On opening the widget
You can choose this option e.g. if you want to pass data that is only available after loading Usersnap.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Show a button of a specific project via the API"
}
[/block]
Sometimes, you don't want to use the targeting to show a specific button but prefer to display a specific feedback button with the API. In this case, go to "Configure" and click on the tab "Target". Change the audience to "Nobody" and implement this code snippet on the pages, where you want to display the feedback button of a specific widget.
Get the Project-API-Key from the tab "Publish".
[block:callout]
{
  "type": "warning",
  "title": "Be aware",
  "body": "Don't forget to set the project live.\n\nYou need to choose in the Configuration - Target as the activation method \"button\" to show the button via the API."
}
[/block]
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Pre-fill the widget with information"
}
[/block]
Apart from custom data you can also set the assignee, labels and the email of the user when opening the widget.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
All those values will be visible and editable for the user if the respective field is available in the widget's form.
[block:api-header]
{
  "title": "Trigger a widget from code (custom feedback button)"
}
[/block]
You can trigger widgets from code by calling api.logEvent(). This call can be embedded in any logic you can come up with.
E.g. after a successful checkout or when your code detects an error on the page.
First, setup a widget to open up when a specific event is logged:

Go to your project's "Configuration" page -> "Targeting" tab.
Look for "Trigger & frequency" section of "Targeting" tab. 
   For "Select how you would like to activate this widget" choose "API event". (See screenshot below)
In "Event" field enter your desired event name e.g. my-awesome-event (do not use quotes) and make sure to hit the "Save" button on the bottom of the page. 

Your project needs to be set live (top right corner of page).
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/e253dda-api_event.png",
        "api event.png",
        806,
        222,
        "#f5f5f8"
      ]
    }
  ]
}
[/block]
In your code you simply call api.logEvent('my-awesome-event') whenever you want to open the widget.
The following code showcases this with the implementation of a custom feedback button.
[block:code]
{
  "codes": [
    {
      "code": "\n  Give Feedback\n\n",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Open a widget with a hot key"
}
[/block]
By using api.logEvent it is also easily possible to define your custom hot key for opening the widget.
First configure the API event trigger as seen in the previous example. After that, use the following snippet to register an event handler that opens the widget. 
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "When the Usersnap browser extension is installed, the short key Alt + U will call it out.\nPlease replace the Alt + U to another combination.",
  "title": "Attention:"
}
[/block]
[block:api-header]
{
  "title": "Edit form values before they are submitted"
}
[/block]
Sometimes you want to edit or add form values before the feedback is created. This can be done by hooking into the beforeSubmit event. The following example sets the assignee to "mail@example.test" in case the label "bug" was selected.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Deactivate tracking of location and IP"
}
[/block]
If you don't want Usersnap to track the IP and location (country, city) of the users, you can deactivate this by initiating the snippet code with the parameter collectGeoLocation: 'none'.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
For any further questions, please contact our lovely customer success team.
[block:api-header]
{
  "title": "Deactivate localStorage (Cookies)"
}
[/block]
The Usersnap feedback widgets do not use cookies, but we use the localStorage to store a few parameters. From a data privacy standpoint (GDPR), the localStorage is seen similar to cookies. If you want to deactivate the localStorage for your website or web application, you can do this with the following parameters.
Please, be aware that this has a few disadvantages for your users. For example, the email is not remembered for the next time, they give feedback. Also, the assignees are not stored.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Deactivate GoogleFonts"
}
[/block]
The Usersnap feedback widgets use GoogleFonts to make the widgets look nicer. If you don't want to use GoogleFonts, you can deactivate them by setting useSystemFonts to true.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html"
    }
  ]
}
[/block]
[block:api-header]
{
  "title": "Native screenshot feature"
}
[/block]
Please go to Taking screenshots without our rendering technology for detailed information.

title: "What can you do with the space (global) code snippet?"
slug: "what-can-you-do"
hidden: false
createdAt: "2022-05-24T10:45:37.941Z"
updatedAt: "2022-11-28T11:25:57.082Z"

[block:api-header]
{
  "title": "Here are a few things you can do with it."
}
[/block]
* Design your own feedback button


Display the feedback button only to logged-in users


Collect logged-in users' email addresses


Pass custom data with the feedback items) 


Passing user information 


What cool things can I do with the API?


[block:api-header]
{
  "title": "Design your own feedback button"
}
[/block]
Open the widget with your own feedback button. 
[block:api-header]
{
  "title": "Display the feedback button only to logged-in users"
}
[/block]
Show the button only to logged-in users 
[block:api-header]
{
  "title": "Collect logged-in users' email addresses"
}
[/block]
You can collect the email address of a logged-in user even when the email field is hidden.
Here are the steps to take:
1) Hide the email field of your widget.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/00d7ca0-hide_email_field.png",
        "hide email field.png",
        906,
        190,
        "#f4f5f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
2) Set the default user values when initializing the widget.
"user": User data (email in this case) from known users.
[block:code]
{
  "codes": [
    {
      "code": "",
      "language": "html",
      "name": "Installation snippet"
    }
  ]
}
[/block]
3) Define when you want the widget to be displayed. It could be a time based or event-based trigger.
[block:api-header]
{
  "title": "Pass custom data with the feedback items"
}
[/block]
With “custom data” you can easily pass any additional data that you’ve already collected about your users or their applications such as the language, application version or the user-id. It will be visible in your dashboard and be helpful to have more insights or background knowledge for the reported issue.
This is how you can pass custom data.
[block:api-header]
{
  "title": "Passing user information"
}
[/block]
You can pass user information to Usersnap to increase the options to target specific user groups and provide targeted experiences.
This is how you can pass the user information.

title: "What's New?"
slug: "whats-new"
hidden: false
createdAt: "2021-02-03T05:40:18.809Z"
updatedAt: "2022-09-18T19:54:22.946Z"

Visit our product news and changelog here. New releases every 2 weeks!
Or, in your dashboard's main navigation, you can click "Product news" to read about new features, use cases, and improvements.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/7aedf9c-Screenshot_2022-09-18_at_21.47.10.png",
        "Screenshot 2022-09-18 at 21.47.10.png",
        2876,
        1638,
        "#000000"
      ]
    }
  ]
}
[/block]
If you have any suggestions, please use our feature request widget in the Usersnap dashboard to submit your ideas.

title: "Widget conditional behaviour"
slug: "widget-conditional-behaviour"
hidden: false
createdAt: "2022-07-28T05:40:19.854Z"
updatedAt: "2023-03-01T23:33:56.817Z"

[block:api-header]
{
  "title": "Conditional follow-up question"
}
[/block]
Widgets with a rating field, i.e. an NPS, thumbs, smileys, and stars can include a followed-up question based on the scores given by a submitter.
For instance, when having a thumbs field, one can define a followed-up question according to thumbs up or down.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/4ac12a9-Conditional_question_2.png",
        "Conditional question 2.png",
        906,
        701,
        "#eef2f6"
      ]
    }
  ]
}
[/block]
This is how the widget and the feedback look like.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/bab8702-Conditional_question_3.png",
        "Conditional question 3.png",
        421,
        479,
        "#e5e6f2"
      ]
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ffe5425-Conditional_question_5.png",
        "Conditional question 5.png",
        1826,
        762,
        "#f5f7f9"
      ]
    }
  ]
}
[/block]
This feature helps you dig deeper into customers' feedback with one single widget.
It is the same for other rating fields as well.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/6380e57-Conditional_question_1.png",
        "Conditional question 1.png",
        908,
        705,
        "#eef2f6"
      ]
    }
  ]
}
[/block]
You have the flexibility to choose whether the follow-up message is required or optional, and you can easily switch between the two options:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/682a230-optional-follow-up.png",
        "optional-follow-up.png",
        1610,
        928,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Widget image component"
slug: "widget-image-component"
hidden: false
createdAt: "2022-09-12T12:29:40.706Z"
updatedAt: "2022-09-14T10:15:48.994Z"

One or more images can be easily added to your widgets. The size of the image on the widget can be adjusted: small, regular, full width. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2218e82-image_1.png",
        "image 1.png",
        903,
        623,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/ed3c7a9-image_2.png",
        "image 2.png",
        1570,
        814,
        "#000000"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
This opens up new use cases for you and your team! For example, the widget can be used as a new product announcement. See our example:
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/931f668-Screenshot_2022-09-14_at_12.15.35.png",
        "Screenshot 2022-09-14 at 12.15.35.png",
        1990,
        1062,
        "#000000"
      ]
    }
  ]
}
[/block]
The image field can also help you specify the feedback you are seeking. Users can more clearly understand what your survey is about. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/637ffcc-Image_on_survey.png",
        "Image on survey.png",
        3024,
        1910,
        "#000000"
      ]
    }
  ]
}
[/block]

title: "Widget translations"
slug: "widget-language-strings"
excerpt: "Widget language strings"
hidden: false
createdAt: "2021-09-15T11:36:55.837Z"
updatedAt: "2023-01-19T09:49:59.352Z"

[block:api-header]
{
  "title": "Custom translations"
}
[/block]
The widget language is "Custom translations+English" by default. This mode offers the possibility to compose your own text, you can easily define translations for most input on the widget.
And you can effortlessly edit the custom text in the target language.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d5bcd81-Language_string_7.png",
        "Language string 7.png",
        229,
        396,
        "#f4f6fb"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Don't forget to cover all labels and placeholders for all your languages.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1406020-language_strings.png",
        "language strings.png",
        910,
        356,
        "#f6f7f8"
      ]
    }
  ]
}
[/block]
Remember that you can also use custom text for all parts, such as the intro and outro of the widget.
Additionally, this mode allows you to enforce showing your widget in one specific language: to do that you just need to have one language selected, and then the widget will always be shown in this language no matter what the browser language is. 
Alternatively, you can also enforce specific language using our Javascript API, examples of which can be found here.
[block:callout]
{
  "type": "info",
  "body": "Each project has slots for 2 strings by default. \nThe premium plan allows you to have more than 2 languages.",
  "title": "It is also possible to upgrade!"
}
[/block]
[block:api-header]
{
  "title": "Automatic translations"
}
[/block]
When selecting the content offered in the dashboard please set the language string to "Automatic translations" so all 21 supported languages will be in place.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/66172de-Language_string_8.png",
        "Language string 8.png",
        426,
        165,
        "#dfe4f0"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
In this way, the widget will be shown in the users' browser language.
If the browser language is not supported yet, it will fall back to the default language which is English.
In this mode, you can still use your own text but then this text will be used at all times regardless of the browser language.  
This can, of course, lead to a mixture of 2 different languages. In order to avoid that, we recommend customizing your text for each language or configuring the widget as being available only in one specific language. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5fda8b4-Language_string_9.png",
        "Language string 9.png",
        227,
        387,
        "#fbfbfc"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Both outcomes can be achieved in the "custom" mode and you can take a look at here for detailed info.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9656edb-Language_string_6.png",
        "Language string 6.png",
        255,
        228,
        "#f6f7f7"
      ]
    }
  ]
}
[/block]

title: "Widget translations (Updated...)"
slug: "widget-translations-updated"
excerpt: "Widget language strings"
hidden: true
createdAt: "2023-01-19T09:50:11.581Z"
updatedAt: "2023-01-19T09:55:41.814Z"

[block:api-header]
{
  "title": "Custom translations"
}
[/block]
[block:callout]
{
  "type": "info",
  "body": "Please note that our Scale and Ultimate plan users have access to multi-lingual translations."
}
[/block]
The widget language is "Custom translations+English" by default. This mode offers the possibility to compose your own text, you can easily define translations for most input on the widget.
And you can effortlessly edit the custom text in the target language.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/d5bcd81-Language_string_7.png",
        "Language string 7.png",
        229,
        396,
        "#f4f6fb"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Don't forget to cover all labels and placeholders for all your languages.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1406020-language_strings.png",
        "language strings.png",
        910,
        356,
        "#f6f7f8"
      ]
    }
  ]
}
[/block]
Remember that you can also use custom text for all parts, such as the intro and outro of the widget.
Additionally, this mode allows you to enforce showing your widget in one specific language: to do that you just need to have one language selected, and then the widget will always be shown in this language no matter what the browser language is. 
Alternatively, you can also enforce specific language using our Javascript API, examples of which can be found here.
[block:callout]
{
  "type": "info",
  "body": "Each project has slots for 2 strings by default. \nThe premium plan allows you to have more than 2 languages.",
  "title": "It is also possible to upgrade!"
}
[/block]
[block:api-header]
{
  "title": "Automatic translations"
}
[/block]
When selecting the content offered in the dashboard please set the language string to "Automatic translations" so all 21 supported languages will be in place.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/66172de-Language_string_8.png",
        "Language string 8.png",
        426,
        165,
        "#dfe4f0"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
In this way, the widget will be shown in the users' browser language.
If the browser language is not supported yet, it will fall back to the default language which is English.
In this mode, you can still use your own text but then this text will be used at all times regardless of the browser language.  
This can, of course, lead to a mixture of 2 different languages. In order to avoid that, we recommend customizing your text for each language or configuring the widget as being available only in one specific language. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/5fda8b4-Language_string_9.png",
        "Language string 9.png",
        227,
        387,
        "#fbfbfc"
      ],
      "sizing": "smart"
    }
  ]
}
[/block]
Both outcomes can be achieved in the "custom" mode and you can take a look at here for detailed info.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/9656edb-Language_string_6.png",
        "Language string 6.png",
        255,
        228,
        "#f6f7f7"
      ]
    }
  ]
}
[/block]

title: "Zapier"
slug: "zapier"
hidden: false
createdAt: "2021-02-01T21:32:15.270Z"
updatedAt: "2021-09-28T07:16:25.167Z"

[block:api-header]
{
  "title": "Connect Usersnap via Zapier with thousands of solutions"
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Zapier subscription REQUIRED",
  "body": "This connection solution is amazing, but a paid subscription is necessary to use it to its full extent.\nFor details about the subscription to different plans, please go to Usersnap Pricing."
}
[/block]
Zapier is a great solution to connect different software solutions via their APIs.
 Here's how it works 
Let's assume, you already have a Zapier account.
Open the Usersnap integration page on the Zapier website and choose Usersnap as the software solution to start with.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1212d9d-0c8acbd-Zen3.png",
        "0c8acbd-Zen3.png",
        1517,
        992,
        "#efeef7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
It is highly recommended to have feedback items in the chosen Usersnap project before the zap is built. Tickets with all fields filled out and also with screenshots included will help Zapier to get all elements successfully. Don't forget to hit the "Refresh Fields" button.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/47ba340-ba6cd88-Zen8.png",
        "ba6cd88-Zen8.png",
        1010,
        941,
        "#edf2f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Determine the best sample to find data.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/cb76e29-f0aec42-Zen9.png",
        "f0aec42-Zen9.png",
        915,
        937,
        "#f8f9fa"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
The next step is to choose the solution you want to send the feedback item from Usersnap to. You can pick one of the thousands of existing apps in Zapier.
[block:api-header]
{
  "title": "Automatic delivery via Zapier"
}
[/block]
You can have your screens automatically delivered to your connected third-party tool with an active zap. If you do not have a Zapier account yet, simply sign up for a free plan. However please be aware that Zapier has distinct tools set as premium Apps which can only be integrated when you own a paying Zapier account.
Simply follow the steps to take in Zapier in order to complete creating an account then you are all set to make your own zaps.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/f478aee-zapier1.png",
        "zapier1.png",
        1305,
        712,
        "#f6f7f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
After a new project is created, by default there will be a sample feedback item in the feedback list. This item contains all the values Zapier might request already so that the integration can fetch all elements successfully right away. 
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/30d8fb6-zapier2.png",
        "zapier2.png",
        1903,
        922,
        "#f4f4f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Happy ZAP'ing.

title: "Zendesk"
slug: "zendesk-1"
excerpt: "Native integration"
hidden: false
createdAt: "2021-03-11T13:03:04.095Z"
updatedAt: "2023-02-03T07:09:51.122Z"

[block:api-header]
{
  "title": "Connect Usersnap with Zendesk"
}
[/block]
Zendesk and Usersnap can be easily connected via the native integration.
It is offered to the company plan subscribers and enterprise customers.
 Here's how it works 
Go to your Usersnap Platform project’s Integration tab and select Zendesk from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1200bee-Zendesk.png",
        "Zendesk.png",
        1127,
        745,
        "#f3f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Connect your Zendesk Account to Usersnap by putting in its subdomain.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1d564a1-Zendesk_2.png",
        "Zendesk 2.png",
        680,
        265,
        "#f4f6f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form and configure the integration according to your likings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/64d0a80-Zendesk_3.png",
        "Zendesk 3.png",
        593,
        792,
        "#f5f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can already see the feedback items pushed to Zendesk.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2e9a054-Zendesk3.png",
        "Zendesk3.png",
        1069,
        816,
        "#f0f0ec"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
[block:callout]
{
  "type": "info",
  "title": "Attention:",
  "body": "The native Zendesk integration is available to the company plan or higher plan users."
}
[/block]

title: "Zendesk (Update...)"
slug: "zendesk-update"
excerpt: "Native integration"
hidden: true
createdAt: "2023-01-19T09:30:12.537Z"
updatedAt: "2023-02-08T09:54:14.519Z"

[block:api-header]
{
  "title": "Connect Usersnap with Zendesk"
}
[/block]
Zendesk and Usersnap can be easily connected via the native integration.
 Here's how it works 
Go to your Usersnap Platform project’s Integration tab and select Zendesk from the grid.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1200bee-Zendesk.png",
        "Zendesk.png",
        1127,
        745,
        "#f3f6f6"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Connect your Zendesk Account to Usersnap by putting in its subdomain.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/1d564a1-Zendesk_2.png",
        "Zendesk 2.png",
        680,
        265,
        "#f4f6f9"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Fill out the form and configure the integration according to your likings.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/64d0a80-Zendesk_3.png",
        "Zendesk 3.png",
        593,
        792,
        "#f5f5f7"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
Now you can already see the feedback items pushed to Zendesk.
[block:image]
{
  "images": [
    {
      "image": [
        "https://files.readme.io/2e9a054-Zendesk3.png",
        "Zendesk3.png",
        1069,
        816,
        "#f0f0ec"
      ],
      "sizing": "80"
    }
  ]
}
[/block]
